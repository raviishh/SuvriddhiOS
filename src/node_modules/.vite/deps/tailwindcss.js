import "./chunk-G3PMV62Z.js";

// node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs
var l = { inherit: "inherit", current: "currentcolor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "oklch(98.4% 0.003 247.858)", 100: "oklch(96.8% 0.007 247.896)", 200: "oklch(92.9% 0.013 255.508)", 300: "oklch(86.9% 0.022 252.894)", 400: "oklch(70.4% 0.04 256.788)", 500: "oklch(55.4% 0.046 257.417)", 600: "oklch(44.6% 0.043 257.281)", 700: "oklch(37.2% 0.044 257.287)", 800: "oklch(27.9% 0.041 260.031)", 900: "oklch(20.8% 0.042 265.755)", 950: "oklch(12.9% 0.042 264.695)" }, gray: { 50: "oklch(98.5% 0.002 247.839)", 100: "oklch(96.7% 0.003 264.542)", 200: "oklch(92.8% 0.006 264.531)", 300: "oklch(87.2% 0.01 258.338)", 400: "oklch(70.7% 0.022 261.325)", 500: "oklch(55.1% 0.027 264.364)", 600: "oklch(44.6% 0.03 256.802)", 700: "oklch(37.3% 0.034 259.733)", 800: "oklch(27.8% 0.033 256.848)", 900: "oklch(21% 0.034 264.665)", 950: "oklch(13% 0.028 261.692)" }, zinc: { 50: "oklch(98.5% 0 0)", 100: "oklch(96.7% 0.001 286.375)", 200: "oklch(92% 0.004 286.32)", 300: "oklch(87.1% 0.006 286.286)", 400: "oklch(70.5% 0.015 286.067)", 500: "oklch(55.2% 0.016 285.938)", 600: "oklch(44.2% 0.017 285.786)", 700: "oklch(37% 0.013 285.805)", 800: "oklch(27.4% 0.006 286.033)", 900: "oklch(21% 0.006 285.885)", 950: "oklch(14.1% 0.005 285.823)" }, neutral: { 50: "oklch(98.5% 0 0)", 100: "oklch(97% 0 0)", 200: "oklch(92.2% 0 0)", 300: "oklch(87% 0 0)", 400: "oklch(70.8% 0 0)", 500: "oklch(55.6% 0 0)", 600: "oklch(43.9% 0 0)", 700: "oklch(37.1% 0 0)", 800: "oklch(26.9% 0 0)", 900: "oklch(20.5% 0 0)", 950: "oklch(14.5% 0 0)" }, stone: { 50: "oklch(98.5% 0.001 106.423)", 100: "oklch(97% 0.001 106.424)", 200: "oklch(92.3% 0.003 48.717)", 300: "oklch(86.9% 0.005 56.366)", 400: "oklch(70.9% 0.01 56.259)", 500: "oklch(55.3% 0.013 58.071)", 600: "oklch(44.4% 0.011 73.639)", 700: "oklch(37.4% 0.01 67.558)", 800: "oklch(26.8% 0.007 34.298)", 900: "oklch(21.6% 0.006 56.043)", 950: "oklch(14.7% 0.004 49.25)" }, red: { 50: "oklch(97.1% 0.013 17.38)", 100: "oklch(93.6% 0.032 17.717)", 200: "oklch(88.5% 0.062 18.334)", 300: "oklch(80.8% 0.114 19.571)", 400: "oklch(70.4% 0.191 22.216)", 500: "oklch(63.7% 0.237 25.331)", 600: "oklch(57.7% 0.245 27.325)", 700: "oklch(50.5% 0.213 27.518)", 800: "oklch(44.4% 0.177 26.899)", 900: "oklch(39.6% 0.141 25.723)", 950: "oklch(25.8% 0.092 26.042)" }, orange: { 50: "oklch(98% 0.016 73.684)", 100: "oklch(95.4% 0.038 75.164)", 200: "oklch(90.1% 0.076 70.697)", 300: "oklch(83.7% 0.128 66.29)", 400: "oklch(75% 0.183 55.934)", 500: "oklch(70.5% 0.213 47.604)", 600: "oklch(64.6% 0.222 41.116)", 700: "oklch(55.3% 0.195 38.402)", 800: "oklch(47% 0.157 37.304)", 900: "oklch(40.8% 0.123 38.172)", 950: "oklch(26.6% 0.079 36.259)" }, amber: { 50: "oklch(98.7% 0.022 95.277)", 100: "oklch(96.2% 0.059 95.617)", 200: "oklch(92.4% 0.12 95.746)", 300: "oklch(87.9% 0.169 91.605)", 400: "oklch(82.8% 0.189 84.429)", 500: "oklch(76.9% 0.188 70.08)", 600: "oklch(66.6% 0.179 58.318)", 700: "oklch(55.5% 0.163 48.998)", 800: "oklch(47.3% 0.137 46.201)", 900: "oklch(41.4% 0.112 45.904)", 950: "oklch(27.9% 0.077 45.635)" }, yellow: { 50: "oklch(98.7% 0.026 102.212)", 100: "oklch(97.3% 0.071 103.193)", 200: "oklch(94.5% 0.129 101.54)", 300: "oklch(90.5% 0.182 98.111)", 400: "oklch(85.2% 0.199 91.936)", 500: "oklch(79.5% 0.184 86.047)", 600: "oklch(68.1% 0.162 75.834)", 700: "oklch(55.4% 0.135 66.442)", 800: "oklch(47.6% 0.114 61.907)", 900: "oklch(42.1% 0.095 57.708)", 950: "oklch(28.6% 0.066 53.813)" }, lime: { 50: "oklch(98.6% 0.031 120.757)", 100: "oklch(96.7% 0.067 122.328)", 200: "oklch(93.8% 0.127 124.321)", 300: "oklch(89.7% 0.196 126.665)", 400: "oklch(84.1% 0.238 128.85)", 500: "oklch(76.8% 0.233 130.85)", 600: "oklch(64.8% 0.2 131.684)", 700: "oklch(53.2% 0.157 131.589)", 800: "oklch(45.3% 0.124 130.933)", 900: "oklch(40.5% 0.101 131.063)", 950: "oklch(27.4% 0.072 132.109)" }, green: { 50: "oklch(98.2% 0.018 155.826)", 100: "oklch(96.2% 0.044 156.743)", 200: "oklch(92.5% 0.084 155.995)", 300: "oklch(87.1% 0.15 154.449)", 400: "oklch(79.2% 0.209 151.711)", 500: "oklch(72.3% 0.219 149.579)", 600: "oklch(62.7% 0.194 149.214)", 700: "oklch(52.7% 0.154 150.069)", 800: "oklch(44.8% 0.119 151.328)", 900: "oklch(39.3% 0.095 152.535)", 950: "oklch(26.6% 0.065 152.934)" }, emerald: { 50: "oklch(97.9% 0.021 166.113)", 100: "oklch(95% 0.052 163.051)", 200: "oklch(90.5% 0.093 164.15)", 300: "oklch(84.5% 0.143 164.978)", 400: "oklch(76.5% 0.177 163.223)", 500: "oklch(69.6% 0.17 162.48)", 600: "oklch(59.6% 0.145 163.225)", 700: "oklch(50.8% 0.118 165.612)", 800: "oklch(43.2% 0.095 166.913)", 900: "oklch(37.8% 0.077 168.94)", 950: "oklch(26.2% 0.051 172.552)" }, teal: { 50: "oklch(98.4% 0.014 180.72)", 100: "oklch(95.3% 0.051 180.801)", 200: "oklch(91% 0.096 180.426)", 300: "oklch(85.5% 0.138 181.071)", 400: "oklch(77.7% 0.152 181.912)", 500: "oklch(70.4% 0.14 182.503)", 600: "oklch(60% 0.118 184.704)", 700: "oklch(51.1% 0.096 186.391)", 800: "oklch(43.7% 0.078 188.216)", 900: "oklch(38.6% 0.063 188.416)", 950: "oklch(27.7% 0.046 192.524)" }, cyan: { 50: "oklch(98.4% 0.019 200.873)", 100: "oklch(95.6% 0.045 203.388)", 200: "oklch(91.7% 0.08 205.041)", 300: "oklch(86.5% 0.127 207.078)", 400: "oklch(78.9% 0.154 211.53)", 500: "oklch(71.5% 0.143 215.221)", 600: "oklch(60.9% 0.126 221.723)", 700: "oklch(52% 0.105 223.128)", 800: "oklch(45% 0.085 224.283)", 900: "oklch(39.8% 0.07 227.392)", 950: "oklch(30.2% 0.056 229.695)" }, sky: { 50: "oklch(97.7% 0.013 236.62)", 100: "oklch(95.1% 0.026 236.824)", 200: "oklch(90.1% 0.058 230.902)", 300: "oklch(82.8% 0.111 230.318)", 400: "oklch(74.6% 0.16 232.661)", 500: "oklch(68.5% 0.169 237.323)", 600: "oklch(58.8% 0.158 241.966)", 700: "oklch(50% 0.134 242.749)", 800: "oklch(44.3% 0.11 240.79)", 900: "oklch(39.1% 0.09 240.876)", 950: "oklch(29.3% 0.066 243.157)" }, blue: { 50: "oklch(97% 0.014 254.604)", 100: "oklch(93.2% 0.032 255.585)", 200: "oklch(88.2% 0.059 254.128)", 300: "oklch(80.9% 0.105 251.813)", 400: "oklch(70.7% 0.165 254.624)", 500: "oklch(62.3% 0.214 259.815)", 600: "oklch(54.6% 0.245 262.881)", 700: "oklch(48.8% 0.243 264.376)", 800: "oklch(42.4% 0.199 265.638)", 900: "oklch(37.9% 0.146 265.522)", 950: "oklch(28.2% 0.091 267.935)" }, indigo: { 50: "oklch(96.2% 0.018 272.314)", 100: "oklch(93% 0.034 272.788)", 200: "oklch(87% 0.065 274.039)", 300: "oklch(78.5% 0.115 274.713)", 400: "oklch(67.3% 0.182 276.935)", 500: "oklch(58.5% 0.233 277.117)", 600: "oklch(51.1% 0.262 276.966)", 700: "oklch(45.7% 0.24 277.023)", 800: "oklch(39.8% 0.195 277.366)", 900: "oklch(35.9% 0.144 278.697)", 950: "oklch(25.7% 0.09 281.288)" }, violet: { 50: "oklch(96.9% 0.016 293.756)", 100: "oklch(94.3% 0.029 294.588)", 200: "oklch(89.4% 0.057 293.283)", 300: "oklch(81.1% 0.111 293.571)", 400: "oklch(70.2% 0.183 293.541)", 500: "oklch(60.6% 0.25 292.717)", 600: "oklch(54.1% 0.281 293.009)", 700: "oklch(49.1% 0.27 292.581)", 800: "oklch(43.2% 0.232 292.759)", 900: "oklch(38% 0.189 293.745)", 950: "oklch(28.3% 0.141 291.089)" }, purple: { 50: "oklch(97.7% 0.014 308.299)", 100: "oklch(94.6% 0.033 307.174)", 200: "oklch(90.2% 0.063 306.703)", 300: "oklch(82.7% 0.119 306.383)", 400: "oklch(71.4% 0.203 305.504)", 500: "oklch(62.7% 0.265 303.9)", 600: "oklch(55.8% 0.288 302.321)", 700: "oklch(49.6% 0.265 301.924)", 800: "oklch(43.8% 0.218 303.724)", 900: "oklch(38.1% 0.176 304.987)", 950: "oklch(29.1% 0.149 302.717)" }, fuchsia: { 50: "oklch(97.7% 0.017 320.058)", 100: "oklch(95.2% 0.037 318.852)", 200: "oklch(90.3% 0.076 319.62)", 300: "oklch(83.3% 0.145 321.434)", 400: "oklch(74% 0.238 322.16)", 500: "oklch(66.7% 0.295 322.15)", 600: "oklch(59.1% 0.293 322.896)", 700: "oklch(51.8% 0.253 323.949)", 800: "oklch(45.2% 0.211 324.591)", 900: "oklch(40.1% 0.17 325.612)", 950: "oklch(29.3% 0.136 325.661)" }, pink: { 50: "oklch(97.1% 0.014 343.198)", 100: "oklch(94.8% 0.028 342.258)", 200: "oklch(89.9% 0.061 343.231)", 300: "oklch(82.3% 0.12 346.018)", 400: "oklch(71.8% 0.202 349.761)", 500: "oklch(65.6% 0.241 354.308)", 600: "oklch(59.2% 0.249 0.584)", 700: "oklch(52.5% 0.223 3.958)", 800: "oklch(45.9% 0.187 3.815)", 900: "oklch(40.8% 0.153 2.432)", 950: "oklch(28.4% 0.109 3.907)" }, rose: { 50: "oklch(96.9% 0.015 12.422)", 100: "oklch(94.1% 0.03 12.58)", 200: "oklch(89.2% 0.058 10.001)", 300: "oklch(81% 0.117 11.638)", 400: "oklch(71.2% 0.194 13.428)", 500: "oklch(64.5% 0.246 16.439)", 600: "oklch(58.6% 0.253 17.585)", 700: "oklch(51.4% 0.222 16.935)", 800: "oklch(45.5% 0.188 13.697)", 900: "oklch(41% 0.159 10.272)", 950: "oklch(27.1% 0.105 12.094)" } };

// node_modules/tailwindcss/dist/chunk-GFBUASX3.mjs
var _ = /* @__PURE__ */ new Set(["black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen", "transparent", "currentcolor", "canvas", "canvastext", "linktext", "visitedtext", "activetext", "buttonface", "buttontext", "buttonborder", "field", "fieldtext", "highlight", "highlighttext", "selecteditem", "selecteditemtext", "mark", "marktext", "graytext", "accentcolor", "accentcolortext"]);
var U = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function S(e) {
  return e.charCodeAt(0) === 35 || U.test(e) || _.has(e.toLowerCase());
}
var A = ["calc", "min", "max", "clamp", "mod", "rem", "sin", "cos", "tan", "asin", "acos", "atan", "atan2", "pow", "sqrt", "hypot", "log", "exp", "round"];
function b(e) {
  return e.indexOf("(") !== -1 && A.some((t) => e.includes(`${t}(`));
}
function oe(e) {
  if (!A.some((n) => e.includes(n))) return e;
  let t = "", r = [], s = null, m = null;
  for (let n = 0; n < e.length; n++) {
    let a = e.charCodeAt(n);
    if (a >= 48 && a <= 57 || s !== null && (a === 37 || a >= 97 && a <= 122 || a >= 65 && a <= 90) ? s = n : (m = s, s = null), a === 40) {
      t += e[n];
      let i = n;
      for (let p = n - 1; p >= 0; p--) {
        let c = e.charCodeAt(p);
        if (c >= 48 && c <= 57) i = p;
        else if (c >= 97 && c <= 122) i = p;
        else break;
      }
      let o = e.slice(i, n);
      if (A.includes(o)) {
        r.unshift(true);
        continue;
      } else if (r[0] && o === "") {
        r.unshift(true);
        continue;
      }
      r.unshift(false);
      continue;
    } else if (a === 41) t += e[n], r.shift();
    else if (a === 44 && r[0]) {
      t += ", ";
      continue;
    } else {
      if (a === 32 && r[0] && t.charCodeAt(t.length - 1) === 32) continue;
      if ((a === 43 || a === 42 || a === 47 || a === 45) && r[0]) {
        let i = t.trimEnd(), o = i.charCodeAt(i.length - 1), p = i.charCodeAt(i.length - 2), c = e.charCodeAt(n + 1);
        if ((o === 101 || o === 69) && p >= 48 && p <= 57) {
          t += e[n];
          continue;
        } else if (o === 43 || o === 42 || o === 47 || o === 45) {
          t += e[n];
          continue;
        } else if (o === 40 || o === 44) {
          t += e[n];
          continue;
        } else e.charCodeAt(n - 1) === 32 ? t += `${e[n]} ` : o >= 48 && o <= 57 || c >= 48 && c <= 57 || o === 41 || c === 40 || c === 43 || c === 42 || c === 47 || c === 45 || m !== null && m === n - 1 ? t += ` ${e[n]} ` : t += e[n];
      } else t += e[n];
    }
  }
  return t;
}
var E = new Uint8Array(256);
function d(e, t) {
  let r = 0, s = [], m = 0, n = e.length, a = t.charCodeAt(0);
  for (let i = 0; i < n; i++) {
    let o = e.charCodeAt(i);
    if (r === 0 && o === a) {
      s.push(e.slice(m, i)), m = i + 1;
      continue;
    }
    switch (o) {
      case 92:
        i += 1;
        break;
      case 39:
      case 34:
        for (; ++i < n; ) {
          let p = e.charCodeAt(i);
          if (p === 92) {
            i += 1;
            continue;
          }
          if (p === o) break;
        }
        break;
      case 40:
        E[r] = 41, r++;
        break;
      case 91:
        E[r] = 93, r++;
        break;
      case 123:
        E[r] = 125, r++;
        break;
      case 93:
      case 125:
      case 41:
        r > 0 && o === E[r - 1] && r--;
        break;
    }
  }
  return s.push(e.slice(m)), s;
}
var P = { color: S, length: y, percentage: C, ratio: G, number: v, integer: u, url: R, position: K, "bg-size": Y, "line-width": T, image: F, "family-name": M, "generic-name": H, "absolute-size": $, "relative-size": W, angle: X, vector: te };
function me(e, t) {
  if (e.startsWith("var(")) return null;
  for (let r of t) if (P[r]?.(e)) return r;
  return null;
}
var z = /^url\(.*\)$/;
function R(e) {
  return z.test(e);
}
function T(e) {
  return d(e, " ").every((t) => y(t) || v(t) || t === "thin" || t === "medium" || t === "thick");
}
var D = /^(?:element|image|cross-fade|image-set)\(/;
var I = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function F(e) {
  let t = 0;
  for (let r of d(e, ",")) if (!r.startsWith("var(")) {
    if (R(r)) {
      t += 1;
      continue;
    }
    if (I.test(r)) {
      t += 1;
      continue;
    }
    if (D.test(r)) {
      t += 1;
      continue;
    }
    return false;
  }
  return t > 0;
}
function H(e) {
  return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function M(e) {
  let t = 0;
  for (let r of d(e, ",")) {
    let s = r.charCodeAt(0);
    if (s >= 48 && s <= 57) return false;
    r.startsWith("var(") || (t += 1);
  }
  return t > 0;
}
function $(e) {
  return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function W(e) {
  return e === "larger" || e === "smaller";
}
var x = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/;
var B = new RegExp(`^${x.source}$`);
function v(e) {
  return B.test(e) || b(e);
}
var q = new RegExp(`^${x.source}%$`);
function C(e) {
  return q.test(e) || b(e);
}
var V = new RegExp(`^${x.source}s*/s*${x.source}$`);
function G(e) {
  return V.test(e) || b(e);
}
var Z = ["cm", "mm", "Q", "in", "pc", "pt", "px", "em", "ex", "ch", "rem", "lh", "rlh", "vw", "vh", "vmin", "vmax", "vb", "vi", "svw", "svh", "lvw", "lvh", "dvw", "dvh", "cqw", "cqh", "cqi", "cqb", "cqmin", "cqmax"];
var j = new RegExp(`^${x.source}(${Z.join("|")})$`);
function y(e) {
  return j.test(e) || b(e);
}
function K(e) {
  let t = 0;
  for (let r of d(e, " ")) {
    if (r === "center" || r === "top" || r === "right" || r === "bottom" || r === "left") {
      t += 1;
      continue;
    }
    if (!r.startsWith("var(")) {
      if (y(r) || C(r)) {
        t += 1;
        continue;
      }
      return false;
    }
  }
  return t > 0;
}
function Y(e) {
  let t = 0;
  for (let r of d(e, ",")) {
    if (r === "cover" || r === "contain") {
      t += 1;
      continue;
    }
    let s = d(r, " ");
    if (s.length !== 1 && s.length !== 2) return false;
    if (s.every((m) => m === "auto" || y(m) || C(m))) {
      t += 1;
      continue;
    }
  }
  return t > 0;
}
var Q = ["deg", "rad", "grad", "turn"];
var J = new RegExp(`^${x.source}(${Q.join("|")})$`);
function X(e) {
  return J.test(e);
}
var ee = new RegExp(`^${x.source} +${x.source} +${x.source}$`);
function te(e) {
  return ee.test(e);
}
function u(e) {
  let t = Number(e);
  return Number.isInteger(t) && t >= 0 && String(t) === String(e);
}
function pe(e) {
  let t = Number(e);
  return Number.isInteger(t) && t > 0 && String(t) === String(e);
}
function ge(e) {
  return N(e, 0.25);
}
function ue(e) {
  return N(e, 0.25);
}
function N(e, t) {
  let r = Number(e);
  return r >= 0 && r % t === 0 && String(r) === String(e);
}
function h(e) {
  return { __BARE_VALUE__: e };
}
var g = h((e) => {
  if (u(e.value)) return e.value;
});
var l2 = h((e) => {
  if (u(e.value)) return `${e.value}%`;
});
var f = h((e) => {
  if (u(e.value)) return `${e.value}px`;
});
var O = h((e) => {
  if (u(e.value)) return `${e.value}ms`;
});
var w = h((e) => {
  if (u(e.value)) return `${e.value}deg`;
});
var re = h((e) => {
  if (e.fraction === null) return;
  let [t, r] = d(e.fraction, "/");
  if (!(!u(t) || !u(r))) return e.fraction;
});
var L = h((e) => {
  if (u(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
});
var be = { accentColor: ({ theme: e }) => e("colors"), animation: { none: "none", spin: "spin 1s linear infinite", ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite", pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite", bounce: "bounce 1s infinite" }, aria: { busy: 'busy="true"', checked: 'checked="true"', disabled: 'disabled="true"', expanded: 'expanded="true"', hidden: 'hidden="true"', pressed: 'pressed="true"', readonly: 'readonly="true"', required: 'required="true"', selected: 'selected="true"' }, aspectRatio: { auto: "auto", square: "1 / 1", video: "16 / 9", ...re }, backdropBlur: ({ theme: e }) => e("blur"), backdropBrightness: ({ theme: e }) => ({ ...e("brightness"), ...l2 }), backdropContrast: ({ theme: e }) => ({ ...e("contrast"), ...l2 }), backdropGrayscale: ({ theme: e }) => ({ ...e("grayscale"), ...l2 }), backdropHueRotate: ({ theme: e }) => ({ ...e("hueRotate"), ...w }), backdropInvert: ({ theme: e }) => ({ ...e("invert"), ...l2 }), backdropOpacity: ({ theme: e }) => ({ ...e("opacity"), ...l2 }), backdropSaturate: ({ theme: e }) => ({ ...e("saturate"), ...l2 }), backdropSepia: ({ theme: e }) => ({ ...e("sepia"), ...l2 }), backgroundColor: ({ theme: e }) => e("colors"), backgroundImage: { none: "none", "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))", "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))", "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))", "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))", "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))", "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))", "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))", "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))" }, backgroundOpacity: ({ theme: e }) => e("opacity"), backgroundPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, backgroundSize: { auto: "auto", cover: "cover", contain: "contain" }, blur: { 0: "0", none: "", sm: "4px", DEFAULT: "8px", md: "12px", lg: "16px", xl: "24px", "2xl": "40px", "3xl": "64px" }, borderColor: ({ theme: e }) => ({ DEFAULT: "currentcolor", ...e("colors") }), borderOpacity: ({ theme: e }) => e("opacity"), borderRadius: { none: "0px", sm: "0.125rem", DEFAULT: "0.25rem", md: "0.375rem", lg: "0.5rem", xl: "0.75rem", "2xl": "1rem", "3xl": "1.5rem", full: "9999px" }, borderSpacing: ({ theme: e }) => e("spacing"), borderWidth: { DEFAULT: "1px", 0: "0px", 2: "2px", 4: "4px", 8: "8px", ...f }, boxShadow: { sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)", DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)", md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)", lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)", xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)", "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)", inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)", none: "none" }, boxShadowColor: ({ theme: e }) => e("colors"), brightness: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", 200: "2", ...l2 }, caretColor: ({ theme: e }) => e("colors"), colors: () => ({ ...l }), columns: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", "3xs": "16rem", "2xs": "18rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", ...g }, container: {}, content: { none: "none" }, contrast: { 0: "0", 50: ".5", 75: ".75", 100: "1", 125: "1.25", 150: "1.5", 200: "2", ...l2 }, cursor: { auto: "auto", default: "default", pointer: "pointer", wait: "wait", text: "text", move: "move", help: "help", "not-allowed": "not-allowed", none: "none", "context-menu": "context-menu", progress: "progress", cell: "cell", crosshair: "crosshair", "vertical-text": "vertical-text", alias: "alias", copy: "copy", "no-drop": "no-drop", grab: "grab", grabbing: "grabbing", "all-scroll": "all-scroll", "col-resize": "col-resize", "row-resize": "row-resize", "n-resize": "n-resize", "e-resize": "e-resize", "s-resize": "s-resize", "w-resize": "w-resize", "ne-resize": "ne-resize", "nw-resize": "nw-resize", "se-resize": "se-resize", "sw-resize": "sw-resize", "ew-resize": "ew-resize", "ns-resize": "ns-resize", "nesw-resize": "nesw-resize", "nwse-resize": "nwse-resize", "zoom-in": "zoom-in", "zoom-out": "zoom-out" }, divideColor: ({ theme: e }) => e("borderColor"), divideOpacity: ({ theme: e }) => e("borderOpacity"), divideWidth: ({ theme: e }) => ({ ...e("borderWidth"), ...f }), dropShadow: { sm: "0 1px 1px rgb(0 0 0 / 0.05)", DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"], md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"], lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"], xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"], "2xl": "0 25px 25px rgb(0 0 0 / 0.15)", none: "0 0 #0000" }, fill: ({ theme: e }) => e("colors"), flex: { 1: "1 1 0%", auto: "1 1 auto", initial: "0 1 auto", none: "none" }, flexBasis: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", ...e("spacing") }), flexGrow: { 0: "0", DEFAULT: "1", ...g }, flexShrink: { 0: "0", DEFAULT: "1", ...g }, fontFamily: { sans: ["ui-sans-serif", "system-ui", "sans-serif", '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"'], serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"], mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", '"Liberation Mono"', '"Courier New"', "monospace"] }, fontSize: { xs: ["0.75rem", { lineHeight: "1rem" }], sm: ["0.875rem", { lineHeight: "1.25rem" }], base: ["1rem", { lineHeight: "1.5rem" }], lg: ["1.125rem", { lineHeight: "1.75rem" }], xl: ["1.25rem", { lineHeight: "1.75rem" }], "2xl": ["1.5rem", { lineHeight: "2rem" }], "3xl": ["1.875rem", { lineHeight: "2.25rem" }], "4xl": ["2.25rem", { lineHeight: "2.5rem" }], "5xl": ["3rem", { lineHeight: "1" }], "6xl": ["3.75rem", { lineHeight: "1" }], "7xl": ["4.5rem", { lineHeight: "1" }], "8xl": ["6rem", { lineHeight: "1" }], "9xl": ["8rem", { lineHeight: "1" }] }, fontWeight: { thin: "100", extralight: "200", light: "300", normal: "400", medium: "500", semibold: "600", bold: "700", extrabold: "800", black: "900" }, gap: ({ theme: e }) => e("spacing"), gradientColorStops: ({ theme: e }) => e("colors"), gradientColorStopPositions: { "0%": "0%", "5%": "5%", "10%": "10%", "15%": "15%", "20%": "20%", "25%": "25%", "30%": "30%", "35%": "35%", "40%": "40%", "45%": "45%", "50%": "50%", "55%": "55%", "60%": "60%", "65%": "65%", "70%": "70%", "75%": "75%", "80%": "80%", "85%": "85%", "90%": "90%", "95%": "95%", "100%": "100%", ...l2 }, grayscale: { 0: "0", DEFAULT: "100%", ...l2 }, gridAutoColumns: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridAutoRows: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridColumn: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridColumnEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...g }, gridColumnStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...g }, gridRow: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridRowEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...g }, gridRowStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...g }, gridTemplateColumns: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, gridTemplateRows: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, height: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), hueRotate: { 0: "0deg", 15: "15deg", 30: "30deg", 60: "60deg", 90: "90deg", 180: "180deg", ...w }, inset: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), invert: { 0: "0", DEFAULT: "100%", ...l2 }, keyframes: { spin: { to: { transform: "rotate(360deg)" } }, ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } }, pulse: { "50%": { opacity: ".5" } }, bounce: { "0%, 100%": { transform: "translateY(-25%)", animationTimingFunction: "cubic-bezier(0.8,0,1,1)" }, "50%": { transform: "none", animationTimingFunction: "cubic-bezier(0,0,0.2,1)" } } }, letterSpacing: { tighter: "-0.05em", tight: "-0.025em", normal: "0em", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, lineHeight: { none: "1", tight: "1.25", snug: "1.375", normal: "1.5", relaxed: "1.625", loose: "2", 3: ".75rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem" }, listStyleType: { none: "none", disc: "disc", decimal: "decimal" }, listStyleImage: { none: "none" }, margin: ({ theme: e }) => ({ auto: "auto", ...e("spacing") }), lineClamp: { 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", ...g }, maxHeight: ({ theme: e }) => ({ none: "none", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), maxWidth: ({ theme: e }) => ({ none: "none", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", prose: "65ch", ...e("spacing") }), minHeight: ({ theme: e }) => ({ full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), minWidth: ({ theme: e }) => ({ full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), objectPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, opacity: { 0: "0", 5: "0.05", 10: "0.1", 15: "0.15", 20: "0.2", 25: "0.25", 30: "0.3", 35: "0.35", 40: "0.4", 45: "0.45", 50: "0.5", 55: "0.55", 60: "0.6", 65: "0.65", 70: "0.7", 75: "0.75", 80: "0.8", 85: "0.85", 90: "0.9", 95: "0.95", 100: "1", ...l2 }, order: { first: "-9999", last: "9999", none: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", ...g }, outlineColor: ({ theme: e }) => e("colors"), outlineOffset: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...f }, outlineWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...f }, padding: ({ theme: e }) => e("spacing"), placeholderColor: ({ theme: e }) => e("colors"), placeholderOpacity: ({ theme: e }) => e("opacity"), ringColor: ({ theme: e }) => ({ DEFAULT: "currentcolor", ...e("colors") }), ringOffsetColor: ({ theme: e }) => e("colors"), ringOffsetWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...f }, ringOpacity: ({ theme: e }) => ({ DEFAULT: "0.5", ...e("opacity") }), ringWidth: { DEFAULT: "3px", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...f }, rotate: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", 45: "45deg", 90: "90deg", 180: "180deg", ...w }, saturate: { 0: "0", 50: ".5", 100: "1", 150: "1.5", 200: "2", ...l2 }, scale: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", ...l2 }, screens: { sm: "40rem", md: "48rem", lg: "64rem", xl: "80rem", "2xl": "96rem" }, scrollMargin: ({ theme: e }) => e("spacing"), scrollPadding: ({ theme: e }) => e("spacing"), sepia: { 0: "0", DEFAULT: "100%", ...l2 }, skew: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", ...w }, space: ({ theme: e }) => e("spacing"), spacing: { px: "1px", 0: "0px", 0.5: "0.125rem", 1: "0.25rem", 1.5: "0.375rem", 2: "0.5rem", 2.5: "0.625rem", 3: "0.75rem", 3.5: "0.875rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem", 11: "2.75rem", 12: "3rem", 14: "3.5rem", 16: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, stroke: ({ theme: e }) => ({ none: "none", ...e("colors") }), strokeWidth: { 0: "0", 1: "1", 2: "2", ...g }, supports: {}, data: {}, textColor: ({ theme: e }) => e("colors"), textDecorationColor: ({ theme: e }) => e("colors"), textDecorationThickness: { auto: "auto", "from-font": "from-font", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...f }, textIndent: ({ theme: e }) => e("spacing"), textOpacity: ({ theme: e }) => e("opacity"), textUnderlineOffset: { auto: "auto", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...f }, transformOrigin: { center: "center", top: "top", "top-right": "top right", right: "right", "bottom-right": "bottom right", bottom: "bottom", "bottom-left": "bottom left", left: "left", "top-left": "top left" }, transitionDelay: { 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...O }, transitionDuration: { DEFAULT: "150ms", 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...O }, transitionProperty: { none: "none", all: "all", DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter", colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke", opacity: "opacity", shadow: "box-shadow", transform: "transform" }, transitionTimingFunction: { DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)", linear: "linear", in: "cubic-bezier(0.4, 0, 1, 1)", out: "cubic-bezier(0, 0, 0.2, 1)", "in-out": "cubic-bezier(0.4, 0, 0.2, 1)" }, translate: ({ theme: e }) => ({ "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), size: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), width: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", screen: "100vw", svw: "100svw", lvw: "100lvw", dvw: "100dvw", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), willChange: { auto: "auto", scroll: "scroll-position", contents: "contents", transform: "transform" }, zIndex: { auto: "auto", 0: "0", 10: "10", 20: "20", 30: "30", 40: "40", 50: "50", ...g } };

// node_modules/tailwindcss/dist/chunk-TCCVBPYE.mjs
var Ht = "4.1.15";
var Me = 92;
var Qe = 47;
var Xe = 42;
var Jt = 34;
var Zt = 39;
var Si = 58;
var et = 59;
var oe2 = 10;
var tt = 13;
var ze = 32;
var Fe = 9;
var Yt = 123;
var wt = 125;
var bt = 40;
var Qt = 41;
var Ti = 91;
var Ni = 93;
var Xt = 45;
var yt = 64;
var Ei = 33;
function $e(t, r) {
  let i = r?.from ? { file: r.from, code: t } : null;
  t[0] === "\uFEFF" && (t = " " + t.slice(1));
  let e = [], n = [], s = [], a = null, p = null, u2 = "", f2 = "", m = 0, d2;
  for (let c = 0; c < t.length; c++) {
    let w2 = t.charCodeAt(c);
    if (!(w2 === tt && (d2 = t.charCodeAt(c + 1), d2 === oe2))) if (w2 === Me) u2 === "" && (m = c), u2 += t.slice(c, c + 2), c += 1;
    else if (w2 === Qe && t.charCodeAt(c + 1) === Xe) {
      let h2 = c;
      for (let x2 = c + 2; x2 < t.length; x2++) if (d2 = t.charCodeAt(x2), d2 === Me) x2 += 1;
      else if (d2 === Xe && t.charCodeAt(x2 + 1) === Qe) {
        c = x2 + 1;
        break;
      }
      let y2 = t.slice(h2, c + 1);
      if (y2.charCodeAt(2) === Ei) {
        let x2 = rt(y2.slice(2, -2));
        n.push(x2), i && (x2.src = [i, h2, c + 1], x2.dst = [i, h2, c + 1]);
      }
    } else if (w2 === Zt || w2 === Jt) {
      let h2 = er(t, c, w2);
      u2 += t.slice(c, h2 + 1), c = h2;
    } else {
      if ((w2 === ze || w2 === oe2 || w2 === Fe) && (d2 = t.charCodeAt(c + 1)) && (d2 === ze || d2 === oe2 || d2 === Fe || d2 === tt && (d2 = t.charCodeAt(c + 2)) && d2 == oe2)) continue;
      if (w2 === oe2) {
        if (u2.length === 0) continue;
        d2 = u2.charCodeAt(u2.length - 1), d2 !== ze && d2 !== oe2 && d2 !== Fe && (u2 += " ");
      } else if (w2 === Xt && t.charCodeAt(c + 1) === Xt && u2.length === 0) {
        let h2 = "", y2 = c, x2 = -1;
        for (let A2 = c + 2; A2 < t.length; A2++) if (d2 = t.charCodeAt(A2), d2 === Me) A2 += 1;
        else if (d2 === Zt || d2 === Jt) A2 = er(t, A2, d2);
        else if (d2 === Qe && t.charCodeAt(A2 + 1) === Xe) {
          for (let b2 = A2 + 2; b2 < t.length; b2++) if (d2 = t.charCodeAt(b2), d2 === Me) b2 += 1;
          else if (d2 === Xe && t.charCodeAt(b2 + 1) === Qe) {
            A2 = b2 + 1;
            break;
          }
        } else if (x2 === -1 && d2 === Si) x2 = u2.length + A2 - y2;
        else if (d2 === et && h2.length === 0) {
          u2 += t.slice(y2, A2), c = A2;
          break;
        } else if (d2 === bt) h2 += ")";
        else if (d2 === Ti) h2 += "]";
        else if (d2 === Yt) h2 += "}";
        else if ((d2 === wt || t.length - 1 === A2) && h2.length === 0) {
          c = A2 - 1, u2 += t.slice(y2, A2);
          break;
        } else (d2 === Qt || d2 === Ni || d2 === wt) && h2.length > 0 && t[A2] === h2[h2.length - 1] && (h2 = h2.slice(0, -1));
        let T2 = kt(u2, x2);
        if (!T2) throw new Error("Invalid custom property, expected a value");
        i && (T2.src = [i, y2, c], T2.dst = [i, y2, c]), a ? a.nodes.push(T2) : e.push(T2), u2 = "";
      } else if (w2 === et && u2.charCodeAt(0) === yt) p = We(u2), i && (p.src = [i, m, c], p.dst = [i, m, c]), a ? a.nodes.push(p) : e.push(p), u2 = "", p = null;
      else if (w2 === et && f2[f2.length - 1] !== ")") {
        let h2 = kt(u2);
        if (!h2) {
          if (u2.length === 0) continue;
          throw new Error(`Invalid declaration: \`${u2.trim()}\``);
        }
        i && (h2.src = [i, m, c], h2.dst = [i, m, c]), a ? a.nodes.push(h2) : e.push(h2), u2 = "";
      } else if (w2 === Yt && f2[f2.length - 1] !== ")") f2 += "}", p = Z2(u2.trim()), i && (p.src = [i, m, c], p.dst = [i, m, c]), a && a.nodes.push(p), s.push(a), a = p, u2 = "", p = null;
      else if (w2 === wt && f2[f2.length - 1] !== ")") {
        if (f2 === "") throw new Error("Missing opening {");
        if (f2 = f2.slice(0, -1), u2.length > 0) if (u2.charCodeAt(0) === yt) p = We(u2), i && (p.src = [i, m, c], p.dst = [i, m, c]), a ? a.nodes.push(p) : e.push(p), u2 = "", p = null;
        else {
          let y2 = u2.indexOf(":");
          if (a) {
            let x2 = kt(u2, y2);
            if (!x2) throw new Error(`Invalid declaration: \`${u2.trim()}\``);
            i && (x2.src = [i, m, c], x2.dst = [i, m, c]), a.nodes.push(x2);
          }
        }
        let h2 = s.pop() ?? null;
        h2 === null && a && e.push(a), a = h2, u2 = "", p = null;
      } else if (w2 === bt) f2 += ")", u2 += "(";
      else if (w2 === Qt) {
        if (f2[f2.length - 1] !== ")") throw new Error("Missing opening (");
        f2 = f2.slice(0, -1), u2 += ")";
      } else {
        if (u2.length === 0 && (w2 === ze || w2 === oe2 || w2 === Fe)) continue;
        u2 === "" && (m = c), u2 += String.fromCharCode(w2);
      }
    }
  }
  if (u2.charCodeAt(0) === yt) {
    let c = We(u2);
    i && (c.src = [i, m, t.length], c.dst = [i, m, t.length]), e.push(c);
  }
  if (f2.length > 0 && a) {
    if (a.kind === "rule") throw new Error(`Missing closing } at ${a.selector}`);
    if (a.kind === "at-rule") throw new Error(`Missing closing } at ${a.name} ${a.params}`);
  }
  return n.length > 0 ? n.concat(e) : e;
}
function We(t, r = []) {
  let i = t, e = "";
  for (let n = 5; n < t.length; n++) {
    let s = t.charCodeAt(n);
    if (s === ze || s === Fe || s === bt) {
      i = t.slice(0, n), e = t.slice(n);
      break;
    }
  }
  return F2(i.trim(), e.trim(), r);
}
function kt(t, r = t.indexOf(":")) {
  if (r === -1) return null;
  let i = t.indexOf("!important", r + 1);
  return l3(t.slice(0, r).trim(), t.slice(r + 1, i === -1 ? t.length : i).trim(), i !== -1);
}
function er(t, r, i) {
  let e;
  for (let n = r + 1; n < t.length; n++) if (e = t.charCodeAt(n), e === Me) n += 1;
  else {
    if (e === i) return n;
    if (e === et && (t.charCodeAt(n + 1) === oe2 || t.charCodeAt(n + 1) === tt && t.charCodeAt(n + 2) === oe2)) throw new Error(`Unterminated string: ${t.slice(r, n + 1) + String.fromCharCode(i)}`);
    if (e === oe2 || e === tt && t.charCodeAt(n + 1) === oe2) throw new Error(`Unterminated string: ${t.slice(r, n) + String.fromCharCode(i)}`);
  }
  return r;
}
function ve(t) {
  if (arguments.length === 0) throw new TypeError("`CSS.escape` requires an argument.");
  let r = String(t), i = r.length, e = -1, n, s = "", a = r.charCodeAt(0);
  if (i === 1 && a === 45) return "\\" + r;
  for (; ++e < i; ) {
    if (n = r.charCodeAt(e), n === 0) {
      s += "�";
      continue;
    }
    if (n >= 1 && n <= 31 || n === 127 || e === 0 && n >= 48 && n <= 57 || e === 1 && n >= 48 && n <= 57 && a === 45) {
      s += "\\" + n.toString(16) + " ";
      continue;
    }
    if (n >= 128 || n === 45 || n === 95 || n >= 48 && n <= 57 || n >= 65 && n <= 90 || n >= 97 && n <= 122) {
      s += r.charAt(e);
      continue;
    }
    s += "\\" + r.charAt(e);
  }
  return s;
}
function Ve(t) {
  return t.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (r) => r.length > 2 ? String.fromCodePoint(Number.parseInt(r.slice(1).trim(), 16)) : r[1]);
}
var rr = /* @__PURE__ */ new Map([["--font", ["--font-weight", "--font-size"]], ["--inset", ["--inset-shadow", "--inset-ring"]], ["--text", ["--text-color", "--text-decoration-color", "--text-decoration-thickness", "--text-indent", "--text-shadow", "--text-underline-offset"]], ["--grid-column", ["--grid-column-start", "--grid-column-end"]], ["--grid-row", ["--grid-row-start", "--grid-row-end"]]]);
function tr(t, r) {
  return (rr.get(r) ?? []).some((i) => t === i || t.startsWith(`${i}-`));
}
var it = class {
  constructor(r = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Set([])) {
    this.values = r;
    this.keyframes = i;
  }
  prefix = null;
  get size() {
    return this.values.size;
  }
  add(r, i, e = 0, n) {
    if (r.endsWith("-*")) {
      if (i !== "initial") throw new Error(`Invalid theme value \`${i}\` for namespace \`${r}\``);
      r === "--*" ? this.values.clear() : this.clearNamespace(r.slice(0, -2), 0);
    }
    if (e & 4) {
      let s = this.values.get(r);
      if (s && !(s.options & 4)) return;
    }
    i === "initial" ? this.values.delete(r) : this.values.set(r, { value: i, options: e, src: n });
  }
  keysInNamespaces(r) {
    let i = [];
    for (let e of r) {
      let n = `${e}-`;
      for (let s of this.values.keys()) s.startsWith(n) && s.indexOf("--", 2) === -1 && (tr(s, e) || i.push(s.slice(n.length)));
    }
    return i;
  }
  get(r) {
    for (let i of r) {
      let e = this.values.get(i);
      if (e) return e.value;
    }
    return null;
  }
  hasDefault(r) {
    return (this.getOptions(r) & 4) === 4;
  }
  getOptions(r) {
    return r = Ve(this.#r(r)), this.values.get(r)?.options ?? 0;
  }
  entries() {
    return this.prefix ? Array.from(this.values, (r) => (r[0] = this.prefixKey(r[0]), r)) : this.values.entries();
  }
  prefixKey(r) {
    return this.prefix ? `--${this.prefix}-${r.slice(2)}` : r;
  }
  #r(r) {
    return this.prefix ? `--${r.slice(3 + this.prefix.length)}` : r;
  }
  clearNamespace(r, i) {
    let e = rr.get(r) ?? [];
    e: for (let n of this.values.keys()) if (n.startsWith(r)) {
      if (i !== 0 && (this.getOptions(n) & i) !== i) continue;
      for (let s of e) if (n.startsWith(s)) continue e;
      this.values.delete(n);
    }
  }
  #e(r, i) {
    for (let e of i) {
      let n = r !== null ? `${e}-${r}` : e;
      if (!this.values.has(n)) if (r !== null && r.includes(".")) {
        if (n = `${e}-${r.replaceAll(".", "_")}`, !this.values.has(n)) continue;
      } else continue;
      if (!tr(n, e)) return n;
    }
    return null;
  }
  #t(r) {
    let i = this.values.get(r);
    if (!i) return null;
    let e = null;
    return i.options & 2 && (e = i.value), `var(${ve(this.prefixKey(r))}${e ? `, ${e}` : ""})`;
  }
  markUsedVariable(r) {
    let i = Ve(this.#r(r)), e = this.values.get(i);
    if (!e) return false;
    let n = e.options & 16;
    return e.options |= 16, !n;
  }
  resolve(r, i, e = 0) {
    let n = this.#e(r, i);
    if (!n) return null;
    let s = this.values.get(n);
    return (e | s.options) & 1 ? s.value : this.#t(n);
  }
  resolveValue(r, i) {
    let e = this.#e(r, i);
    return e ? this.values.get(e).value : null;
  }
  resolveWith(r, i, e = []) {
    let n = this.#e(r, i);
    if (!n) return null;
    let s = {};
    for (let p of e) {
      let u2 = `${n}${p}`, f2 = this.values.get(u2);
      f2 && (f2.options & 1 ? s[p] = f2.value : s[p] = this.#t(u2));
    }
    let a = this.values.get(n);
    return a.options & 1 ? [a.value, s] : [this.#t(n), s];
  }
  namespace(r) {
    let i = /* @__PURE__ */ new Map(), e = `${r}-`;
    for (let [n, s] of this.values) n === r ? i.set(null, s.value) : n.startsWith(`${e}-`) ? i.set(n.slice(r.length), s.value) : n.startsWith(e) && i.set(n.slice(e.length), s.value);
    return i;
  }
  addKeyframes(r) {
    this.keyframes.add(r);
  }
  getKeyframes() {
    return Array.from(this.keyframes);
  }
};
var U2 = class extends Map {
  constructor(i) {
    super();
    this.factory = i;
  }
  get(i) {
    let e = super.get(i);
    return e === void 0 && (e = this.factory(i, this), this.set(i, e)), e;
  }
};
function ne(t) {
  return { kind: "word", value: t };
}
function Ri(t, r) {
  return { kind: "function", value: t, nodes: r };
}
function Pi(t) {
  return { kind: "separator", value: t };
}
function J2(t) {
  let r = "";
  for (let i of t) switch (i.kind) {
    case "word":
    case "separator": {
      r += i.value;
      break;
    }
    case "function":
      r += i.value + "(" + J2(i.nodes) + ")";
  }
  return r;
}
var ir = 92;
var Oi = 41;
var nr = 58;
var ar = 44;
var Ki = 34;
var lr = 61;
var or = 62;
var sr = 60;
var ur = 10;
var Di = 40;
var _i = 39;
var Ui = 47;
var fr = 32;
var cr = 9;
function B2(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], i = [], e = null, n = "", s;
  for (let a = 0; a < t.length; a++) {
    let p = t.charCodeAt(a);
    switch (p) {
      case ir: {
        n += t[a] + t[a + 1], a++;
        break;
      }
      case Ui: {
        if (n.length > 0) {
          let f2 = ne(n);
          e ? e.nodes.push(f2) : r.push(f2), n = "";
        }
        let u2 = ne(t[a]);
        e ? e.nodes.push(u2) : r.push(u2);
        break;
      }
      case nr:
      case ar:
      case lr:
      case or:
      case sr:
      case ur:
      case fr:
      case cr: {
        if (n.length > 0) {
          let d2 = ne(n);
          e ? e.nodes.push(d2) : r.push(d2), n = "";
        }
        let u2 = a, f2 = a + 1;
        for (; f2 < t.length && (s = t.charCodeAt(f2), !(s !== nr && s !== ar && s !== lr && s !== or && s !== sr && s !== ur && s !== fr && s !== cr)); f2++) ;
        a = f2 - 1;
        let m = Pi(t.slice(u2, f2));
        e ? e.nodes.push(m) : r.push(m);
        break;
      }
      case _i:
      case Ki: {
        let u2 = a;
        for (let f2 = a + 1; f2 < t.length; f2++) if (s = t.charCodeAt(f2), s === ir) f2 += 1;
        else if (s === p) {
          a = f2;
          break;
        }
        n += t.slice(u2, a + 1);
        break;
      }
      case Di: {
        let u2 = Ri(n, []);
        n = "", e ? e.nodes.push(u2) : r.push(u2), i.push(u2), e = u2;
        break;
      }
      case Oi: {
        let u2 = i.pop();
        if (n.length > 0) {
          let f2 = ne(n);
          u2?.nodes.push(f2), n = "";
        }
        i.length > 0 ? e = i[i.length - 1] : e = null;
        break;
      }
      default:
        n += String.fromCharCode(p);
    }
  }
  return n.length > 0 && r.push(ne(n)), r;
}
var At = ((a) => (a[a.Continue = 0] = "Continue", a[a.Skip = 1] = "Skip", a[a.Stop = 2] = "Stop", a[a.Replace = 3] = "Replace", a[a.ReplaceSkip = 4] = "ReplaceSkip", a[a.ReplaceStop = 5] = "ReplaceStop", a))(At || {});
var E2 = { Continue: { kind: 0 }, Skip: { kind: 1 }, Stop: { kind: 2 }, Replace: (t) => ({ kind: 3, nodes: Array.isArray(t) ? t : [t] }), ReplaceSkip: (t) => ({ kind: 4, nodes: Array.isArray(t) ? t : [t] }), ReplaceStop: (t) => ({ kind: 5, nodes: Array.isArray(t) ? t : [t] }) };
function O2(t, r) {
  typeof r == "function" ? pr(t, r) : pr(t, r.enter, r.exit);
}
function pr(t, r = () => E2.Continue, i = () => E2.Continue) {
  let e = [[t, 0, null]], n = { parent: null, depth: 0, path() {
    let s = [];
    for (let a = 1; a < e.length; a++) {
      let p = e[a][2];
      p && s.push(p);
    }
    return s;
  } };
  for (; e.length > 0; ) {
    let s = e.length - 1, a = e[s], p = a[0], u2 = a[1], f2 = a[2];
    if (u2 >= p.length) {
      e.pop();
      continue;
    }
    if (n.parent = f2, n.depth = s, u2 >= 0) {
      let w2 = p[u2], h2 = r(w2, n) ?? E2.Continue;
      switch (h2.kind) {
        case 0: {
          w2.nodes && w2.nodes.length > 0 && e.push([w2.nodes, 0, w2]), a[1] = ~u2;
          continue;
        }
        case 2:
          return;
        case 1: {
          a[1] = ~u2;
          continue;
        }
        case 3: {
          p.splice(u2, 1, ...h2.nodes);
          continue;
        }
        case 5: {
          p.splice(u2, 1, ...h2.nodes);
          return;
        }
        case 4: {
          p.splice(u2, 1, ...h2.nodes), a[1] += h2.nodes.length;
          continue;
        }
        default:
          throw new Error(`Invalid \`WalkAction.${At[h2.kind] ?? `Unknown(${h2.kind})`}\` in enter.`);
      }
    }
    let m = ~u2, d2 = p[m], c = i(d2, n) ?? E2.Continue;
    switch (c.kind) {
      case 0:
        a[1] = m + 1;
        continue;
      case 2:
        return;
      case 3: {
        p.splice(m, 1, ...c.nodes), a[1] = m + c.nodes.length;
        continue;
      }
      case 5: {
        p.splice(m, 1, ...c.nodes);
        return;
      }
      case 4: {
        p.splice(m, 1, ...c.nodes), a[1] = m + c.nodes.length;
        continue;
      }
      default:
        throw new Error(`Invalid \`WalkAction.${At[c.kind] ?? `Unknown(${c.kind})`}\` in exit.`);
    }
  }
}
function nt(t) {
  let r = [];
  return O2(B2(t), (i) => {
    if (!(i.kind !== "function" || i.value !== "var")) return O2(i.nodes, (e) => {
      e.kind !== "word" || e.value[0] !== "-" || e.value[1] !== "-" || r.push(e.value);
    }), E2.Skip;
  }), r;
}
var Ii = 64;
function G2(t, r = []) {
  return { kind: "rule", selector: t, nodes: r };
}
function F2(t, r = "", i = []) {
  return { kind: "at-rule", name: t, params: r, nodes: i };
}
function Z2(t, r = []) {
  return t.charCodeAt(0) === Ii ? We(t, r) : G2(t, r);
}
function l3(t, r, i = false) {
  return { kind: "declaration", property: t, value: r, important: i };
}
function rt(t) {
  return { kind: "comment", value: t };
}
function ce(t, r) {
  return { kind: "context", context: t, nodes: r };
}
function W2(t) {
  return { kind: "at-root", nodes: t };
}
function te2(t) {
  switch (t.kind) {
    case "rule":
      return { kind: t.kind, selector: t.selector, nodes: t.nodes.map(te2), src: t.src, dst: t.dst };
    case "at-rule":
      return { kind: t.kind, name: t.name, params: t.params, nodes: t.nodes.map(te2), src: t.src, dst: t.dst };
    case "at-root":
      return { kind: t.kind, nodes: t.nodes.map(te2), src: t.src, dst: t.dst };
    case "context":
      return { kind: t.kind, context: { ...t.context }, nodes: t.nodes.map(te2), src: t.src, dst: t.dst };
    case "declaration":
      return { kind: t.kind, property: t.property, value: t.value, important: t.important, src: t.src, dst: t.dst };
    case "comment":
      return { kind: t.kind, value: t.value, src: t.src, dst: t.dst };
    default:
      throw new Error(`Unknown node kind: ${t.kind}`);
  }
}
function qe(t) {
  return { depth: t.depth, get context() {
    let r = {};
    for (let i of t.path()) i.kind === "context" && Object.assign(r, i.context);
    return Object.defineProperty(this, "context", { value: r }), r;
  }, get parent() {
    let r = this.path().pop() ?? null;
    return Object.defineProperty(this, "parent", { value: r }), r;
  }, path() {
    return t.path().filter((r) => r.kind !== "context");
  } };
}
function Se(t, r, i = 3) {
  let e = [], n = /* @__PURE__ */ new Set(), s = new U2(() => /* @__PURE__ */ new Set()), a = new U2(() => /* @__PURE__ */ new Set()), p = /* @__PURE__ */ new Set(), u2 = /* @__PURE__ */ new Set(), f2 = [], m = [], d2 = new U2(() => /* @__PURE__ */ new Set());
  function c(h2, y2, x2 = {}, T2 = 0) {
    if (h2.kind === "declaration") {
      if (h2.property === "--tw-sort" || h2.value === void 0 || h2.value === null) return;
      if (x2.theme && h2.property[0] === "-" && h2.property[1] === "-") {
        if (h2.value === "initial") {
          h2.value = void 0;
          return;
        }
        x2.keyframes || s.get(y2).add(h2);
      }
      if (h2.value.includes("var(")) if (x2.theme && h2.property[0] === "-" && h2.property[1] === "-") for (let A2 of nt(h2.value)) d2.get(A2).add(h2.property);
      else r.trackUsedVariables(h2.value);
      if (h2.property === "animation") for (let A2 of dr(h2.value)) u2.add(A2);
      i & 2 && h2.value.includes("color-mix(") && a.get(y2).add(h2), y2.push(h2);
    } else if (h2.kind === "rule") {
      let A2 = [];
      for (let R2 of h2.nodes) c(R2, A2, x2, T2 + 1);
      let b2 = {}, j2 = /* @__PURE__ */ new Set();
      for (let R2 of A2) {
        if (R2.kind !== "declaration") continue;
        let K2 = `${R2.property}:${R2.value}:${R2.important}`;
        b2[K2] ??= [], b2[K2].push(R2);
      }
      for (let R2 in b2) for (let K2 = 0; K2 < b2[R2].length - 1; ++K2) j2.add(b2[R2][K2]);
      if (j2.size > 0 && (A2 = A2.filter((R2) => !j2.has(R2))), A2.length === 0) return;
      h2.selector === "&" ? y2.push(...A2) : y2.push({ ...h2, nodes: A2 });
    } else if (h2.kind === "at-rule" && h2.name === "@property" && T2 === 0) {
      if (n.has(h2.params)) return;
      if (i & 1) {
        let b2 = h2.params, j2 = null, R2 = false;
        for (let L2 of h2.nodes) L2.kind === "declaration" && (L2.property === "initial-value" ? j2 = L2.value : L2.property === "inherits" && (R2 = L2.value === "true"));
        let K2 = l3(b2, j2 ?? "initial");
        K2.src = h2.src, R2 ? f2.push(K2) : m.push(K2);
      }
      n.add(h2.params);
      let A2 = { ...h2, nodes: [] };
      for (let b2 of h2.nodes) c(b2, A2.nodes, x2, T2 + 1);
      y2.push(A2);
    } else if (h2.kind === "at-rule") {
      h2.name === "@keyframes" && (x2 = { ...x2, keyframes: true });
      let A2 = { ...h2, nodes: [] };
      for (let b2 of h2.nodes) c(b2, A2.nodes, x2, T2 + 1);
      h2.name === "@keyframes" && x2.theme && p.add(A2), (A2.nodes.length > 0 || A2.name === "@layer" || A2.name === "@charset" || A2.name === "@custom-media" || A2.name === "@namespace" || A2.name === "@import") && y2.push(A2);
    } else if (h2.kind === "at-root") for (let A2 of h2.nodes) {
      let b2 = [];
      c(A2, b2, x2, 0);
      for (let j2 of b2) e.push(j2);
    }
    else if (h2.kind === "context") {
      if (h2.context.reference) return;
      for (let A2 of h2.nodes) c(A2, y2, { ...x2, ...h2.context }, T2);
    } else h2.kind === "comment" && y2.push(h2);
  }
  let w2 = [];
  for (let h2 of t) c(h2, w2, {}, 0);
  e: for (let [h2, y2] of s) for (let x2 of y2) {
    if (mr(x2.property, r.theme, d2)) {
      if (x2.property.startsWith(r.theme.prefixKey("--animate-"))) for (let b2 of dr(x2.value)) u2.add(b2);
      continue;
    }
    let A2 = h2.indexOf(x2);
    if (h2.splice(A2, 1), h2.length === 0) {
      let b2 = ji(w2, (j2) => j2.kind === "rule" && j2.nodes === h2);
      if (!b2 || b2.length === 0) continue e;
      b2.unshift({ kind: "at-root", nodes: w2 });
      do {
        let j2 = b2.pop();
        if (!j2) break;
        let R2 = b2[b2.length - 1];
        if (!R2 || R2.kind !== "at-root" && R2.kind !== "at-rule") break;
        let K2 = R2.nodes.indexOf(j2);
        if (K2 === -1) break;
        R2.nodes.splice(K2, 1);
      } while (true);
      continue e;
    }
  }
  for (let h2 of p) if (!u2.has(h2.params)) {
    let y2 = e.indexOf(h2);
    e.splice(y2, 1);
  }
  if (w2 = w2.concat(e), i & 2) for (let [h2, y2] of a) for (let x2 of y2) {
    let T2 = h2.indexOf(x2);
    if (T2 === -1 || x2.value == null) continue;
    let A2 = B2(x2.value), b2 = false;
    if (O2(A2, (K2) => {
      if (K2.kind !== "function" || K2.value !== "color-mix") return;
      let L2 = false, _2 = false;
      if (O2(K2.nodes, (M2) => {
        if (M2.kind == "word" && M2.value.toLowerCase() === "currentcolor") {
          _2 = true, b2 = true;
          return;
        }
        let q2 = M2, H2 = null, ae = /* @__PURE__ */ new Set();
        do {
          if (q2.kind !== "function" || q2.value !== "var") return;
          let le = q2.nodes[0];
          if (!le || le.kind !== "word") return;
          let o = le.value;
          if (ae.has(o)) {
            L2 = true;
            return;
          }
          if (ae.add(o), b2 = true, H2 = r.theme.resolveValue(null, [le.value]), !H2) {
            L2 = true;
            return;
          }
          if (H2.toLowerCase() === "currentcolor") {
            _2 = true;
            return;
          }
          H2.startsWith("var(") ? q2 = B2(H2)[0] : q2 = null;
        } while (q2);
        return E2.Replace({ kind: "word", value: H2 });
      }), L2 || _2) {
        let M2 = K2.nodes.findIndex((H2) => H2.kind === "separator" && H2.value.trim().includes(","));
        if (M2 === -1) return;
        let q2 = K2.nodes.length > M2 ? K2.nodes[M2 + 1] : null;
        return q2 ? E2.Replace(q2) : void 0;
      } else if (b2) {
        let M2 = K2.nodes[2];
        M2.kind === "word" && (M2.value === "oklab" || M2.value === "oklch" || M2.value === "lab" || M2.value === "lch") && (M2.value = "srgb");
      }
    }), !b2) continue;
    let j2 = { ...x2, value: J2(A2) }, R2 = Z2("@supports (color: color-mix(in lab, red, red))", [Z2("&", [x2])]);
    R2.src = x2.src, h2.splice(T2, 1, j2, R2);
  }
  if (i & 1) {
    let h2 = [];
    if (f2.length > 0) {
      let y2 = Z2(":root, :host", f2);
      y2.src = f2[0].src, h2.push(y2);
    }
    if (m.length > 0) {
      let y2 = Z2("*, ::before, ::after, ::backdrop", m);
      y2.src = m[0].src, h2.push(y2);
    }
    if (h2.length > 0) {
      let y2 = w2.findIndex((A2) => !(A2.kind === "comment" || A2.kind === "at-rule" && (A2.name === "@charset" || A2.name === "@import"))), x2 = F2("@layer", "properties", []);
      x2.src = h2[0].src, w2.splice(y2 < 0 ? w2.length : y2, 0, x2);
      let T2 = Z2("@layer properties", [F2("@supports", "((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b))))", h2)]);
      T2.src = h2[0].src, T2.nodes[0].src = h2[0].src, w2.push(T2);
    }
  }
  return w2;
}
function re2(t, r) {
  let i = 0, e = { file: null, code: "" };
  function n(a, p = 0) {
    let u2 = "", f2 = "  ".repeat(p);
    if (a.kind === "declaration") {
      if (u2 += `${f2}${a.property}: ${a.value}${a.important ? " !important" : ""};
`, r) {
        i += f2.length;
        let m = i;
        i += a.property.length, i += 2, i += a.value?.length ?? 0, a.important && (i += 11);
        let d2 = i;
        i += 2, a.dst = [e, m, d2];
      }
    } else if (a.kind === "rule") {
      if (u2 += `${f2}${a.selector} {
`, r) {
        i += f2.length;
        let m = i;
        i += a.selector.length, i += 1;
        let d2 = i;
        a.dst = [e, m, d2], i += 2;
      }
      for (let m of a.nodes) u2 += n(m, p + 1);
      u2 += `${f2}}
`, r && (i += f2.length, i += 2);
    } else if (a.kind === "at-rule") {
      if (a.nodes.length === 0) {
        let m = `${f2}${a.name} ${a.params};
`;
        if (r) {
          i += f2.length;
          let d2 = i;
          i += a.name.length, i += 1, i += a.params.length;
          let c = i;
          i += 2, a.dst = [e, d2, c];
        }
        return m;
      }
      if (u2 += `${f2}${a.name}${a.params ? ` ${a.params} ` : " "}{
`, r) {
        i += f2.length;
        let m = i;
        i += a.name.length, a.params && (i += 1, i += a.params.length), i += 1;
        let d2 = i;
        a.dst = [e, m, d2], i += 2;
      }
      for (let m of a.nodes) u2 += n(m, p + 1);
      u2 += `${f2}}
`, r && (i += f2.length, i += 2);
    } else if (a.kind === "comment") {
      if (u2 += `${f2}/*${a.value}*/
`, r) {
        i += f2.length;
        let m = i;
        i += 2 + a.value.length + 2;
        let d2 = i;
        a.dst = [e, m, d2], i += 1;
      }
    } else if (a.kind === "context" || a.kind === "at-root") return "";
    return u2;
  }
  let s = "";
  for (let a of t) s += n(a, 0);
  return e.code = s, s;
}
function ji(t, r) {
  let i = [];
  return O2(t, (e, n) => {
    if (r(e)) return i = n.path(), i.push(e), E2.Stop;
  }), i;
}
function mr(t, r, i, e = /* @__PURE__ */ new Set()) {
  if (e.has(t) || (e.add(t), r.getOptions(t) & 24)) return true;
  {
    let s = i.get(t) ?? [];
    for (let a of s) if (mr(a, r, i, e)) return true;
  }
  return false;
}
function dr(t) {
  return t.split(/[\s,]+/);
}
function we(t) {
  if (t.indexOf("(") === -1) return Pe(t);
  let r = B2(t);
  return $t(r), t = J2(r), t = oe(t), t;
}
function Pe(t, r = false) {
  let i = "";
  for (let e = 0; e < t.length; e++) {
    let n = t[e];
    n === "\\" && t[e + 1] === "_" ? (i += "_", e += 1) : n === "_" && !r ? i += " " : i += n;
  }
  return i;
}
function $t(t) {
  for (let r of t) switch (r.kind) {
    case "function": {
      if (r.value === "url" || r.value.endsWith("_url")) {
        r.value = Pe(r.value);
        break;
      }
      if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
        r.value = Pe(r.value);
        for (let i = 0; i < r.nodes.length; i++) {
          if (i == 0 && r.nodes[i].kind === "word") {
            r.nodes[i].value = Pe(r.nodes[i].value, true);
            continue;
          }
          $t([r.nodes[i]]);
        }
        break;
      }
      r.value = Pe(r.value), $t(r.nodes);
      break;
    }
    case "separator":
    case "word": {
      r.value = Pe(r.value);
      break;
    }
    default:
      Li(r);
  }
}
function Li(t) {
  throw new Error(`Unexpected value: ${t}`);
}
var Vt = new Uint8Array(256);
function de(t) {
  let r = 0, i = t.length;
  for (let e = 0; e < i; e++) {
    let n = t.charCodeAt(e);
    switch (n) {
      case 92:
        e += 1;
        break;
      case 39:
      case 34:
        for (; ++e < i; ) {
          let s = t.charCodeAt(e);
          if (s === 92) {
            e += 1;
            continue;
          }
          if (s === n) break;
        }
        break;
      case 40:
        Vt[r] = 41, r++;
        break;
      case 91:
        Vt[r] = 93, r++;
        break;
      case 123:
        break;
      case 93:
      case 125:
      case 41:
        if (r === 0) return false;
        r > 0 && n === Vt[r - 1] && r--;
        break;
      case 59:
        if (r === 0) return false;
        break;
    }
  }
  return true;
}
var Mi = 58;
var gr = 45;
var hr = 97;
var vr = 122;
function wr(t) {
  switch (t.kind) {
    case "arbitrary":
      return { kind: t.kind, property: t.property, value: t.value, modifier: t.modifier ? { kind: t.modifier.kind, value: t.modifier.value } : null, variants: t.variants.map(Oe), important: t.important, raw: t.raw };
    case "static":
      return { kind: t.kind, root: t.root, variants: t.variants.map(Oe), important: t.important, raw: t.raw };
    case "functional":
      return { kind: t.kind, root: t.root, value: t.value ? t.value.kind === "arbitrary" ? { kind: t.value.kind, dataType: t.value.dataType, value: t.value.value } : { kind: t.value.kind, value: t.value.value, fraction: t.value.fraction } : null, modifier: t.modifier ? { kind: t.modifier.kind, value: t.modifier.value } : null, variants: t.variants.map(Oe), important: t.important, raw: t.raw };
    default:
      throw new Error("Unknown candidate kind");
  }
}
function Oe(t) {
  switch (t.kind) {
    case "arbitrary":
      return { kind: t.kind, selector: t.selector, relative: t.relative };
    case "static":
      return { kind: t.kind, root: t.root };
    case "functional":
      return { kind: t.kind, root: t.root, value: t.value ? { kind: t.value.kind, value: t.value.value } : null, modifier: t.modifier ? { kind: t.modifier.kind, value: t.modifier.value } : null };
    case "compound":
      return { kind: t.kind, root: t.root, variant: Oe(t.variant), modifier: t.modifier ? { kind: t.modifier.kind, value: t.modifier.value } : null };
    default:
      throw new Error("Unknown variant kind");
  }
}
function* yr(t, r) {
  let i = d(t, ":");
  if (r.theme.prefix) {
    if (i.length === 1 || i[0] !== r.theme.prefix) return null;
    i.shift();
  }
  let e = i.pop(), n = [];
  for (let d2 = i.length - 1; d2 >= 0; --d2) {
    let c = r.parseVariant(i[d2]);
    if (c === null) return;
    n.push(c);
  }
  let s = false;
  e[e.length - 1] === "!" ? (s = true, e = e.slice(0, -1)) : e[0] === "!" && (s = true, e = e.slice(1)), r.utilities.has(e, "static") && !e.includes("[") && (yield { kind: "static", root: e, variants: n, important: s, raw: t });
  let [a, p = null, u2] = d(e, "/");
  if (u2) return;
  let f2 = p === null ? null : St(p);
  if (p !== null && f2 === null) return;
  if (a[0] === "[") {
    if (a[a.length - 1] !== "]") return;
    let d2 = a.charCodeAt(1);
    if (d2 !== gr && !(d2 >= hr && d2 <= vr)) return;
    a = a.slice(1, -1);
    let c = a.indexOf(":");
    if (c === -1 || c === 0 || c === a.length - 1) return;
    let w2 = a.slice(0, c), h2 = we(a.slice(c + 1));
    if (!de(h2)) return;
    yield { kind: "arbitrary", property: w2, value: h2, modifier: f2, variants: n, important: s, raw: t };
    return;
  }
  let m;
  if (a[a.length - 1] === "]") {
    let d2 = a.indexOf("-[");
    if (d2 === -1) return;
    let c = a.slice(0, d2);
    if (!r.utilities.has(c, "functional")) return;
    let w2 = a.slice(d2 + 1);
    m = [[c, w2]];
  } else if (a[a.length - 1] === ")") {
    let d2 = a.indexOf("-(");
    if (d2 === -1) return;
    let c = a.slice(0, d2);
    if (!r.utilities.has(c, "functional")) return;
    let w2 = a.slice(d2 + 2, -1), h2 = d(w2, ":"), y2 = null;
    if (h2.length === 2 && (y2 = h2[0], w2 = h2[1]), w2[0] !== "-" || w2[1] !== "-" || !de(w2)) return;
    m = [[c, y2 === null ? `[var(${w2})]` : `[${y2}:var(${w2})]`]];
  } else m = br(a, (d2) => r.utilities.has(d2, "functional"));
  for (let [d2, c] of m) {
    let w2 = { kind: "functional", root: d2, modifier: f2, value: null, variants: n, important: s, raw: t };
    if (c === null) {
      yield w2;
      continue;
    }
    {
      let h2 = c.indexOf("[");
      if (h2 !== -1) {
        if (c[c.length - 1] !== "]") return;
        let x2 = we(c.slice(h2 + 1, -1));
        if (!de(x2)) continue;
        let T2 = "";
        for (let A2 = 0; A2 < x2.length; A2++) {
          let b2 = x2.charCodeAt(A2);
          if (b2 === Mi) {
            T2 = x2.slice(0, A2), x2 = x2.slice(A2 + 1);
            break;
          }
          if (!(b2 === gr || b2 >= hr && b2 <= vr)) break;
        }
        if (x2.length === 0 || x2.trim().length === 0) continue;
        w2.value = { kind: "arbitrary", dataType: T2 || null, value: x2 };
      } else {
        let x2 = p === null || w2.modifier?.kind === "arbitrary" ? null : `${c}/${p}`;
        w2.value = { kind: "named", value: c, fraction: x2 };
      }
    }
    yield w2;
  }
}
function St(t) {
  if (t[0] === "[" && t[t.length - 1] === "]") {
    let r = we(t.slice(1, -1));
    return !de(r) || r.length === 0 || r.trim().length === 0 ? null : { kind: "arbitrary", value: r };
  }
  return t[0] === "(" && t[t.length - 1] === ")" ? (t = t.slice(1, -1), t[0] !== "-" || t[1] !== "-" || !de(t) ? null : (t = `var(${t})`, { kind: "arbitrary", value: we(t) })) : { kind: "named", value: t };
}
function kr(t, r) {
  if (t[0] === "[" && t[t.length - 1] === "]") {
    if (t[1] === "@" && t.includes("&")) return null;
    let i = we(t.slice(1, -1));
    if (!de(i) || i.length === 0 || i.trim().length === 0) return null;
    let e = i[0] === ">" || i[0] === "+" || i[0] === "~";
    return !e && i[0] !== "@" && !i.includes("&") && (i = `&:is(${i})`), { kind: "arbitrary", selector: i, relative: e };
  }
  {
    let [i, e = null, n] = d(t, "/");
    if (n) return null;
    let s = br(i, (a) => r.variants.has(a));
    for (let [a, p] of s) switch (r.variants.kind(a)) {
      case "static":
        return p !== null || e !== null ? null : { kind: "static", root: a };
      case "functional": {
        let u2 = e === null ? null : St(e);
        if (e !== null && u2 === null) return null;
        if (p === null) return { kind: "functional", root: a, modifier: u2, value: null };
        if (p[p.length - 1] === "]") {
          if (p[0] !== "[") continue;
          let f2 = we(p.slice(1, -1));
          return !de(f2) || f2.length === 0 || f2.trim().length === 0 ? null : { kind: "functional", root: a, modifier: u2, value: { kind: "arbitrary", value: f2 } };
        }
        if (p[p.length - 1] === ")") {
          if (p[0] !== "(") continue;
          let f2 = we(p.slice(1, -1));
          return !de(f2) || f2.length === 0 || f2.trim().length === 0 || f2[0] !== "-" || f2[1] !== "-" ? null : { kind: "functional", root: a, modifier: u2, value: { kind: "arbitrary", value: `var(${f2})` } };
        }
        return { kind: "functional", root: a, modifier: u2, value: { kind: "named", value: p } };
      }
      case "compound": {
        if (p === null) return null;
        e && (a === "not" || a === "has" || a === "in") && (p = `${p}/${e}`, e = null);
        let u2 = r.parseVariant(p);
        if (u2 === null || !r.variants.compoundsWith(a, u2)) return null;
        let f2 = e === null ? null : St(e);
        return e !== null && f2 === null ? null : { kind: "compound", root: a, modifier: f2, variant: u2 };
      }
    }
  }
  return null;
}
function* br(t, r) {
  r(t) && (yield [t, null]);
  let i = t.lastIndexOf("-");
  for (; i > 0; ) {
    let e = t.slice(0, i);
    if (r(e)) {
      let n = [e, t.slice(i + 1)];
      if (n[1] === "" || n[0] === "@" && r("@") && t[i] === "-") break;
      yield n;
    }
    i = t.lastIndexOf("-", i - 1);
  }
  t[0] === "@" && r("@") && (yield ["@", t.slice(1)]);
}
function xr(t, r) {
  let i = [];
  for (let n of r.variants) i.unshift(at(n));
  t.theme.prefix && i.unshift(t.theme.prefix);
  let e = "";
  if (r.kind === "static" && (e += r.root), r.kind === "functional" && (e += r.root, r.value)) if (r.value.kind === "arbitrary") {
    if (r.value !== null) {
      let n = Nt(r.value.value), s = n ? r.value.value.slice(4, -1) : r.value.value, [a, p] = n ? ["(", ")"] : ["[", "]"];
      r.value.dataType ? e += `-${a}${r.value.dataType}:${ye(s)}${p}` : e += `-${a}${ye(s)}${p}`;
    }
  } else r.value.kind === "named" && (e += `-${r.value.value}`);
  return r.kind === "arbitrary" && (e += `[${r.property}:${ye(r.value)}]`), (r.kind === "arbitrary" || r.kind === "functional") && (e += He(r.modifier)), r.important && (e += "!"), i.push(e), i.join(":");
}
function He(t) {
  if (t === null) return "";
  let r = Nt(t.value), i = r ? t.value.slice(4, -1) : t.value, [e, n] = r ? ["(", ")"] : ["[", "]"];
  return t.kind === "arbitrary" ? `/${e}${ye(i)}${n}` : t.kind === "named" ? `/${t.value}` : "";
}
function at(t) {
  if (t.kind === "static") return t.root;
  if (t.kind === "arbitrary") return `[${ye(Wi(t.selector))}]`;
  let r = "";
  if (t.kind === "functional") {
    r += t.root;
    let i = t.root !== "@";
    if (t.value) if (t.value.kind === "arbitrary") {
      let e = Nt(t.value.value), n = e ? t.value.value.slice(4, -1) : t.value.value, [s, a] = e ? ["(", ")"] : ["[", "]"];
      r += `${i ? "-" : ""}${s}${ye(n)}${a}`;
    } else t.value.kind === "named" && (r += `${i ? "-" : ""}${t.value.value}`);
  }
  return t.kind === "compound" && (r += t.root, r += "-", r += at(t.variant)), (t.kind === "functional" || t.kind === "compound") && (r += He(t.modifier)), r;
}
var zi = new U2((t) => {
  let r = B2(t), i = /* @__PURE__ */ new Set();
  return O2(r, (e, n) => {
    let s = n.parent === null ? r : n.parent.nodes ?? [];
    if (e.kind === "word" && (e.value === "+" || e.value === "-" || e.value === "*" || e.value === "/")) {
      let a = s.indexOf(e) ?? -1;
      if (a === -1) return;
      let p = s[a - 1];
      if (p?.kind !== "separator" || p.value !== " ") return;
      let u2 = s[a + 1];
      if (u2?.kind !== "separator" || u2.value !== " ") return;
      i.add(p), i.add(u2);
    } else e.kind === "separator" && e.value.length > 0 && e.value.trim() === "" ? (s[0] === e || s[s.length - 1] === e) && i.add(e) : e.kind === "separator" && e.value.trim() === "," && (e.value = ",");
  }), i.size > 0 && O2(r, (e) => {
    if (i.has(e)) return i.delete(e), E2.ReplaceSkip([]);
  }), Tt(r), J2(r);
});
function ye(t) {
  return zi.get(t);
}
var Fi = new U2((t) => {
  let r = B2(t);
  return r.length === 3 && r[0].kind === "word" && r[0].value === "&" && r[1].kind === "separator" && r[1].value === ":" && r[2].kind === "function" && r[2].value === "is" ? J2(r[2].nodes) : t;
});
function Wi(t) {
  return Fi.get(t);
}
function Tt(t) {
  for (let r of t) switch (r.kind) {
    case "function": {
      if (r.value === "url" || r.value.endsWith("_url")) {
        r.value = Ge(r.value);
        break;
      }
      if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
        r.value = Ge(r.value);
        for (let i = 0; i < r.nodes.length; i++) Tt([r.nodes[i]]);
        break;
      }
      r.value = Ge(r.value), Tt(r.nodes);
      break;
    }
    case "separator":
      r.value = Ge(r.value);
      break;
    case "word": {
      (r.value[0] !== "-" || r.value[1] !== "-") && (r.value = Ge(r.value));
      break;
    }
    default:
      qi(r);
  }
}
var Bi = new U2((t) => {
  let r = B2(t);
  return r.length === 1 && r[0].kind === "function" && r[0].value === "var";
});
function Nt(t) {
  return Bi.get(t);
}
function qi(t) {
  throw new Error(`Unexpected value: ${t}`);
}
function Ge(t) {
  return t.replaceAll("_", String.raw`\_`).replaceAll(" ", "_");
}
function Te(t, r, i) {
  if (t === r) return 0;
  let e = t.indexOf("("), n = r.indexOf("("), s = e === -1 ? t.replace(/[\d.]+/g, "") : t.slice(0, e), a = n === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, n), p = (s === a ? 0 : s < a ? -1 : 1) || (i === "asc" ? parseInt(t) - parseInt(r) : parseInt(r) - parseInt(t));
  return Number.isNaN(p) ? t < r ? -1 : 1 : p;
}
var Gi = /* @__PURE__ */ new Set(["inset", "inherit", "initial", "revert", "unset"]);
var Ar = /^-?(\d+|\.\d+)(.*?)$/g;
function Je(t, r) {
  return d(t, ",").map((e) => {
    e = e.trim();
    let n = d(e, " ").filter((f2) => f2.trim() !== ""), s = null, a = null, p = null;
    for (let f2 of n) Gi.has(f2) || (Ar.test(f2) ? (a === null ? a = f2 : p === null && (p = f2), Ar.lastIndex = 0) : s === null && (s = f2));
    if (a === null || p === null) return e;
    let u2 = r(s ?? "currentcolor");
    return s !== null ? e.replace(s, u2) : `${e} ${u2}`;
  }).join(", ");
}
var Ji = /^-?[a-z][a-zA-Z0-9/%._-]*$/;
var Zi = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/;
var ot = ["0", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "5", "6", "7", "8", "9", "10", "11", "12", "14", "16", "20", "24", "28", "32", "36", "40", "44", "48", "52", "56", "60", "64", "72", "80", "96"];
var Et = class {
  utilities = new U2(() => []);
  completions = /* @__PURE__ */ new Map();
  static(r, i) {
    this.utilities.get(r).push({ kind: "static", compileFn: i });
  }
  functional(r, i, e) {
    this.utilities.get(r).push({ kind: "functional", compileFn: i, options: e });
  }
  has(r, i) {
    return this.utilities.has(r) && this.utilities.get(r).some((e) => e.kind === i);
  }
  get(r) {
    return this.utilities.has(r) ? this.utilities.get(r) : [];
  }
  getCompletions(r) {
    return this.completions.get(r)?.() ?? [];
  }
  suggest(r, i) {
    let e = this.completions.get(r);
    e ? this.completions.set(r, () => [...e?.(), ...i?.()]) : this.completions.set(r, i);
  }
  keys(r) {
    let i = [];
    for (let [e, n] of this.utilities.entries()) for (let s of n) if (s.kind === r) {
      i.push(e);
      break;
    }
    return i;
  }
};
function $2(t, r, i) {
  return F2("@property", t, [l3("syntax", i ? `"${i}"` : '"*"'), l3("inherits", "false"), ...r ? [l3("initial-value", r)] : []]);
}
function Q2(t, r) {
  if (r === null) return t;
  let i = Number(r);
  return Number.isNaN(i) || (r = `${i * 100}%`), r === "100%" ? t : `color-mix(in oklab, ${t} ${r}, transparent)`;
}
function $r(t, r) {
  let i = Number(r);
  return Number.isNaN(i) || (r = `${i * 100}%`), `oklab(from ${t} l a b / ${r})`;
}
function X2(t, r, i) {
  if (!r) return t;
  if (r.kind === "arbitrary") return Q2(t, r.value);
  let e = i.resolve(r.value, ["--opacity"]);
  return e ? Q2(t, e) : ue(r.value) ? Q2(t, `${r.value}%`) : null;
}
function ee2(t, r, i) {
  let e = null;
  switch (t.value.value) {
    case "inherit": {
      e = "inherit";
      break;
    }
    case "transparent": {
      e = "transparent";
      break;
    }
    case "current": {
      e = "currentcolor";
      break;
    }
    default: {
      e = r.resolve(t.value.value, i);
      break;
    }
  }
  return e ? X2(e, t.modifier, r) : null;
}
var Vr = /(\d+)_(\d+)/g;
function Sr(t) {
  let r = new Et();
  function i(o, g2) {
    function* v2(k) {
      for (let V2 of t.keysInNamespaces(k)) yield V2.replace(Vr, (D2, S2, N2) => `${S2}.${N2}`);
    }
    let C2 = ["1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "1/5", "2/5", "3/5", "4/5", "1/6", "2/6", "3/6", "4/6", "5/6", "1/12", "2/12", "3/12", "4/12", "5/12", "6/12", "7/12", "8/12", "9/12", "10/12", "11/12"];
    r.suggest(o, () => {
      let k = [];
      for (let V2 of g2()) {
        if (typeof V2 == "string") {
          k.push({ values: [V2], modifiers: [] });
          continue;
        }
        let D2 = [...V2.values ?? [], ...v2(V2.valueThemeKeys ?? [])], S2 = [...V2.modifiers ?? [], ...v2(V2.modifierThemeKeys ?? [])];
        V2.supportsFractions && D2.push(...C2), V2.hasDefaultValue && D2.unshift(null), k.push({ supportsNegative: V2.supportsNegative, values: D2, modifiers: S2 });
      }
      return k;
    });
  }
  function e(o, g2) {
    r.static(o, () => g2.map((v2) => typeof v2 == "function" ? v2() : l3(v2[0], v2[1])));
  }
  function n(o, g2) {
    function v2({ negative: C2 }) {
      return (k) => {
        let V2 = null, D2 = null;
        if (k.value) if (k.value.kind === "arbitrary") {
          if (k.modifier) return;
          V2 = k.value.value, D2 = k.value.dataType;
        } else {
          if (V2 = t.resolve(k.value.fraction ?? k.value.value, g2.themeKeys ?? []), V2 === null && g2.supportsFractions && k.value.fraction) {
            let [S2, N2] = d(k.value.fraction, "/");
            if (!u(S2) || !u(N2)) return;
            V2 = `calc(${k.value.fraction} * 100%)`;
          }
          if (V2 === null && C2 && g2.handleNegativeBareValue) {
            if (V2 = g2.handleNegativeBareValue(k.value), !V2?.includes("/") && k.modifier) return;
            if (V2 !== null) return g2.handle(V2, null);
          }
          if (V2 === null && g2.handleBareValue && (V2 = g2.handleBareValue(k.value), !V2?.includes("/") && k.modifier)) return;
          if (V2 === null && !C2 && g2.staticValues && !k.modifier) {
            let S2 = g2.staticValues[k.value.value];
            if (S2) return S2.map(te2);
          }
        }
        else {
          if (k.modifier) return;
          V2 = g2.defaultValue !== void 0 ? g2.defaultValue : t.resolve(null, g2.themeKeys ?? []);
        }
        if (V2 !== null) return g2.handle(C2 ? `calc(${V2} * -1)` : V2, D2);
      };
    }
    if (g2.supportsNegative && r.functional(`-${o}`, v2({ negative: true })), r.functional(o, v2({ negative: false })), i(o, () => [{ supportsNegative: g2.supportsNegative, valueThemeKeys: g2.themeKeys ?? [], hasDefaultValue: g2.defaultValue !== void 0 && g2.defaultValue !== null, supportsFractions: g2.supportsFractions }]), g2.staticValues && Object.keys(g2.staticValues).length > 0) {
      let C2 = Object.keys(g2.staticValues);
      i(o, () => [{ values: C2 }]);
    }
  }
  function s(o, g2) {
    r.functional(o, (v2) => {
      if (!v2.value) return;
      let C2 = null;
      if (v2.value.kind === "arbitrary" ? (C2 = v2.value.value, C2 = X2(C2, v2.modifier, t)) : C2 = ee2(v2, t, g2.themeKeys), C2 !== null) return g2.handle(C2);
    }), i(o, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: g2.themeKeys, modifiers: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}`) }]);
  }
  function a(o, g2, v2, { supportsNegative: C2 = false, supportsFractions: k = false, staticValues: V2 } = {}) {
    C2 && r.static(`-${o}-px`, () => v2("-1px")), r.static(`${o}-px`, () => v2("1px")), n(o, { themeKeys: g2, supportsFractions: k, supportsNegative: C2, defaultValue: null, handleBareValue: ({ value: D2 }) => {
      let S2 = t.resolve(null, ["--spacing"]);
      return !S2 || !ge(D2) ? null : `calc(${S2} * ${D2})`;
    }, handleNegativeBareValue: ({ value: D2 }) => {
      let S2 = t.resolve(null, ["--spacing"]);
      return !S2 || !ge(D2) ? null : `calc(${S2} * -${D2})`;
    }, handle: v2, staticValues: V2 }), i(o, () => [{ values: t.get(["--spacing"]) ? ot : [], supportsNegative: C2, supportsFractions: k, valueThemeKeys: g2 }]);
  }
  e("sr-only", [["position", "absolute"], ["width", "1px"], ["height", "1px"], ["padding", "0"], ["margin", "-1px"], ["overflow", "hidden"], ["clip-path", "inset(50%)"], ["white-space", "nowrap"], ["border-width", "0"]]), e("not-sr-only", [["position", "static"], ["width", "auto"], ["height", "auto"], ["padding", "0"], ["margin", "0"], ["overflow", "visible"], ["clip-path", "none"], ["white-space", "normal"]]), e("pointer-events-none", [["pointer-events", "none"]]), e("pointer-events-auto", [["pointer-events", "auto"]]), e("visible", [["visibility", "visible"]]), e("invisible", [["visibility", "hidden"]]), e("collapse", [["visibility", "collapse"]]), e("static", [["position", "static"]]), e("fixed", [["position", "fixed"]]), e("absolute", [["position", "absolute"]]), e("relative", [["position", "relative"]]), e("sticky", [["position", "sticky"]]);
  for (let [o, g2] of [["inset", "inset"], ["inset-x", "inset-inline"], ["inset-y", "inset-block"], ["start", "inset-inline-start"], ["end", "inset-inline-end"], ["top", "top"], ["right", "right"], ["bottom", "bottom"], ["left", "left"]]) e(`${o}-auto`, [[g2, "auto"]]), e(`${o}-full`, [[g2, "100%"]]), e(`-${o}-full`, [[g2, "-100%"]]), a(o, ["--inset", "--spacing"], (v2) => [l3(g2, v2)], { supportsNegative: true, supportsFractions: true });
  e("isolate", [["isolation", "isolate"]]), e("isolation-auto", [["isolation", "auto"]]), n("z", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--z-index"], handle: (o) => [l3("z-index", o)], staticValues: { auto: [l3("z-index", "auto")] } }), i("z", () => [{ supportsNegative: true, values: ["0", "10", "20", "30", "40", "50"], valueThemeKeys: ["--z-index"] }]), n("order", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--order"], handle: (o) => [l3("order", o)], staticValues: { first: [l3("order", "-9999")], last: [l3("order", "9999")] } }), i("order", () => [{ supportsNegative: true, values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--order"] }]), n("col", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--grid-column"], handle: (o) => [l3("grid-column", o)], staticValues: { auto: [l3("grid-column", "auto")] } }), n("col-span", { handleBareValue: ({ value: o }) => u(o) ? o : null, handle: (o) => [l3("grid-column", `span ${o} / span ${o}`)], staticValues: { full: [l3("grid-column", "1 / -1")] } }), n("col-start", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--grid-column-start"], handle: (o) => [l3("grid-column-start", o)], staticValues: { auto: [l3("grid-column-start", "auto")] } }), n("col-end", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--grid-column-end"], handle: (o) => [l3("grid-column-end", o)], staticValues: { auto: [l3("grid-column-end", "auto")] } }), i("col-span", () => [{ values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: [] }]), i("col-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--grid-column-start"] }]), i("col-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--grid-column-end"] }]), n("row", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--grid-row"], handle: (o) => [l3("grid-row", o)], staticValues: { auto: [l3("grid-row", "auto")] } }), n("row-span", { themeKeys: [], handleBareValue: ({ value: o }) => u(o) ? o : null, handle: (o) => [l3("grid-row", `span ${o} / span ${o}`)], staticValues: { full: [l3("grid-row", "1 / -1")] } }), n("row-start", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--grid-row-start"], handle: (o) => [l3("grid-row-start", o)], staticValues: { auto: [l3("grid-row-start", "auto")] } }), n("row-end", { supportsNegative: true, handleBareValue: ({ value: o }) => u(o) ? o : null, themeKeys: ["--grid-row-end"], handle: (o) => [l3("grid-row-end", o)], staticValues: { auto: [l3("grid-row-end", "auto")] } }), i("row-span", () => [{ values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: [] }]), i("row-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--grid-row-start"] }]), i("row-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--grid-row-end"] }]), e("float-start", [["float", "inline-start"]]), e("float-end", [["float", "inline-end"]]), e("float-right", [["float", "right"]]), e("float-left", [["float", "left"]]), e("float-none", [["float", "none"]]), e("clear-start", [["clear", "inline-start"]]), e("clear-end", [["clear", "inline-end"]]), e("clear-right", [["clear", "right"]]), e("clear-left", [["clear", "left"]]), e("clear-both", [["clear", "both"]]), e("clear-none", [["clear", "none"]]);
  for (let [o, g2] of [["m", "margin"], ["mx", "margin-inline"], ["my", "margin-block"], ["ms", "margin-inline-start"], ["me", "margin-inline-end"], ["mt", "margin-top"], ["mr", "margin-right"], ["mb", "margin-bottom"], ["ml", "margin-left"]]) e(`${o}-auto`, [[g2, "auto"]]), a(o, ["--margin", "--spacing"], (v2) => [l3(g2, v2)], { supportsNegative: true });
  e("box-border", [["box-sizing", "border-box"]]), e("box-content", [["box-sizing", "content-box"]]), n("line-clamp", { themeKeys: ["--line-clamp"], handleBareValue: ({ value: o }) => u(o) ? o : null, handle: (o) => [l3("overflow", "hidden"), l3("display", "-webkit-box"), l3("-webkit-box-orient", "vertical"), l3("-webkit-line-clamp", o)], staticValues: { none: [l3("overflow", "visible"), l3("display", "block"), l3("-webkit-box-orient", "horizontal"), l3("-webkit-line-clamp", "unset")] } }), i("line-clamp", () => [{ values: ["1", "2", "3", "4", "5", "6"], valueThemeKeys: ["--line-clamp"] }]), e("block", [["display", "block"]]), e("inline-block", [["display", "inline-block"]]), e("inline", [["display", "inline"]]), e("hidden", [["display", "none"]]), e("inline-flex", [["display", "inline-flex"]]), e("table", [["display", "table"]]), e("inline-table", [["display", "inline-table"]]), e("table-caption", [["display", "table-caption"]]), e("table-cell", [["display", "table-cell"]]), e("table-column", [["display", "table-column"]]), e("table-column-group", [["display", "table-column-group"]]), e("table-footer-group", [["display", "table-footer-group"]]), e("table-header-group", [["display", "table-header-group"]]), e("table-row-group", [["display", "table-row-group"]]), e("table-row", [["display", "table-row"]]), e("flow-root", [["display", "flow-root"]]), e("flex", [["display", "flex"]]), e("grid", [["display", "grid"]]), e("inline-grid", [["display", "inline-grid"]]), e("contents", [["display", "contents"]]), e("list-item", [["display", "list-item"]]), e("field-sizing-content", [["field-sizing", "content"]]), e("field-sizing-fixed", [["field-sizing", "fixed"]]), n("aspect", { themeKeys: ["--aspect"], handleBareValue: ({ fraction: o }) => {
    if (o === null) return null;
    let [g2, v2] = d(o, "/");
    return !u(g2) || !u(v2) ? null : o;
  }, handle: (o) => [l3("aspect-ratio", o)], staticValues: { auto: [l3("aspect-ratio", "auto")], square: [l3("aspect-ratio", "1 / 1")] } });
  for (let [o, g2] of [["full", "100%"], ["svw", "100svw"], ["lvw", "100lvw"], ["dvw", "100dvw"], ["svh", "100svh"], ["lvh", "100lvh"], ["dvh", "100dvh"], ["min", "min-content"], ["max", "max-content"], ["fit", "fit-content"]]) e(`size-${o}`, [["--tw-sort", "size"], ["width", g2], ["height", g2]]), e(`w-${o}`, [["width", g2]]), e(`h-${o}`, [["height", g2]]), e(`min-w-${o}`, [["min-width", g2]]), e(`min-h-${o}`, [["min-height", g2]]), e(`max-w-${o}`, [["max-width", g2]]), e(`max-h-${o}`, [["max-height", g2]]);
  e("size-auto", [["--tw-sort", "size"], ["width", "auto"], ["height", "auto"]]), e("w-auto", [["width", "auto"]]), e("h-auto", [["height", "auto"]]), e("min-w-auto", [["min-width", "auto"]]), e("min-h-auto", [["min-height", "auto"]]), e("h-lh", [["height", "1lh"]]), e("min-h-lh", [["min-height", "1lh"]]), e("max-h-lh", [["max-height", "1lh"]]), e("w-screen", [["width", "100vw"]]), e("min-w-screen", [["min-width", "100vw"]]), e("max-w-screen", [["max-width", "100vw"]]), e("h-screen", [["height", "100vh"]]), e("min-h-screen", [["min-height", "100vh"]]), e("max-h-screen", [["max-height", "100vh"]]), e("max-w-none", [["max-width", "none"]]), e("max-h-none", [["max-height", "none"]]), a("size", ["--size", "--spacing"], (o) => [l3("--tw-sort", "size"), l3("width", o), l3("height", o)], { supportsFractions: true });
  for (let [o, g2, v2] of [["w", ["--width", "--spacing", "--container"], "width"], ["min-w", ["--min-width", "--spacing", "--container"], "min-width"], ["max-w", ["--max-width", "--spacing", "--container"], "max-width"], ["h", ["--height", "--spacing"], "height"], ["min-h", ["--min-height", "--height", "--spacing"], "min-height"], ["max-h", ["--max-height", "--height", "--spacing"], "max-height"]]) a(o, g2, (C2) => [l3(v2, C2)], { supportsFractions: true });
  r.static("container", () => {
    let o = [...t.namespace("--breakpoint").values()];
    o.sort((v2, C2) => Te(v2, C2, "asc"));
    let g2 = [l3("--tw-sort", "--tw-container-component"), l3("width", "100%")];
    for (let v2 of o) g2.push(F2("@media", `(width >= ${v2})`, [l3("max-width", v2)]));
    return g2;
  }), e("flex-auto", [["flex", "auto"]]), e("flex-initial", [["flex", "0 auto"]]), e("flex-none", [["flex", "none"]]), r.functional("flex", (o) => {
    if (o.value) {
      if (o.value.kind === "arbitrary") return o.modifier ? void 0 : [l3("flex", o.value.value)];
      if (o.value.fraction) {
        let [g2, v2] = d(o.value.fraction, "/");
        return !u(g2) || !u(v2) ? void 0 : [l3("flex", `calc(${o.value.fraction} * 100%)`)];
      }
      if (u(o.value.value)) return o.modifier ? void 0 : [l3("flex", o.value.value)];
    }
  }), i("flex", () => [{ supportsFractions: true }, { values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`) }]), n("shrink", { defaultValue: "1", handleBareValue: ({ value: o }) => u(o) ? o : null, handle: (o) => [l3("flex-shrink", o)] }), n("grow", { defaultValue: "1", handleBareValue: ({ value: o }) => u(o) ? o : null, handle: (o) => [l3("flex-grow", o)] }), i("shrink", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), i("grow", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), e("basis-auto", [["flex-basis", "auto"]]), e("basis-full", [["flex-basis", "100%"]]), a("basis", ["--flex-basis", "--spacing", "--container"], (o) => [l3("flex-basis", o)], { supportsFractions: true }), e("table-auto", [["table-layout", "auto"]]), e("table-fixed", [["table-layout", "fixed"]]), e("caption-top", [["caption-side", "top"]]), e("caption-bottom", [["caption-side", "bottom"]]), e("border-collapse", [["border-collapse", "collapse"]]), e("border-separate", [["border-collapse", "separate"]]);
  let p = () => W2([$2("--tw-border-spacing-x", "0", "<length>"), $2("--tw-border-spacing-y", "0", "<length>")]);
  a("border-spacing", ["--border-spacing", "--spacing"], (o) => [p(), l3("--tw-border-spacing-x", o), l3("--tw-border-spacing-y", o), l3("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), a("border-spacing-x", ["--border-spacing", "--spacing"], (o) => [p(), l3("--tw-border-spacing-x", o), l3("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), a("border-spacing-y", ["--border-spacing", "--spacing"], (o) => [p(), l3("--tw-border-spacing-y", o), l3("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), n("origin", { themeKeys: ["--transform-origin"], handle: (o) => [l3("transform-origin", o)], staticValues: { center: [l3("transform-origin", "center")], top: [l3("transform-origin", "top")], "top-right": [l3("transform-origin", "100% 0")], right: [l3("transform-origin", "100%")], "bottom-right": [l3("transform-origin", "100% 100%")], bottom: [l3("transform-origin", "bottom")], "bottom-left": [l3("transform-origin", "0 100%")], left: [l3("transform-origin", "0")], "top-left": [l3("transform-origin", "0 0")] } }), n("perspective-origin", { themeKeys: ["--perspective-origin"], handle: (o) => [l3("perspective-origin", o)], staticValues: { center: [l3("perspective-origin", "center")], top: [l3("perspective-origin", "top")], "top-right": [l3("perspective-origin", "100% 0")], right: [l3("perspective-origin", "100%")], "bottom-right": [l3("perspective-origin", "100% 100%")], bottom: [l3("perspective-origin", "bottom")], "bottom-left": [l3("perspective-origin", "0 100%")], left: [l3("perspective-origin", "0")], "top-left": [l3("perspective-origin", "0 0")] } }), n("perspective", { themeKeys: ["--perspective"], handle: (o) => [l3("perspective", o)], staticValues: { none: [l3("perspective", "none")] } });
  let u2 = () => W2([$2("--tw-translate-x", "0"), $2("--tw-translate-y", "0"), $2("--tw-translate-z", "0")]);
  e("translate-none", [["translate", "none"]]), e("-translate-full", [u2, ["--tw-translate-x", "-100%"], ["--tw-translate-y", "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e("translate-full", [u2, ["--tw-translate-x", "100%"], ["--tw-translate-y", "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), a("translate", ["--translate", "--spacing"], (o) => [u2(), l3("--tw-translate-x", o), l3("--tw-translate-y", o), l3("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  for (let o of ["x", "y"]) e(`-translate-${o}-full`, [u2, [`--tw-translate-${o}`, "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e(`translate-${o}-full`, [u2, [`--tw-translate-${o}`, "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), a(`translate-${o}`, ["--translate", "--spacing"], (g2) => [u2(), l3(`--tw-translate-${o}`, g2), l3("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  a("translate-z", ["--translate", "--spacing"], (o) => [u2(), l3("--tw-translate-z", o), l3("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")], { supportsNegative: true }), e("translate-3d", [u2, ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]);
  let f2 = () => W2([$2("--tw-scale-x", "1"), $2("--tw-scale-y", "1"), $2("--tw-scale-z", "1")]);
  e("scale-none", [["scale", "none"]]);
  function m({ negative: o }) {
    return (g2) => {
      if (!g2.value || g2.modifier) return;
      let v2;
      return g2.value.kind === "arbitrary" ? (v2 = g2.value.value, v2 = o ? `calc(${v2} * -1)` : v2, [l3("scale", v2)]) : (v2 = t.resolve(g2.value.value, ["--scale"]), !v2 && u(g2.value.value) && (v2 = `${g2.value.value}%`), v2 ? (v2 = o ? `calc(${v2} * -1)` : v2, [f2(), l3("--tw-scale-x", v2), l3("--tw-scale-y", v2), l3("--tw-scale-z", v2), l3("scale", "var(--tw-scale-x) var(--tw-scale-y)")]) : void 0);
    };
  }
  r.functional("-scale", m({ negative: true })), r.functional("scale", m({ negative: false })), i("scale", () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  for (let o of ["x", "y", "z"]) n(`scale-${o}`, { supportsNegative: true, themeKeys: ["--scale"], handleBareValue: ({ value: g2 }) => u(g2) ? `${g2}%` : null, handle: (g2) => [f2(), l3(`--tw-scale-${o}`, g2), l3("scale", `var(--tw-scale-x) var(--tw-scale-y)${o === "z" ? " var(--tw-scale-z)" : ""}`)] }), i(`scale-${o}`, () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  e("scale-3d", [f2, ["scale", "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"]]), e("rotate-none", [["rotate", "none"]]);
  function d2({ negative: o }) {
    return (g2) => {
      if (!g2.value || g2.modifier) return;
      let v2;
      if (g2.value.kind === "arbitrary") {
        v2 = g2.value.value;
        let C2 = g2.value.dataType ?? me(v2, ["angle", "vector"]);
        if (C2 === "vector") return [l3("rotate", `${v2} var(--tw-rotate)`)];
        if (C2 !== "angle") return [l3("rotate", o ? `calc(${v2} * -1)` : v2)];
      } else if (v2 = t.resolve(g2.value.value, ["--rotate"]), !v2 && u(g2.value.value) && (v2 = `${g2.value.value}deg`), !v2) return;
      return [l3("rotate", o ? `calc(${v2} * -1)` : v2)];
    };
  }
  r.functional("-rotate", d2({ negative: true })), r.functional("rotate", d2({ negative: false })), i("rotate", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
  {
    let o = ["var(--tw-rotate-x,)", "var(--tw-rotate-y,)", "var(--tw-rotate-z,)", "var(--tw-skew-x,)", "var(--tw-skew-y,)"].join(" "), g2 = () => W2([$2("--tw-rotate-x"), $2("--tw-rotate-y"), $2("--tw-rotate-z"), $2("--tw-skew-x"), $2("--tw-skew-y")]);
    for (let v2 of ["x", "y", "z"]) n(`rotate-${v2}`, { supportsNegative: true, themeKeys: ["--rotate"], handleBareValue: ({ value: C2 }) => u(C2) ? `${C2}deg` : null, handle: (C2) => [g2(), l3(`--tw-rotate-${v2}`, `rotate${v2.toUpperCase()}(${C2})`), l3("transform", o)] }), i(`rotate-${v2}`, () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
    n("skew", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: v2 }) => u(v2) ? `${v2}deg` : null, handle: (v2) => [g2(), l3("--tw-skew-x", `skewX(${v2})`), l3("--tw-skew-y", `skewY(${v2})`), l3("transform", o)] }), n("skew-x", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: v2 }) => u(v2) ? `${v2}deg` : null, handle: (v2) => [g2(), l3("--tw-skew-x", `skewX(${v2})`), l3("transform", o)] }), n("skew-y", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: v2 }) => u(v2) ? `${v2}deg` : null, handle: (v2) => [g2(), l3("--tw-skew-y", `skewY(${v2})`), l3("transform", o)] }), i("skew", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), i("skew-x", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), i("skew-y", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), r.functional("transform", (v2) => {
      if (v2.modifier) return;
      let C2 = null;
      if (v2.value ? v2.value.kind === "arbitrary" && (C2 = v2.value.value) : C2 = o, C2 !== null) return [g2(), l3("transform", C2)];
    }), i("transform", () => [{ hasDefaultValue: true }]), e("transform-cpu", [["transform", o]]), e("transform-gpu", [["transform", `translateZ(0) ${o}`]]), e("transform-none", [["transform", "none"]]);
  }
  e("transform-flat", [["transform-style", "flat"]]), e("transform-3d", [["transform-style", "preserve-3d"]]), e("transform-content", [["transform-box", "content-box"]]), e("transform-border", [["transform-box", "border-box"]]), e("transform-fill", [["transform-box", "fill-box"]]), e("transform-stroke", [["transform-box", "stroke-box"]]), e("transform-view", [["transform-box", "view-box"]]), e("backface-visible", [["backface-visibility", "visible"]]), e("backface-hidden", [["backface-visibility", "hidden"]]);
  for (let o of ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out"]) e(`cursor-${o}`, [["cursor", o]]);
  n("cursor", { themeKeys: ["--cursor"], handle: (o) => [l3("cursor", o)] });
  for (let o of ["auto", "none", "manipulation"]) e(`touch-${o}`, [["touch-action", o]]);
  let c = () => W2([$2("--tw-pan-x"), $2("--tw-pan-y"), $2("--tw-pinch-zoom")]);
  for (let o of ["x", "left", "right"]) e(`touch-pan-${o}`, [c, ["--tw-pan-x", `pan-${o}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let o of ["y", "up", "down"]) e(`touch-pan-${o}`, [c, ["--tw-pan-y", `pan-${o}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  e("touch-pinch-zoom", [c, ["--tw-pinch-zoom", "pinch-zoom"], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let o of ["none", "text", "all", "auto"]) e(`select-${o}`, [["-webkit-user-select", o], ["user-select", o]]);
  e("resize-none", [["resize", "none"]]), e("resize-x", [["resize", "horizontal"]]), e("resize-y", [["resize", "vertical"]]), e("resize", [["resize", "both"]]), e("snap-none", [["scroll-snap-type", "none"]]);
  let w2 = () => W2([$2("--tw-scroll-snap-strictness", "proximity", "*")]);
  for (let o of ["x", "y", "both"]) e(`snap-${o}`, [w2, ["scroll-snap-type", `${o} var(--tw-scroll-snap-strictness)`]]);
  e("snap-mandatory", [w2, ["--tw-scroll-snap-strictness", "mandatory"]]), e("snap-proximity", [w2, ["--tw-scroll-snap-strictness", "proximity"]]), e("snap-align-none", [["scroll-snap-align", "none"]]), e("snap-start", [["scroll-snap-align", "start"]]), e("snap-end", [["scroll-snap-align", "end"]]), e("snap-center", [["scroll-snap-align", "center"]]), e("snap-normal", [["scroll-snap-stop", "normal"]]), e("snap-always", [["scroll-snap-stop", "always"]]);
  for (let [o, g2] of [["scroll-m", "scroll-margin"], ["scroll-mx", "scroll-margin-inline"], ["scroll-my", "scroll-margin-block"], ["scroll-ms", "scroll-margin-inline-start"], ["scroll-me", "scroll-margin-inline-end"], ["scroll-mt", "scroll-margin-top"], ["scroll-mr", "scroll-margin-right"], ["scroll-mb", "scroll-margin-bottom"], ["scroll-ml", "scroll-margin-left"]]) a(o, ["--scroll-margin", "--spacing"], (v2) => [l3(g2, v2)], { supportsNegative: true });
  for (let [o, g2] of [["scroll-p", "scroll-padding"], ["scroll-px", "scroll-padding-inline"], ["scroll-py", "scroll-padding-block"], ["scroll-ps", "scroll-padding-inline-start"], ["scroll-pe", "scroll-padding-inline-end"], ["scroll-pt", "scroll-padding-top"], ["scroll-pr", "scroll-padding-right"], ["scroll-pb", "scroll-padding-bottom"], ["scroll-pl", "scroll-padding-left"]]) a(o, ["--scroll-padding", "--spacing"], (v2) => [l3(g2, v2)]);
  e("list-inside", [["list-style-position", "inside"]]), e("list-outside", [["list-style-position", "outside"]]), n("list", { themeKeys: ["--list-style-type"], handle: (o) => [l3("list-style-type", o)], staticValues: { none: [l3("list-style-type", "none")], disc: [l3("list-style-type", "disc")], decimal: [l3("list-style-type", "decimal")] } }), n("list-image", { themeKeys: ["--list-style-image"], handle: (o) => [l3("list-style-image", o)], staticValues: { none: [l3("list-style-image", "none")] } }), e("appearance-none", [["appearance", "none"]]), e("appearance-auto", [["appearance", "auto"]]), e("scheme-normal", [["color-scheme", "normal"]]), e("scheme-dark", [["color-scheme", "dark"]]), e("scheme-light", [["color-scheme", "light"]]), e("scheme-light-dark", [["color-scheme", "light dark"]]), e("scheme-only-dark", [["color-scheme", "only dark"]]), e("scheme-only-light", [["color-scheme", "only light"]]), n("columns", { themeKeys: ["--columns", "--container"], handleBareValue: ({ value: o }) => u(o) ? o : null, handle: (o) => [l3("columns", o)], staticValues: { auto: [l3("columns", "auto")] } }), i("columns", () => [{ values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--columns", "--container"] }]);
  for (let o of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-before-${o}`, [["break-before", o]]);
  for (let o of ["auto", "avoid", "avoid-page", "avoid-column"]) e(`break-inside-${o}`, [["break-inside", o]]);
  for (let o of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-after-${o}`, [["break-after", o]]);
  e("grid-flow-row", [["grid-auto-flow", "row"]]), e("grid-flow-col", [["grid-auto-flow", "column"]]), e("grid-flow-dense", [["grid-auto-flow", "dense"]]), e("grid-flow-row-dense", [["grid-auto-flow", "row dense"]]), e("grid-flow-col-dense", [["grid-auto-flow", "column dense"]]), n("auto-cols", { themeKeys: ["--grid-auto-columns"], handle: (o) => [l3("grid-auto-columns", o)], staticValues: { auto: [l3("grid-auto-columns", "auto")], min: [l3("grid-auto-columns", "min-content")], max: [l3("grid-auto-columns", "max-content")], fr: [l3("grid-auto-columns", "minmax(0, 1fr)")] } }), n("auto-rows", { themeKeys: ["--grid-auto-rows"], handle: (o) => [l3("grid-auto-rows", o)], staticValues: { auto: [l3("grid-auto-rows", "auto")], min: [l3("grid-auto-rows", "min-content")], max: [l3("grid-auto-rows", "max-content")], fr: [l3("grid-auto-rows", "minmax(0, 1fr)")] } }), n("grid-cols", { themeKeys: ["--grid-template-columns"], handleBareValue: ({ value: o }) => pe(o) ? `repeat(${o}, minmax(0, 1fr))` : null, handle: (o) => [l3("grid-template-columns", o)], staticValues: { none: [l3("grid-template-columns", "none")], subgrid: [l3("grid-template-columns", "subgrid")] } }), n("grid-rows", { themeKeys: ["--grid-template-rows"], handleBareValue: ({ value: o }) => pe(o) ? `repeat(${o}, minmax(0, 1fr))` : null, handle: (o) => [l3("grid-template-rows", o)], staticValues: { none: [l3("grid-template-rows", "none")], subgrid: [l3("grid-template-rows", "subgrid")] } }), i("grid-cols", () => [{ values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--grid-template-columns"] }]), i("grid-rows", () => [{ values: Array.from({ length: 12 }, (o, g2) => `${g2 + 1}`), valueThemeKeys: ["--grid-template-rows"] }]), e("flex-row", [["flex-direction", "row"]]), e("flex-row-reverse", [["flex-direction", "row-reverse"]]), e("flex-col", [["flex-direction", "column"]]), e("flex-col-reverse", [["flex-direction", "column-reverse"]]), e("flex-wrap", [["flex-wrap", "wrap"]]), e("flex-nowrap", [["flex-wrap", "nowrap"]]), e("flex-wrap-reverse", [["flex-wrap", "wrap-reverse"]]), e("place-content-center", [["place-content", "center"]]), e("place-content-start", [["place-content", "start"]]), e("place-content-end", [["place-content", "end"]]), e("place-content-center-safe", [["place-content", "safe center"]]), e("place-content-end-safe", [["place-content", "safe end"]]), e("place-content-between", [["place-content", "space-between"]]), e("place-content-around", [["place-content", "space-around"]]), e("place-content-evenly", [["place-content", "space-evenly"]]), e("place-content-baseline", [["place-content", "baseline"]]), e("place-content-stretch", [["place-content", "stretch"]]), e("place-items-center", [["place-items", "center"]]), e("place-items-start", [["place-items", "start"]]), e("place-items-end", [["place-items", "end"]]), e("place-items-center-safe", [["place-items", "safe center"]]), e("place-items-end-safe", [["place-items", "safe end"]]), e("place-items-baseline", [["place-items", "baseline"]]), e("place-items-stretch", [["place-items", "stretch"]]), e("content-normal", [["align-content", "normal"]]), e("content-center", [["align-content", "center"]]), e("content-start", [["align-content", "flex-start"]]), e("content-end", [["align-content", "flex-end"]]), e("content-center-safe", [["align-content", "safe center"]]), e("content-end-safe", [["align-content", "safe flex-end"]]), e("content-between", [["align-content", "space-between"]]), e("content-around", [["align-content", "space-around"]]), e("content-evenly", [["align-content", "space-evenly"]]), e("content-baseline", [["align-content", "baseline"]]), e("content-stretch", [["align-content", "stretch"]]), e("items-center", [["align-items", "center"]]), e("items-start", [["align-items", "flex-start"]]), e("items-end", [["align-items", "flex-end"]]), e("items-center-safe", [["align-items", "safe center"]]), e("items-end-safe", [["align-items", "safe flex-end"]]), e("items-baseline", [["align-items", "baseline"]]), e("items-baseline-last", [["align-items", "last baseline"]]), e("items-stretch", [["align-items", "stretch"]]), e("justify-normal", [["justify-content", "normal"]]), e("justify-center", [["justify-content", "center"]]), e("justify-start", [["justify-content", "flex-start"]]), e("justify-end", [["justify-content", "flex-end"]]), e("justify-center-safe", [["justify-content", "safe center"]]), e("justify-end-safe", [["justify-content", "safe flex-end"]]), e("justify-between", [["justify-content", "space-between"]]), e("justify-around", [["justify-content", "space-around"]]), e("justify-evenly", [["justify-content", "space-evenly"]]), e("justify-baseline", [["justify-content", "baseline"]]), e("justify-stretch", [["justify-content", "stretch"]]), e("justify-items-normal", [["justify-items", "normal"]]), e("justify-items-center", [["justify-items", "center"]]), e("justify-items-start", [["justify-items", "start"]]), e("justify-items-end", [["justify-items", "end"]]), e("justify-items-center-safe", [["justify-items", "safe center"]]), e("justify-items-end-safe", [["justify-items", "safe end"]]), e("justify-items-stretch", [["justify-items", "stretch"]]), a("gap", ["--gap", "--spacing"], (o) => [l3("gap", o)]), a("gap-x", ["--gap", "--spacing"], (o) => [l3("column-gap", o)]), a("gap-y", ["--gap", "--spacing"], (o) => [l3("row-gap", o)]), a("space-x", ["--space", "--spacing"], (o) => [W2([$2("--tw-space-x-reverse", "0")]), G2(":where(& > :not(:last-child))", [l3("--tw-sort", "row-gap"), l3("--tw-space-x-reverse", "0"), l3("margin-inline-start", `calc(${o} * var(--tw-space-x-reverse))`), l3("margin-inline-end", `calc(${o} * calc(1 - var(--tw-space-x-reverse)))`)])], { supportsNegative: true }), a("space-y", ["--space", "--spacing"], (o) => [W2([$2("--tw-space-y-reverse", "0")]), G2(":where(& > :not(:last-child))", [l3("--tw-sort", "column-gap"), l3("--tw-space-y-reverse", "0"), l3("margin-block-start", `calc(${o} * var(--tw-space-y-reverse))`), l3("margin-block-end", `calc(${o} * calc(1 - var(--tw-space-y-reverse)))`)])], { supportsNegative: true }), e("space-x-reverse", [() => W2([$2("--tw-space-x-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [l3("--tw-sort", "row-gap"), l3("--tw-space-x-reverse", "1")])]), e("space-y-reverse", [() => W2([$2("--tw-space-y-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [l3("--tw-sort", "column-gap"), l3("--tw-space-y-reverse", "1")])]), e("accent-auto", [["accent-color", "auto"]]), s("accent", { themeKeys: ["--accent-color", "--color"], handle: (o) => [l3("accent-color", o)] }), s("caret", { themeKeys: ["--caret-color", "--color"], handle: (o) => [l3("caret-color", o)] }), s("divide", { themeKeys: ["--divide-color", "--border-color", "--color"], handle: (o) => [G2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-color"), l3("border-color", o)])] }), e("place-self-auto", [["place-self", "auto"]]), e("place-self-start", [["place-self", "start"]]), e("place-self-end", [["place-self", "end"]]), e("place-self-center", [["place-self", "center"]]), e("place-self-end-safe", [["place-self", "safe end"]]), e("place-self-center-safe", [["place-self", "safe center"]]), e("place-self-stretch", [["place-self", "stretch"]]), e("self-auto", [["align-self", "auto"]]), e("self-start", [["align-self", "flex-start"]]), e("self-end", [["align-self", "flex-end"]]), e("self-center", [["align-self", "center"]]), e("self-end-safe", [["align-self", "safe flex-end"]]), e("self-center-safe", [["align-self", "safe center"]]), e("self-stretch", [["align-self", "stretch"]]), e("self-baseline", [["align-self", "baseline"]]), e("self-baseline-last", [["align-self", "last baseline"]]), e("justify-self-auto", [["justify-self", "auto"]]), e("justify-self-start", [["justify-self", "flex-start"]]), e("justify-self-end", [["justify-self", "flex-end"]]), e("justify-self-center", [["justify-self", "center"]]), e("justify-self-end-safe", [["justify-self", "safe flex-end"]]), e("justify-self-center-safe", [["justify-self", "safe center"]]), e("justify-self-stretch", [["justify-self", "stretch"]]);
  for (let o of ["auto", "hidden", "clip", "visible", "scroll"]) e(`overflow-${o}`, [["overflow", o]]), e(`overflow-x-${o}`, [["overflow-x", o]]), e(`overflow-y-${o}`, [["overflow-y", o]]);
  for (let o of ["auto", "contain", "none"]) e(`overscroll-${o}`, [["overscroll-behavior", o]]), e(`overscroll-x-${o}`, [["overscroll-behavior-x", o]]), e(`overscroll-y-${o}`, [["overscroll-behavior-y", o]]);
  e("scroll-auto", [["scroll-behavior", "auto"]]), e("scroll-smooth", [["scroll-behavior", "smooth"]]), e("truncate", [["overflow", "hidden"], ["text-overflow", "ellipsis"], ["white-space", "nowrap"]]), e("text-ellipsis", [["text-overflow", "ellipsis"]]), e("text-clip", [["text-overflow", "clip"]]), e("hyphens-none", [["-webkit-hyphens", "none"], ["hyphens", "none"]]), e("hyphens-manual", [["-webkit-hyphens", "manual"], ["hyphens", "manual"]]), e("hyphens-auto", [["-webkit-hyphens", "auto"], ["hyphens", "auto"]]), e("whitespace-normal", [["white-space", "normal"]]), e("whitespace-nowrap", [["white-space", "nowrap"]]), e("whitespace-pre", [["white-space", "pre"]]), e("whitespace-pre-line", [["white-space", "pre-line"]]), e("whitespace-pre-wrap", [["white-space", "pre-wrap"]]), e("whitespace-break-spaces", [["white-space", "break-spaces"]]), e("text-wrap", [["text-wrap", "wrap"]]), e("text-nowrap", [["text-wrap", "nowrap"]]), e("text-balance", [["text-wrap", "balance"]]), e("text-pretty", [["text-wrap", "pretty"]]), e("break-normal", [["overflow-wrap", "normal"], ["word-break", "normal"]]), e("break-all", [["word-break", "break-all"]]), e("break-keep", [["word-break", "keep-all"]]), e("wrap-anywhere", [["overflow-wrap", "anywhere"]]), e("wrap-break-word", [["overflow-wrap", "break-word"]]), e("wrap-normal", [["overflow-wrap", "normal"]]);
  for (let [o, g2] of [["rounded", ["border-radius"]], ["rounded-s", ["border-start-start-radius", "border-end-start-radius"]], ["rounded-e", ["border-start-end-radius", "border-end-end-radius"]], ["rounded-t", ["border-top-left-radius", "border-top-right-radius"]], ["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]], ["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]], ["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]], ["rounded-ss", ["border-start-start-radius"]], ["rounded-se", ["border-start-end-radius"]], ["rounded-ee", ["border-end-end-radius"]], ["rounded-es", ["border-end-start-radius"]], ["rounded-tl", ["border-top-left-radius"]], ["rounded-tr", ["border-top-right-radius"]], ["rounded-br", ["border-bottom-right-radius"]], ["rounded-bl", ["border-bottom-left-radius"]]]) n(o, { themeKeys: ["--radius"], handle: (v2) => g2.map((C2) => l3(C2, v2)), staticValues: { none: g2.map((v2) => l3(v2, "0")), full: g2.map((v2) => l3(v2, "calc(infinity * 1px)")) } });
  e("border-solid", [["--tw-border-style", "solid"], ["border-style", "solid"]]), e("border-dashed", [["--tw-border-style", "dashed"], ["border-style", "dashed"]]), e("border-dotted", [["--tw-border-style", "dotted"], ["border-style", "dotted"]]), e("border-double", [["--tw-border-style", "double"], ["border-style", "double"]]), e("border-hidden", [["--tw-border-style", "hidden"], ["border-style", "hidden"]]), e("border-none", [["--tw-border-style", "none"], ["border-style", "none"]]);
  {
    let g2 = function(v2, C2) {
      r.functional(v2, (k) => {
        if (!k.value) {
          if (k.modifier) return;
          let V2 = t.get(["--default-border-width"]) ?? "1px", D2 = C2.width(V2);
          return D2 ? [o(), ...D2] : void 0;
        }
        if (k.value.kind === "arbitrary") {
          let V2 = k.value.value;
          switch (k.value.dataType ?? me(V2, ["color", "line-width", "length"])) {
            case "line-width":
            case "length": {
              if (k.modifier) return;
              let S2 = C2.width(V2);
              return S2 ? [o(), ...S2] : void 0;
            }
            default:
              return V2 = X2(V2, k.modifier, t), V2 === null ? void 0 : C2.color(V2);
          }
        }
        {
          let V2 = ee2(k, t, ["--border-color", "--color"]);
          if (V2) return C2.color(V2);
        }
        {
          if (k.modifier) return;
          let V2 = t.resolve(k.value.value, ["--border-width"]);
          if (V2) {
            let D2 = C2.width(V2);
            return D2 ? [o(), ...D2] : void 0;
          }
          if (u(k.value.value)) {
            let D2 = C2.width(`${k.value.value}px`);
            return D2 ? [o(), ...D2] : void 0;
          }
        }
      }), i(v2, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--border-color", "--color"], modifiers: Array.from({ length: 21 }, (k, V2) => `${V2 * 5}`), hasDefaultValue: true }, { values: ["0", "2", "4", "8"], valueThemeKeys: ["--border-width"] }]);
    };
    var _2 = g2;
    let o = () => W2([$2("--tw-border-style", "solid")]);
    g2("border", { width: (v2) => [l3("border-style", "var(--tw-border-style)"), l3("border-width", v2)], color: (v2) => [l3("border-color", v2)] }), g2("border-x", { width: (v2) => [l3("border-inline-style", "var(--tw-border-style)"), l3("border-inline-width", v2)], color: (v2) => [l3("border-inline-color", v2)] }), g2("border-y", { width: (v2) => [l3("border-block-style", "var(--tw-border-style)"), l3("border-block-width", v2)], color: (v2) => [l3("border-block-color", v2)] }), g2("border-s", { width: (v2) => [l3("border-inline-start-style", "var(--tw-border-style)"), l3("border-inline-start-width", v2)], color: (v2) => [l3("border-inline-start-color", v2)] }), g2("border-e", { width: (v2) => [l3("border-inline-end-style", "var(--tw-border-style)"), l3("border-inline-end-width", v2)], color: (v2) => [l3("border-inline-end-color", v2)] }), g2("border-t", { width: (v2) => [l3("border-top-style", "var(--tw-border-style)"), l3("border-top-width", v2)], color: (v2) => [l3("border-top-color", v2)] }), g2("border-r", { width: (v2) => [l3("border-right-style", "var(--tw-border-style)"), l3("border-right-width", v2)], color: (v2) => [l3("border-right-color", v2)] }), g2("border-b", { width: (v2) => [l3("border-bottom-style", "var(--tw-border-style)"), l3("border-bottom-width", v2)], color: (v2) => [l3("border-bottom-color", v2)] }), g2("border-l", { width: (v2) => [l3("border-left-style", "var(--tw-border-style)"), l3("border-left-width", v2)], color: (v2) => [l3("border-left-color", v2)] }), n("divide-x", { defaultValue: t.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: v2 }) => u(v2) ? `${v2}px` : null, handle: (v2) => [W2([$2("--tw-divide-x-reverse", "0")]), G2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-x-width"), o(), l3("--tw-divide-x-reverse", "0"), l3("border-inline-style", "var(--tw-border-style)"), l3("border-inline-start-width", `calc(${v2} * var(--tw-divide-x-reverse))`), l3("border-inline-end-width", `calc(${v2} * calc(1 - var(--tw-divide-x-reverse)))`)])] }), n("divide-y", { defaultValue: t.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: v2 }) => u(v2) ? `${v2}px` : null, handle: (v2) => [W2([$2("--tw-divide-y-reverse", "0")]), G2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-y-width"), o(), l3("--tw-divide-y-reverse", "0"), l3("border-bottom-style", "var(--tw-border-style)"), l3("border-top-style", "var(--tw-border-style)"), l3("border-top-width", `calc(${v2} * var(--tw-divide-y-reverse))`), l3("border-bottom-width", `calc(${v2} * calc(1 - var(--tw-divide-y-reverse)))`)])] }), i("divide-x", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), i("divide-y", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), e("divide-x-reverse", [() => W2([$2("--tw-divide-x-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [l3("--tw-divide-x-reverse", "1")])]), e("divide-y-reverse", [() => W2([$2("--tw-divide-y-reverse", "0")]), () => G2(":where(& > :not(:last-child))", [l3("--tw-divide-y-reverse", "1")])]);
    for (let v2 of ["solid", "dashed", "dotted", "double", "none"]) e(`divide-${v2}`, [() => G2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-style"), l3("--tw-border-style", v2), l3("border-style", v2)])]);
  }
  e("bg-auto", [["background-size", "auto"]]), e("bg-cover", [["background-size", "cover"]]), e("bg-contain", [["background-size", "contain"]]), n("bg-size", { handle(o) {
    if (o) return [l3("background-size", o)];
  } }), e("bg-fixed", [["background-attachment", "fixed"]]), e("bg-local", [["background-attachment", "local"]]), e("bg-scroll", [["background-attachment", "scroll"]]), e("bg-top", [["background-position", "top"]]), e("bg-top-left", [["background-position", "left top"]]), e("bg-top-right", [["background-position", "right top"]]), e("bg-bottom", [["background-position", "bottom"]]), e("bg-bottom-left", [["background-position", "left bottom"]]), e("bg-bottom-right", [["background-position", "right bottom"]]), e("bg-left", [["background-position", "left"]]), e("bg-right", [["background-position", "right"]]), e("bg-center", [["background-position", "center"]]), n("bg-position", { handle(o) {
    if (o) return [l3("background-position", o)];
  } }), e("bg-repeat", [["background-repeat", "repeat"]]), e("bg-no-repeat", [["background-repeat", "no-repeat"]]), e("bg-repeat-x", [["background-repeat", "repeat-x"]]), e("bg-repeat-y", [["background-repeat", "repeat-y"]]), e("bg-repeat-round", [["background-repeat", "round"]]), e("bg-repeat-space", [["background-repeat", "space"]]), e("bg-none", [["background-image", "none"]]);
  {
    let v2 = function(V2) {
      let D2 = "in oklab";
      if (V2?.kind === "named") switch (V2.value) {
        case "longer":
        case "shorter":
        case "increasing":
        case "decreasing":
          D2 = `in oklch ${V2.value} hue`;
          break;
        default:
          D2 = `in ${V2.value}`;
      }
      else V2?.kind === "arbitrary" && (D2 = V2.value);
      return D2;
    }, C2 = function({ negative: V2 }) {
      return (D2) => {
        if (!D2.value) return;
        if (D2.value.kind === "arbitrary") {
          if (D2.modifier) return;
          let z2 = D2.value.value;
          switch (D2.value.dataType ?? me(z2, ["angle"])) {
            case "angle":
              return z2 = V2 ? `calc(${z2} * -1)` : `${z2}`, [l3("--tw-gradient-position", z2), l3("background-image", `linear-gradient(var(--tw-gradient-stops,${z2}))`)];
            default:
              return V2 ? void 0 : [l3("--tw-gradient-position", z2), l3("background-image", `linear-gradient(var(--tw-gradient-stops,${z2}))`)];
          }
        }
        let S2 = D2.value.value;
        if (!V2 && g2.has(S2)) S2 = g2.get(S2);
        else if (u(S2)) S2 = V2 ? `calc(${S2}deg * -1)` : `${S2}deg`;
        else return;
        let N2 = v2(D2.modifier);
        return [l3("--tw-gradient-position", `${S2}`), Z2("@supports (background-image: linear-gradient(in lab, red, red))", [l3("--tw-gradient-position", `${S2} ${N2}`)]), l3("background-image", "linear-gradient(var(--tw-gradient-stops))")];
      };
    }, k = function({ negative: V2 }) {
      return (D2) => {
        if (D2.value?.kind === "arbitrary") {
          if (D2.modifier) return;
          let z2 = D2.value.value;
          return [l3("--tw-gradient-position", z2), l3("background-image", `conic-gradient(var(--tw-gradient-stops,${z2}))`)];
        }
        let S2 = v2(D2.modifier);
        if (!D2.value) return [l3("--tw-gradient-position", S2), l3("background-image", "conic-gradient(var(--tw-gradient-stops))")];
        let N2 = D2.value.value;
        if (u(N2)) return N2 = V2 ? `calc(${N2}deg * -1)` : `${N2}deg`, [l3("--tw-gradient-position", `from ${N2} ${S2}`), l3("background-image", "conic-gradient(var(--tw-gradient-stops))")];
      };
    };
    var M2 = v2, q2 = C2, H2 = k;
    let o = ["oklab", "oklch", "srgb", "hsl", "longer", "shorter", "increasing", "decreasing"], g2 = /* @__PURE__ */ new Map([["to-t", "to top"], ["to-tr", "to top right"], ["to-r", "to right"], ["to-br", "to bottom right"], ["to-b", "to bottom"], ["to-bl", "to bottom left"], ["to-l", "to left"], ["to-tl", "to top left"]]);
    r.functional("-bg-linear", C2({ negative: true })), r.functional("bg-linear", C2({ negative: false })), i("bg-linear", () => [{ values: [...g2.keys()], modifiers: o }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: o }]), r.functional("-bg-conic", k({ negative: true })), r.functional("bg-conic", k({ negative: false })), i("bg-conic", () => [{ hasDefaultValue: true, modifiers: o }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: o }]), r.functional("bg-radial", (V2) => {
      if (!V2.value) {
        let D2 = v2(V2.modifier);
        return [l3("--tw-gradient-position", D2), l3("background-image", "radial-gradient(var(--tw-gradient-stops))")];
      }
      if (V2.value.kind === "arbitrary") {
        if (V2.modifier) return;
        let D2 = V2.value.value;
        return [l3("--tw-gradient-position", D2), l3("background-image", `radial-gradient(var(--tw-gradient-stops,${D2}))`)];
      }
    }), i("bg-radial", () => [{ hasDefaultValue: true, modifiers: o }]);
  }
  r.functional("bg", (o) => {
    if (o.value) {
      if (o.value.kind === "arbitrary") {
        let g2 = o.value.value;
        switch (o.value.dataType ?? me(g2, ["image", "color", "percentage", "position", "bg-size", "length", "url"])) {
          case "percentage":
          case "position":
            return o.modifier ? void 0 : [l3("background-position", g2)];
          case "bg-size":
          case "length":
          case "size":
            return o.modifier ? void 0 : [l3("background-size", g2)];
          case "image":
          case "url":
            return o.modifier ? void 0 : [l3("background-image", g2)];
          default:
            return g2 = X2(g2, o.modifier, t), g2 === null ? void 0 : [l3("background-color", g2)];
        }
      }
      {
        let g2 = ee2(o, t, ["--background-color", "--color"]);
        if (g2) return [l3("background-color", g2)];
      }
      {
        if (o.modifier) return;
        let g2 = t.resolve(o.value.value, ["--background-image"]);
        if (g2) return [l3("background-image", g2)];
      }
    }
  }), i("bg", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }, { values: [], valueThemeKeys: ["--background-image"] }]);
  let h2 = () => W2([$2("--tw-gradient-position"), $2("--tw-gradient-from", "#0000", "<color>"), $2("--tw-gradient-via", "#0000", "<color>"), $2("--tw-gradient-to", "#0000", "<color>"), $2("--tw-gradient-stops"), $2("--tw-gradient-via-stops"), $2("--tw-gradient-from-position", "0%", "<length-percentage>"), $2("--tw-gradient-via-position", "50%", "<length-percentage>"), $2("--tw-gradient-to-position", "100%", "<length-percentage>")]);
  function y2(o, g2) {
    r.functional(o, (v2) => {
      if (v2.value) {
        if (v2.value.kind === "arbitrary") {
          let C2 = v2.value.value;
          switch (v2.value.dataType ?? me(C2, ["color", "length", "percentage"])) {
            case "length":
            case "percentage":
              return v2.modifier ? void 0 : g2.position(C2);
            default:
              return C2 = X2(C2, v2.modifier, t), C2 === null ? void 0 : g2.color(C2);
          }
        }
        {
          let C2 = ee2(v2, t, ["--background-color", "--color"]);
          if (C2) return g2.color(C2);
        }
        {
          if (v2.modifier) return;
          let C2 = t.resolve(v2.value.value, ["--gradient-color-stop-positions"]);
          if (C2) return g2.position(C2);
          if (v2.value.value[v2.value.value.length - 1] === "%" && u(v2.value.value.slice(0, -1))) return g2.position(v2.value.value);
        }
      }
    }), i(o, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}`) }, { values: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}%`), valueThemeKeys: ["--gradient-color-stop-positions"] }]);
  }
  y2("from", { color: (o) => [h2(), l3("--tw-sort", "--tw-gradient-from"), l3("--tw-gradient-from", o), l3("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (o) => [h2(), l3("--tw-gradient-from-position", o)] }), e("via-none", [["--tw-gradient-via-stops", "initial"]]), y2("via", { color: (o) => [h2(), l3("--tw-sort", "--tw-gradient-via"), l3("--tw-gradient-via", o), l3("--tw-gradient-via-stops", "var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"), l3("--tw-gradient-stops", "var(--tw-gradient-via-stops)")], position: (o) => [h2(), l3("--tw-gradient-via-position", o)] }), y2("to", { color: (o) => [h2(), l3("--tw-sort", "--tw-gradient-to"), l3("--tw-gradient-to", o), l3("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (o) => [h2(), l3("--tw-gradient-to-position", o)] }), e("mask-none", [["mask-image", "none"]]), r.functional("mask", (o) => {
    if (!o.value || o.modifier || o.value.kind !== "arbitrary") return;
    let g2 = o.value.value;
    switch (o.value.dataType ?? me(g2, ["image", "percentage", "position", "bg-size", "length", "url"])) {
      case "percentage":
      case "position":
        return o.modifier ? void 0 : [l3("mask-position", g2)];
      case "bg-size":
      case "length":
      case "size":
        return [l3("mask-size", g2)];
      case "image":
      case "url":
      default:
        return [l3("mask-image", g2)];
    }
  }), e("mask-add", [["mask-composite", "add"]]), e("mask-subtract", [["mask-composite", "subtract"]]), e("mask-intersect", [["mask-composite", "intersect"]]), e("mask-exclude", [["mask-composite", "exclude"]]), e("mask-alpha", [["mask-mode", "alpha"]]), e("mask-luminance", [["mask-mode", "luminance"]]), e("mask-match", [["mask-mode", "match-source"]]), e("mask-type-alpha", [["mask-type", "alpha"]]), e("mask-type-luminance", [["mask-type", "luminance"]]), e("mask-auto", [["mask-size", "auto"]]), e("mask-cover", [["mask-size", "cover"]]), e("mask-contain", [["mask-size", "contain"]]), n("mask-size", { handle(o) {
    if (o) return [l3("mask-size", o)];
  } }), e("mask-top", [["mask-position", "top"]]), e("mask-top-left", [["mask-position", "left top"]]), e("mask-top-right", [["mask-position", "right top"]]), e("mask-bottom", [["mask-position", "bottom"]]), e("mask-bottom-left", [["mask-position", "left bottom"]]), e("mask-bottom-right", [["mask-position", "right bottom"]]), e("mask-left", [["mask-position", "left"]]), e("mask-right", [["mask-position", "right"]]), e("mask-center", [["mask-position", "center"]]), n("mask-position", { handle(o) {
    if (o) return [l3("mask-position", o)];
  } }), e("mask-repeat", [["mask-repeat", "repeat"]]), e("mask-no-repeat", [["mask-repeat", "no-repeat"]]), e("mask-repeat-x", [["mask-repeat", "repeat-x"]]), e("mask-repeat-y", [["mask-repeat", "repeat-y"]]), e("mask-repeat-round", [["mask-repeat", "round"]]), e("mask-repeat-space", [["mask-repeat", "space"]]), e("mask-clip-border", [["mask-clip", "border-box"]]), e("mask-clip-padding", [["mask-clip", "padding-box"]]), e("mask-clip-content", [["mask-clip", "content-box"]]), e("mask-clip-fill", [["mask-clip", "fill-box"]]), e("mask-clip-stroke", [["mask-clip", "stroke-box"]]), e("mask-clip-view", [["mask-clip", "view-box"]]), e("mask-no-clip", [["mask-clip", "no-clip"]]), e("mask-origin-border", [["mask-origin", "border-box"]]), e("mask-origin-padding", [["mask-origin", "padding-box"]]), e("mask-origin-content", [["mask-origin", "content-box"]]), e("mask-origin-fill", [["mask-origin", "fill-box"]]), e("mask-origin-stroke", [["mask-origin", "stroke-box"]]), e("mask-origin-view", [["mask-origin", "view-box"]]);
  let x2 = () => W2([$2("--tw-mask-linear", "linear-gradient(#fff, #fff)"), $2("--tw-mask-radial", "linear-gradient(#fff, #fff)"), $2("--tw-mask-conic", "linear-gradient(#fff, #fff)")]);
  function T2(o, g2) {
    r.functional(o, (v2) => {
      if (v2.value) {
        if (v2.value.kind === "arbitrary") {
          let C2 = v2.value.value;
          switch (v2.value.dataType ?? me(C2, ["length", "percentage", "color"])) {
            case "color":
              return C2 = X2(C2, v2.modifier, t), C2 === null ? void 0 : g2.color(C2);
            case "percentage":
              return v2.modifier || !u(C2.slice(0, -1)) ? void 0 : g2.position(C2);
            default:
              return v2.modifier ? void 0 : g2.position(C2);
          }
        }
        {
          let C2 = ee2(v2, t, ["--background-color", "--color"]);
          if (C2) return g2.color(C2);
        }
        {
          if (v2.modifier) return;
          let C2 = me(v2.value.value, ["number", "percentage"]);
          if (!C2) return;
          switch (C2) {
            case "number": {
              let k = t.resolve(null, ["--spacing"]);
              return !k || !ge(v2.value.value) ? void 0 : g2.position(`calc(${k} * ${v2.value.value})`);
            }
            case "percentage":
              return u(v2.value.value.slice(0, -1)) ? g2.position(v2.value.value) : void 0;
            default:
              return;
          }
        }
      }
    }), i(o, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}`) }, { values: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}%`), valueThemeKeys: ["--gradient-color-stop-positions"] }]), i(o, () => [{ values: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}%`) }, { values: t.get(["--spacing"]) ? ot : [] }, { values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (v2, C2) => `${C2 * 5}`) }]);
  }
  let A2 = () => W2([$2("--tw-mask-left", "linear-gradient(#fff, #fff)"), $2("--tw-mask-right", "linear-gradient(#fff, #fff)"), $2("--tw-mask-bottom", "linear-gradient(#fff, #fff)"), $2("--tw-mask-top", "linear-gradient(#fff, #fff)")]);
  function b2(o, g2, v2) {
    T2(o, { color(C2) {
      let k = [x2(), A2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")];
      for (let V2 of ["top", "right", "bottom", "left"]) v2[V2] && (k.push(l3(`--tw-mask-${V2}`, `linear-gradient(to ${V2}, var(--tw-mask-${V2}-from-color) var(--tw-mask-${V2}-from-position), var(--tw-mask-${V2}-to-color) var(--tw-mask-${V2}-to-position))`)), k.push(W2([$2(`--tw-mask-${V2}-from-position`, "0%"), $2(`--tw-mask-${V2}-to-position`, "100%"), $2(`--tw-mask-${V2}-from-color`, "black"), $2(`--tw-mask-${V2}-to-color`, "transparent")])), k.push(l3(`--tw-mask-${V2}-${g2}-color`, C2)));
      return k;
    }, position(C2) {
      let k = [x2(), A2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")];
      for (let V2 of ["top", "right", "bottom", "left"]) v2[V2] && (k.push(l3(`--tw-mask-${V2}`, `linear-gradient(to ${V2}, var(--tw-mask-${V2}-from-color) var(--tw-mask-${V2}-from-position), var(--tw-mask-${V2}-to-color) var(--tw-mask-${V2}-to-position))`)), k.push(W2([$2(`--tw-mask-${V2}-from-position`, "0%"), $2(`--tw-mask-${V2}-to-position`, "100%"), $2(`--tw-mask-${V2}-from-color`, "black"), $2(`--tw-mask-${V2}-to-color`, "transparent")])), k.push(l3(`--tw-mask-${V2}-${g2}-position`, C2)));
      return k;
    } });
  }
  b2("mask-x-from", "from", { top: false, right: true, bottom: false, left: true }), b2("mask-x-to", "to", { top: false, right: true, bottom: false, left: true }), b2("mask-y-from", "from", { top: true, right: false, bottom: true, left: false }), b2("mask-y-to", "to", { top: true, right: false, bottom: true, left: false }), b2("mask-t-from", "from", { top: true, right: false, bottom: false, left: false }), b2("mask-t-to", "to", { top: true, right: false, bottom: false, left: false }), b2("mask-r-from", "from", { top: false, right: true, bottom: false, left: false }), b2("mask-r-to", "to", { top: false, right: true, bottom: false, left: false }), b2("mask-b-from", "from", { top: false, right: false, bottom: true, left: false }), b2("mask-b-to", "to", { top: false, right: false, bottom: true, left: false }), b2("mask-l-from", "from", { top: false, right: false, bottom: false, left: true }), b2("mask-l-to", "to", { top: false, right: false, bottom: false, left: true });
  let j2 = () => W2([$2("--tw-mask-linear-position", "0deg"), $2("--tw-mask-linear-from-position", "0%"), $2("--tw-mask-linear-to-position", "100%"), $2("--tw-mask-linear-from-color", "black"), $2("--tw-mask-linear-to-color", "transparent")]);
  n("mask-linear", { defaultValue: null, supportsNegative: true, supportsFractions: false, handleBareValue(o) {
    return u(o.value) ? `calc(1deg * ${o.value})` : null;
  }, handleNegativeBareValue(o) {
    return u(o.value) ? `calc(1deg * -${o.value})` : null;
  }, handle: (o) => [x2(), j2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)))"), l3("--tw-mask-linear-position", o)] }), i("mask-linear", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"] }]), T2("mask-linear-from", { color: (o) => [x2(), j2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"), l3("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"), l3("--tw-mask-linear-from-color", o)], position: (o) => [x2(), j2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"), l3("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"), l3("--tw-mask-linear-from-position", o)] }), T2("mask-linear-to", { color: (o) => [x2(), j2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"), l3("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"), l3("--tw-mask-linear-to-color", o)], position: (o) => [x2(), j2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"), l3("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"), l3("--tw-mask-linear-to-position", o)] });
  let R2 = () => W2([$2("--tw-mask-radial-from-position", "0%"), $2("--tw-mask-radial-to-position", "100%"), $2("--tw-mask-radial-from-color", "black"), $2("--tw-mask-radial-to-color", "transparent"), $2("--tw-mask-radial-shape", "ellipse"), $2("--tw-mask-radial-size", "farthest-corner"), $2("--tw-mask-radial-position", "center")]);
  e("mask-circle", [["--tw-mask-radial-shape", "circle"]]), e("mask-ellipse", [["--tw-mask-radial-shape", "ellipse"]]), e("mask-radial-closest-side", [["--tw-mask-radial-size", "closest-side"]]), e("mask-radial-farthest-side", [["--tw-mask-radial-size", "farthest-side"]]), e("mask-radial-closest-corner", [["--tw-mask-radial-size", "closest-corner"]]), e("mask-radial-farthest-corner", [["--tw-mask-radial-size", "farthest-corner"]]), e("mask-radial-at-top", [["--tw-mask-radial-position", "top"]]), e("mask-radial-at-top-left", [["--tw-mask-radial-position", "top left"]]), e("mask-radial-at-top-right", [["--tw-mask-radial-position", "top right"]]), e("mask-radial-at-bottom", [["--tw-mask-radial-position", "bottom"]]), e("mask-radial-at-bottom-left", [["--tw-mask-radial-position", "bottom left"]]), e("mask-radial-at-bottom-right", [["--tw-mask-radial-position", "bottom right"]]), e("mask-radial-at-left", [["--tw-mask-radial-position", "left"]]), e("mask-radial-at-right", [["--tw-mask-radial-position", "right"]]), e("mask-radial-at-center", [["--tw-mask-radial-position", "center"]]), n("mask-radial-at", { defaultValue: null, supportsNegative: false, supportsFractions: false, handle: (o) => [l3("--tw-mask-radial-position", o)] }), n("mask-radial", { defaultValue: null, supportsNegative: false, supportsFractions: false, handle: (o) => [x2(), R2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops, var(--tw-mask-radial-size)))"), l3("--tw-mask-radial-size", o)] }), T2("mask-radial-from", { color: (o) => [x2(), R2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"), l3("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"), l3("--tw-mask-radial-from-color", o)], position: (o) => [x2(), R2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"), l3("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"), l3("--tw-mask-radial-from-position", o)] }), T2("mask-radial-to", { color: (o) => [x2(), R2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"), l3("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"), l3("--tw-mask-radial-to-color", o)], position: (o) => [x2(), R2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"), l3("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"), l3("--tw-mask-radial-to-position", o)] });
  let K2 = () => W2([$2("--tw-mask-conic-position", "0deg"), $2("--tw-mask-conic-from-position", "0%"), $2("--tw-mask-conic-to-position", "100%"), $2("--tw-mask-conic-from-color", "black"), $2("--tw-mask-conic-to-color", "transparent")]);
  n("mask-conic", { defaultValue: null, supportsNegative: true, supportsFractions: false, handleBareValue(o) {
    return u(o.value) ? `calc(1deg * ${o.value})` : null;
  }, handleNegativeBareValue(o) {
    return u(o.value) ? `calc(1deg * -${o.value})` : null;
  }, handle: (o) => [x2(), K2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)))"), l3("--tw-mask-conic-position", o)] }), i("mask-conic", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"] }]), T2("mask-conic-from", { color: (o) => [x2(), K2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"), l3("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"), l3("--tw-mask-conic-from-color", o)], position: (o) => [x2(), K2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"), l3("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"), l3("--tw-mask-conic-from-position", o)] }), T2("mask-conic-to", { color: (o) => [x2(), K2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"), l3("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"), l3("--tw-mask-conic-to-color", o)], position: (o) => [x2(), K2(), l3("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"), l3("mask-composite", "intersect"), l3("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"), l3("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"), l3("--tw-mask-conic-to-position", o)] }), e("box-decoration-slice", [["-webkit-box-decoration-break", "slice"], ["box-decoration-break", "slice"]]), e("box-decoration-clone", [["-webkit-box-decoration-break", "clone"], ["box-decoration-break", "clone"]]), e("bg-clip-text", [["background-clip", "text"]]), e("bg-clip-border", [["background-clip", "border-box"]]), e("bg-clip-padding", [["background-clip", "padding-box"]]), e("bg-clip-content", [["background-clip", "content-box"]]), e("bg-origin-border", [["background-origin", "border-box"]]), e("bg-origin-padding", [["background-origin", "padding-box"]]), e("bg-origin-content", [["background-origin", "content-box"]]);
  for (let o of ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"]) e(`bg-blend-${o}`, [["background-blend-mode", o]]), e(`mix-blend-${o}`, [["mix-blend-mode", o]]);
  e("mix-blend-plus-darker", [["mix-blend-mode", "plus-darker"]]), e("mix-blend-plus-lighter", [["mix-blend-mode", "plus-lighter"]]), e("fill-none", [["fill", "none"]]), r.functional("fill", (o) => {
    if (!o.value) return;
    if (o.value.kind === "arbitrary") {
      let v2 = X2(o.value.value, o.modifier, t);
      return v2 === null ? void 0 : [l3("fill", v2)];
    }
    let g2 = ee2(o, t, ["--fill", "--color"]);
    if (g2) return [l3("fill", g2)];
  }), i("fill", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--fill", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }]), e("stroke-none", [["stroke", "none"]]), r.functional("stroke", (o) => {
    if (o.value) {
      if (o.value.kind === "arbitrary") {
        let g2 = o.value.value;
        switch (o.value.dataType ?? me(g2, ["color", "number", "length", "percentage"])) {
          case "number":
          case "length":
          case "percentage":
            return o.modifier ? void 0 : [l3("stroke-width", g2)];
          default:
            return g2 = X2(o.value.value, o.modifier, t), g2 === null ? void 0 : [l3("stroke", g2)];
        }
      }
      {
        let g2 = ee2(o, t, ["--stroke", "--color"]);
        if (g2) return [l3("stroke", g2)];
      }
      {
        let g2 = t.resolve(o.value.value, ["--stroke-width"]);
        if (g2) return [l3("stroke-width", g2)];
        if (u(o.value.value)) return [l3("stroke-width", o.value.value)];
      }
    }
  }), i("stroke", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--stroke", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }, { values: ["0", "1", "2", "3"], valueThemeKeys: ["--stroke-width"] }]), e("object-contain", [["object-fit", "contain"]]), e("object-cover", [["object-fit", "cover"]]), e("object-fill", [["object-fit", "fill"]]), e("object-none", [["object-fit", "none"]]), e("object-scale-down", [["object-fit", "scale-down"]]), n("object", { themeKeys: ["--object-position"], handle: (o) => [l3("object-position", o)], staticValues: { top: [l3("object-position", "top")], "top-left": [l3("object-position", "left top")], "top-right": [l3("object-position", "right top")], bottom: [l3("object-position", "bottom")], "bottom-left": [l3("object-position", "left bottom")], "bottom-right": [l3("object-position", "right bottom")], left: [l3("object-position", "left")], right: [l3("object-position", "right")], center: [l3("object-position", "center")] } });
  for (let [o, g2] of [["p", "padding"], ["px", "padding-inline"], ["py", "padding-block"], ["ps", "padding-inline-start"], ["pe", "padding-inline-end"], ["pt", "padding-top"], ["pr", "padding-right"], ["pb", "padding-bottom"], ["pl", "padding-left"]]) a(o, ["--padding", "--spacing"], (v2) => [l3(g2, v2)]);
  e("text-left", [["text-align", "left"]]), e("text-center", [["text-align", "center"]]), e("text-right", [["text-align", "right"]]), e("text-justify", [["text-align", "justify"]]), e("text-start", [["text-align", "start"]]), e("text-end", [["text-align", "end"]]), a("indent", ["--text-indent", "--spacing"], (o) => [l3("text-indent", o)], { supportsNegative: true }), e("align-baseline", [["vertical-align", "baseline"]]), e("align-top", [["vertical-align", "top"]]), e("align-middle", [["vertical-align", "middle"]]), e("align-bottom", [["vertical-align", "bottom"]]), e("align-text-top", [["vertical-align", "text-top"]]), e("align-text-bottom", [["vertical-align", "text-bottom"]]), e("align-sub", [["vertical-align", "sub"]]), e("align-super", [["vertical-align", "super"]]), n("align", { themeKeys: [], handle: (o) => [l3("vertical-align", o)] }), r.functional("font", (o) => {
    if (!(!o.value || o.modifier)) {
      if (o.value.kind === "arbitrary") {
        let g2 = o.value.value;
        switch (o.value.dataType ?? me(g2, ["number", "generic-name", "family-name"])) {
          case "generic-name":
          case "family-name":
            return [l3("font-family", g2)];
          default:
            return [W2([$2("--tw-font-weight")]), l3("--tw-font-weight", g2), l3("font-weight", g2)];
        }
      }
      {
        let g2 = t.resolveWith(o.value.value, ["--font"], ["--font-feature-settings", "--font-variation-settings"]);
        if (g2) {
          let [v2, C2 = {}] = g2;
          return [l3("font-family", v2), l3("font-feature-settings", C2["--font-feature-settings"]), l3("font-variation-settings", C2["--font-variation-settings"])];
        }
      }
      {
        let g2 = t.resolve(o.value.value, ["--font-weight"]);
        if (g2) return [W2([$2("--tw-font-weight")]), l3("--tw-font-weight", g2), l3("font-weight", g2)];
      }
    }
  }), i("font", () => [{ values: [], valueThemeKeys: ["--font"] }, { values: [], valueThemeKeys: ["--font-weight"] }]), e("uppercase", [["text-transform", "uppercase"]]), e("lowercase", [["text-transform", "lowercase"]]), e("capitalize", [["text-transform", "capitalize"]]), e("normal-case", [["text-transform", "none"]]), e("italic", [["font-style", "italic"]]), e("not-italic", [["font-style", "normal"]]), e("underline", [["text-decoration-line", "underline"]]), e("overline", [["text-decoration-line", "overline"]]), e("line-through", [["text-decoration-line", "line-through"]]), e("no-underline", [["text-decoration-line", "none"]]), e("font-stretch-normal", [["font-stretch", "normal"]]), e("font-stretch-ultra-condensed", [["font-stretch", "ultra-condensed"]]), e("font-stretch-extra-condensed", [["font-stretch", "extra-condensed"]]), e("font-stretch-condensed", [["font-stretch", "condensed"]]), e("font-stretch-semi-condensed", [["font-stretch", "semi-condensed"]]), e("font-stretch-semi-expanded", [["font-stretch", "semi-expanded"]]), e("font-stretch-expanded", [["font-stretch", "expanded"]]), e("font-stretch-extra-expanded", [["font-stretch", "extra-expanded"]]), e("font-stretch-ultra-expanded", [["font-stretch", "ultra-expanded"]]), n("font-stretch", { handleBareValue: ({ value: o }) => {
    if (!o.endsWith("%")) return null;
    let g2 = Number(o.slice(0, -1));
    return !u(g2) || Number.isNaN(g2) || g2 < 50 || g2 > 200 ? null : o;
  }, handle: (o) => [l3("font-stretch", o)] }), i("font-stretch", () => [{ values: ["50%", "75%", "90%", "95%", "100%", "105%", "110%", "125%", "150%", "200%"] }]), s("placeholder", { themeKeys: ["--background-color", "--color"], handle: (o) => [G2("&::placeholder", [l3("--tw-sort", "placeholder-color"), l3("color", o)])] }), e("decoration-solid", [["text-decoration-style", "solid"]]), e("decoration-double", [["text-decoration-style", "double"]]), e("decoration-dotted", [["text-decoration-style", "dotted"]]), e("decoration-dashed", [["text-decoration-style", "dashed"]]), e("decoration-wavy", [["text-decoration-style", "wavy"]]), e("decoration-auto", [["text-decoration-thickness", "auto"]]), e("decoration-from-font", [["text-decoration-thickness", "from-font"]]), r.functional("decoration", (o) => {
    if (o.value) {
      if (o.value.kind === "arbitrary") {
        let g2 = o.value.value;
        switch (o.value.dataType ?? me(g2, ["color", "length", "percentage"])) {
          case "length":
          case "percentage":
            return o.modifier ? void 0 : [l3("text-decoration-thickness", g2)];
          default:
            return g2 = X2(g2, o.modifier, t), g2 === null ? void 0 : [l3("text-decoration-color", g2)];
        }
      }
      {
        let g2 = t.resolve(o.value.value, ["--text-decoration-thickness"]);
        if (g2) return o.modifier ? void 0 : [l3("text-decoration-thickness", g2)];
        if (u(o.value.value)) return o.modifier ? void 0 : [l3("text-decoration-thickness", `${o.value.value}px`)];
      }
      {
        let g2 = ee2(o, t, ["--text-decoration-color", "--color"]);
        if (g2) return [l3("text-decoration-color", g2)];
      }
    }
  }), i("decoration", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-decoration-color", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }, { values: ["0", "1", "2"], valueThemeKeys: ["--text-decoration-thickness"] }]), n("animate", { themeKeys: ["--animate"], handle: (o) => [l3("animation", o)], staticValues: { none: [l3("animation", "none")] } });
  {
    let o = ["var(--tw-blur,)", "var(--tw-brightness,)", "var(--tw-contrast,)", "var(--tw-grayscale,)", "var(--tw-hue-rotate,)", "var(--tw-invert,)", "var(--tw-saturate,)", "var(--tw-sepia,)", "var(--tw-drop-shadow,)"].join(" "), g2 = ["var(--tw-backdrop-blur,)", "var(--tw-backdrop-brightness,)", "var(--tw-backdrop-contrast,)", "var(--tw-backdrop-grayscale,)", "var(--tw-backdrop-hue-rotate,)", "var(--tw-backdrop-invert,)", "var(--tw-backdrop-opacity,)", "var(--tw-backdrop-saturate,)", "var(--tw-backdrop-sepia,)"].join(" "), v2 = () => W2([$2("--tw-blur"), $2("--tw-brightness"), $2("--tw-contrast"), $2("--tw-grayscale"), $2("--tw-hue-rotate"), $2("--tw-invert"), $2("--tw-opacity"), $2("--tw-saturate"), $2("--tw-sepia"), $2("--tw-drop-shadow"), $2("--tw-drop-shadow-color"), $2("--tw-drop-shadow-alpha", "100%", "<percentage>"), $2("--tw-drop-shadow-size")]), C2 = () => W2([$2("--tw-backdrop-blur"), $2("--tw-backdrop-brightness"), $2("--tw-backdrop-contrast"), $2("--tw-backdrop-grayscale"), $2("--tw-backdrop-hue-rotate"), $2("--tw-backdrop-invert"), $2("--tw-backdrop-opacity"), $2("--tw-backdrop-saturate"), $2("--tw-backdrop-sepia")]);
    r.functional("filter", (k) => {
      if (!k.modifier) {
        if (k.value === null) return [v2(), l3("filter", o)];
        if (k.value.kind === "arbitrary") return [l3("filter", k.value.value)];
        switch (k.value.value) {
          case "none":
            return [l3("filter", "none")];
        }
      }
    }), r.functional("backdrop-filter", (k) => {
      if (!k.modifier) {
        if (k.value === null) return [C2(), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)];
        if (k.value.kind === "arbitrary") return [l3("-webkit-backdrop-filter", k.value.value), l3("backdrop-filter", k.value.value)];
        switch (k.value.value) {
          case "none":
            return [l3("-webkit-backdrop-filter", "none"), l3("backdrop-filter", "none")];
        }
      }
    }), n("blur", { themeKeys: ["--blur"], handle: (k) => [v2(), l3("--tw-blur", `blur(${k})`), l3("filter", o)], staticValues: { none: [v2(), l3("--tw-blur", " "), l3("filter", o)] } }), n("backdrop-blur", { themeKeys: ["--backdrop-blur", "--blur"], handle: (k) => [C2(), l3("--tw-backdrop-blur", `blur(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)], staticValues: { none: [C2(), l3("--tw-backdrop-blur", " "), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] } }), n("brightness", { themeKeys: ["--brightness"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, handle: (k) => [v2(), l3("--tw-brightness", `brightness(${k})`), l3("filter", o)] }), n("backdrop-brightness", { themeKeys: ["--backdrop-brightness", "--brightness"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, handle: (k) => [C2(), l3("--tw-backdrop-brightness", `brightness(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--brightness"] }]), i("backdrop-brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--backdrop-brightness", "--brightness"] }]), n("contrast", { themeKeys: ["--contrast"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, handle: (k) => [v2(), l3("--tw-contrast", `contrast(${k})`), l3("filter", o)] }), n("backdrop-contrast", { themeKeys: ["--backdrop-contrast", "--contrast"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, handle: (k) => [C2(), l3("--tw-backdrop-contrast", `contrast(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--contrast"] }]), i("backdrop-contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--backdrop-contrast", "--contrast"] }]), n("grayscale", { themeKeys: ["--grayscale"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, defaultValue: "100%", handle: (k) => [v2(), l3("--tw-grayscale", `grayscale(${k})`), l3("filter", o)] }), n("backdrop-grayscale", { themeKeys: ["--backdrop-grayscale", "--grayscale"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, defaultValue: "100%", handle: (k) => [C2(), l3("--tw-backdrop-grayscale", `grayscale(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--grayscale"], hasDefaultValue: true }]), i("backdrop-grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-grayscale", "--grayscale"], hasDefaultValue: true }]), n("hue-rotate", { supportsNegative: true, themeKeys: ["--hue-rotate"], handleBareValue: ({ value: k }) => u(k) ? `${k}deg` : null, handle: (k) => [v2(), l3("--tw-hue-rotate", `hue-rotate(${k})`), l3("filter", o)] }), n("backdrop-hue-rotate", { supportsNegative: true, themeKeys: ["--backdrop-hue-rotate", "--hue-rotate"], handleBareValue: ({ value: k }) => u(k) ? `${k}deg` : null, handle: (k) => [C2(), l3("--tw-backdrop-hue-rotate", `hue-rotate(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--hue-rotate"] }]), i("backdrop-hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--backdrop-hue-rotate", "--hue-rotate"] }]), n("invert", { themeKeys: ["--invert"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, defaultValue: "100%", handle: (k) => [v2(), l3("--tw-invert", `invert(${k})`), l3("filter", o)] }), n("backdrop-invert", { themeKeys: ["--backdrop-invert", "--invert"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, defaultValue: "100%", handle: (k) => [C2(), l3("--tw-backdrop-invert", `invert(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--invert"], hasDefaultValue: true }]), i("backdrop-invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-invert", "--invert"], hasDefaultValue: true }]), n("saturate", { themeKeys: ["--saturate"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, handle: (k) => [v2(), l3("--tw-saturate", `saturate(${k})`), l3("filter", o)] }), n("backdrop-saturate", { themeKeys: ["--backdrop-saturate", "--saturate"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, handle: (k) => [C2(), l3("--tw-backdrop-saturate", `saturate(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--saturate"] }]), i("backdrop-saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--backdrop-saturate", "--saturate"] }]), n("sepia", { themeKeys: ["--sepia"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, defaultValue: "100%", handle: (k) => [v2(), l3("--tw-sepia", `sepia(${k})`), l3("filter", o)] }), n("backdrop-sepia", { themeKeys: ["--backdrop-sepia", "--sepia"], handleBareValue: ({ value: k }) => u(k) ? `${k}%` : null, defaultValue: "100%", handle: (k) => [C2(), l3("--tw-backdrop-sepia", `sepia(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--sepia"], hasDefaultValue: true }]), i("backdrop-sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--backdrop-sepia", "--sepia"], hasDefaultValue: true }]), e("drop-shadow-none", [v2, ["--tw-drop-shadow", " "], ["filter", o]]), r.functional("drop-shadow", (k) => {
      let V2;
      if (k.modifier && (k.modifier.kind === "arbitrary" ? V2 = k.modifier.value : u(k.modifier.value) && (V2 = `${k.modifier.value}%`)), !k.value) {
        let D2 = t.get(["--drop-shadow"]), S2 = t.resolve(null, ["--drop-shadow"]);
        return D2 === null || S2 === null ? void 0 : [v2(), l3("--tw-drop-shadow-alpha", V2), ...lt("--tw-drop-shadow-size", D2, V2, (N2) => `var(--tw-drop-shadow-color, ${N2})`), l3("--tw-drop-shadow", d(S2, ",").map((N2) => `drop-shadow(${N2})`).join(" ")), l3("filter", o)];
      }
      if (k.value.kind === "arbitrary") {
        let D2 = k.value.value;
        switch (k.value.dataType ?? me(D2, ["color"])) {
          case "color":
            return D2 = X2(D2, k.modifier, t), D2 === null ? void 0 : [v2(), l3("--tw-drop-shadow-color", Q2(D2, "var(--tw-drop-shadow-alpha)")), l3("--tw-drop-shadow", "var(--tw-drop-shadow-size)")];
          default:
            return k.modifier && !V2 ? void 0 : [v2(), l3("--tw-drop-shadow-alpha", V2), ...lt("--tw-drop-shadow-size", D2, V2, (N2) => `var(--tw-drop-shadow-color, ${N2})`), l3("--tw-drop-shadow", "var(--tw-drop-shadow-size)"), l3("filter", o)];
        }
      }
      {
        let D2 = t.get([`--drop-shadow-${k.value.value}`]), S2 = t.resolve(k.value.value, ["--drop-shadow"]);
        if (D2 && S2) return k.modifier && !V2 ? void 0 : V2 ? [v2(), l3("--tw-drop-shadow-alpha", V2), ...lt("--tw-drop-shadow-size", D2, V2, (N2) => `var(--tw-drop-shadow-color, ${N2})`), l3("--tw-drop-shadow", "var(--tw-drop-shadow-size)"), l3("filter", o)] : [v2(), l3("--tw-drop-shadow-alpha", V2), ...lt("--tw-drop-shadow-size", D2, V2, (N2) => `var(--tw-drop-shadow-color, ${N2})`), l3("--tw-drop-shadow", d(S2, ",").map((N2) => `drop-shadow(${N2})`).join(" ")), l3("filter", o)];
      }
      {
        let D2 = ee2(k, t, ["--drop-shadow-color", "--color"]);
        if (D2) return D2 === "inherit" ? [v2(), l3("--tw-drop-shadow-color", "inherit"), l3("--tw-drop-shadow", "var(--tw-drop-shadow-size)")] : [v2(), l3("--tw-drop-shadow-color", Q2(D2, "var(--tw-drop-shadow-alpha)")), l3("--tw-drop-shadow", "var(--tw-drop-shadow-size)")];
      }
    }), i("drop-shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--drop-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (k, V2) => `${V2 * 5}`) }, { valueThemeKeys: ["--drop-shadow"] }]), n("backdrop-opacity", { themeKeys: ["--backdrop-opacity", "--opacity"], handleBareValue: ({ value: k }) => ue(k) ? `${k}%` : null, handle: (k) => [C2(), l3("--tw-backdrop-opacity", `opacity(${k})`), l3("-webkit-backdrop-filter", g2), l3("backdrop-filter", g2)] }), i("backdrop-opacity", () => [{ values: Array.from({ length: 21 }, (k, V2) => `${V2 * 5}`), valueThemeKeys: ["--backdrop-opacity", "--opacity"] }]);
  }
  {
    let o = `var(--tw-ease, ${t.resolve(null, ["--default-transition-timing-function"]) ?? "ease"})`, g2 = `var(--tw-duration, ${t.resolve(null, ["--default-transition-duration"]) ?? "0s"})`;
    n("transition", { defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events", themeKeys: ["--transition-property"], handle: (v2) => [l3("transition-property", v2), l3("transition-timing-function", o), l3("transition-duration", g2)], staticValues: { none: [l3("transition-property", "none")], all: [l3("transition-property", "all"), l3("transition-timing-function", o), l3("transition-duration", g2)], colors: [l3("transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"), l3("transition-timing-function", o), l3("transition-duration", g2)], opacity: [l3("transition-property", "opacity"), l3("transition-timing-function", o), l3("transition-duration", g2)], shadow: [l3("transition-property", "box-shadow"), l3("transition-timing-function", o), l3("transition-duration", g2)], transform: [l3("transition-property", "transform, translate, scale, rotate"), l3("transition-timing-function", o), l3("transition-duration", g2)] } }), e("transition-discrete", [["transition-behavior", "allow-discrete"]]), e("transition-normal", [["transition-behavior", "normal"]]), n("delay", { handleBareValue: ({ value: v2 }) => u(v2) ? `${v2}ms` : null, themeKeys: ["--transition-delay"], handle: (v2) => [l3("transition-delay", v2)] });
    {
      let v2 = () => W2([$2("--tw-duration")]);
      e("duration-initial", [v2, ["--tw-duration", "initial"]]), r.functional("duration", (C2) => {
        if (C2.modifier || !C2.value) return;
        let k = null;
        if (C2.value.kind === "arbitrary" ? k = C2.value.value : (k = t.resolve(C2.value.fraction ?? C2.value.value, ["--transition-duration"]), k === null && u(C2.value.value) && (k = `${C2.value.value}ms`)), k !== null) return [v2(), l3("--tw-duration", k), l3("transition-duration", k)];
      });
    }
    i("delay", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-delay"] }]), i("duration", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-duration"] }]);
  }
  {
    let o = () => W2([$2("--tw-ease")]);
    n("ease", { themeKeys: ["--ease"], handle: (g2) => [o(), l3("--tw-ease", g2), l3("transition-timing-function", g2)], staticValues: { initial: [o(), l3("--tw-ease", "initial")], linear: [o(), l3("--tw-ease", "linear"), l3("transition-timing-function", "linear")] } });
  }
  e("will-change-auto", [["will-change", "auto"]]), e("will-change-scroll", [["will-change", "scroll-position"]]), e("will-change-contents", [["will-change", "contents"]]), e("will-change-transform", [["will-change", "transform"]]), n("will-change", { themeKeys: [], handle: (o) => [l3("will-change", o)] }), e("content-none", [["--tw-content", "none"], ["content", "none"]]), n("content", { themeKeys: [], handle: (o) => [W2([$2("--tw-content", '""')]), l3("--tw-content", o), l3("content", "var(--tw-content)")] });
  {
    let o = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", g2 = () => W2([$2("--tw-contain-size"), $2("--tw-contain-layout"), $2("--tw-contain-paint"), $2("--tw-contain-style")]);
    e("contain-none", [["contain", "none"]]), e("contain-content", [["contain", "content"]]), e("contain-strict", [["contain", "strict"]]), e("contain-size", [g2, ["--tw-contain-size", "size"], ["contain", o]]), e("contain-inline-size", [g2, ["--tw-contain-size", "inline-size"], ["contain", o]]), e("contain-layout", [g2, ["--tw-contain-layout", "layout"], ["contain", o]]), e("contain-paint", [g2, ["--tw-contain-paint", "paint"], ["contain", o]]), e("contain-style", [g2, ["--tw-contain-style", "style"], ["contain", o]]), n("contain", { themeKeys: [], handle: (v2) => [l3("contain", v2)] });
  }
  e("forced-color-adjust-none", [["forced-color-adjust", "none"]]), e("forced-color-adjust-auto", [["forced-color-adjust", "auto"]]), a("leading", ["--leading", "--spacing"], (o) => [W2([$2("--tw-leading")]), l3("--tw-leading", o), l3("line-height", o)], { staticValues: { none: [W2([$2("--tw-leading")]), l3("--tw-leading", "1"), l3("line-height", "1")] } }), n("tracking", { supportsNegative: true, themeKeys: ["--tracking"], handle: (o) => [W2([$2("--tw-tracking")]), l3("--tw-tracking", o), l3("letter-spacing", o)] }), e("antialiased", [["-webkit-font-smoothing", "antialiased"], ["-moz-osx-font-smoothing", "grayscale"]]), e("subpixel-antialiased", [["-webkit-font-smoothing", "auto"], ["-moz-osx-font-smoothing", "auto"]]);
  {
    let o = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", g2 = () => W2([$2("--tw-ordinal"), $2("--tw-slashed-zero"), $2("--tw-numeric-figure"), $2("--tw-numeric-spacing"), $2("--tw-numeric-fraction")]);
    e("normal-nums", [["font-variant-numeric", "normal"]]), e("ordinal", [g2, ["--tw-ordinal", "ordinal"], ["font-variant-numeric", o]]), e("slashed-zero", [g2, ["--tw-slashed-zero", "slashed-zero"], ["font-variant-numeric", o]]), e("lining-nums", [g2, ["--tw-numeric-figure", "lining-nums"], ["font-variant-numeric", o]]), e("oldstyle-nums", [g2, ["--tw-numeric-figure", "oldstyle-nums"], ["font-variant-numeric", o]]), e("proportional-nums", [g2, ["--tw-numeric-spacing", "proportional-nums"], ["font-variant-numeric", o]]), e("tabular-nums", [g2, ["--tw-numeric-spacing", "tabular-nums"], ["font-variant-numeric", o]]), e("diagonal-fractions", [g2, ["--tw-numeric-fraction", "diagonal-fractions"], ["font-variant-numeric", o]]), e("stacked-fractions", [g2, ["--tw-numeric-fraction", "stacked-fractions"], ["font-variant-numeric", o]]);
  }
  {
    let o = () => W2([$2("--tw-outline-style", "solid")]);
    r.static("outline-hidden", () => [l3("--tw-outline-style", "none"), l3("outline-style", "none"), F2("@media", "(forced-colors: active)", [l3("outline", "2px solid transparent"), l3("outline-offset", "2px")])]), e("outline-none", [["--tw-outline-style", "none"], ["outline-style", "none"]]), e("outline-solid", [["--tw-outline-style", "solid"], ["outline-style", "solid"]]), e("outline-dashed", [["--tw-outline-style", "dashed"], ["outline-style", "dashed"]]), e("outline-dotted", [["--tw-outline-style", "dotted"], ["outline-style", "dotted"]]), e("outline-double", [["--tw-outline-style", "double"], ["outline-style", "double"]]), r.functional("outline", (g2) => {
      if (g2.value === null) {
        if (g2.modifier) return;
        let v2 = t.get(["--default-outline-width"]) ?? "1px";
        return [o(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", v2)];
      }
      if (g2.value.kind === "arbitrary") {
        let v2 = g2.value.value;
        switch (g2.value.dataType ?? me(v2, ["color", "length", "number", "percentage"])) {
          case "length":
          case "number":
          case "percentage":
            return g2.modifier ? void 0 : [o(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", v2)];
          default:
            return v2 = X2(v2, g2.modifier, t), v2 === null ? void 0 : [l3("outline-color", v2)];
        }
      }
      {
        let v2 = ee2(g2, t, ["--outline-color", "--color"]);
        if (v2) return [l3("outline-color", v2)];
      }
      {
        if (g2.modifier) return;
        let v2 = t.resolve(g2.value.value, ["--outline-width"]);
        if (v2) return [o(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", v2)];
        if (u(g2.value.value)) return [o(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", `${g2.value.value}px`)];
      }
    }), i("outline", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--outline-color", "--color"], modifiers: Array.from({ length: 21 }, (g2, v2) => `${v2 * 5}`), hasDefaultValue: true }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-width"] }]), n("outline-offset", { supportsNegative: true, themeKeys: ["--outline-offset"], handleBareValue: ({ value: g2 }) => u(g2) ? `${g2}px` : null, handle: (g2) => [l3("outline-offset", g2)] }), i("outline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-offset"] }]);
  }
  n("opacity", { themeKeys: ["--opacity"], handleBareValue: ({ value: o }) => ue(o) ? `${o}%` : null, handle: (o) => [l3("opacity", o)] }), i("opacity", () => [{ values: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`), valueThemeKeys: ["--opacity"] }]), n("underline-offset", { supportsNegative: true, themeKeys: ["--text-underline-offset"], handleBareValue: ({ value: o }) => u(o) ? `${o}px` : null, handle: (o) => [l3("text-underline-offset", o)], staticValues: { auto: [l3("text-underline-offset", "auto")] } }), i("underline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--text-underline-offset"] }]), r.functional("text", (o) => {
    if (o.value) {
      if (o.value.kind === "arbitrary") {
        let g2 = o.value.value;
        switch (o.value.dataType ?? me(g2, ["color", "length", "percentage", "absolute-size", "relative-size"])) {
          case "size":
          case "length":
          case "percentage":
          case "absolute-size":
          case "relative-size": {
            if (o.modifier) {
              let C2 = o.modifier.kind === "arbitrary" ? o.modifier.value : t.resolve(o.modifier.value, ["--leading"]);
              if (!C2 && ge(o.modifier.value)) {
                let k = t.resolve(null, ["--spacing"]);
                if (!k) return null;
                C2 = `calc(${k} * ${o.modifier.value})`;
              }
              return !C2 && o.modifier.value === "none" && (C2 = "1"), C2 ? [l3("font-size", g2), l3("line-height", C2)] : null;
            }
            return [l3("font-size", g2)];
          }
          default:
            return g2 = X2(g2, o.modifier, t), g2 === null ? void 0 : [l3("color", g2)];
        }
      }
      {
        let g2 = ee2(o, t, ["--text-color", "--color"]);
        if (g2) return [l3("color", g2)];
      }
      {
        let g2 = t.resolveWith(o.value.value, ["--text"], ["--line-height", "--letter-spacing", "--font-weight"]);
        if (g2) {
          let [v2, C2 = {}] = Array.isArray(g2) ? g2 : [g2];
          if (o.modifier) {
            let k = o.modifier.kind === "arbitrary" ? o.modifier.value : t.resolve(o.modifier.value, ["--leading"]);
            if (!k && ge(o.modifier.value)) {
              let D2 = t.resolve(null, ["--spacing"]);
              if (!D2) return null;
              k = `calc(${D2} * ${o.modifier.value})`;
            }
            if (!k && o.modifier.value === "none" && (k = "1"), !k) return null;
            let V2 = [l3("font-size", v2)];
            return k && V2.push(l3("line-height", k)), V2;
          }
          return typeof C2 == "string" ? [l3("font-size", v2), l3("line-height", C2)] : [l3("font-size", v2), l3("line-height", C2["--line-height"] ? `var(--tw-leading, ${C2["--line-height"]})` : void 0), l3("letter-spacing", C2["--letter-spacing"] ? `var(--tw-tracking, ${C2["--letter-spacing"]})` : void 0), l3("font-weight", C2["--font-weight"] ? `var(--tw-font-weight, ${C2["--font-weight"]})` : void 0)];
        }
      }
    }
  }), i("text", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-color", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }, { values: [], valueThemeKeys: ["--text"], modifiers: [], modifierThemeKeys: ["--leading"] }]);
  let L2 = () => W2([$2("--tw-text-shadow-color"), $2("--tw-text-shadow-alpha", "100%", "<percentage>")]);
  e("text-shadow-initial", [L2, ["--tw-text-shadow-color", "initial"]]), r.functional("text-shadow", (o) => {
    let g2;
    if (o.modifier && (o.modifier.kind === "arbitrary" ? g2 = o.modifier.value : u(o.modifier.value) && (g2 = `${o.modifier.value}%`)), !o.value) {
      let v2 = t.get(["--text-shadow"]);
      return v2 === null ? void 0 : [L2(), l3("--tw-text-shadow-alpha", g2), ...me2("text-shadow", v2, g2, (C2) => `var(--tw-text-shadow-color, ${C2})`)];
    }
    if (o.value.kind === "arbitrary") {
      let v2 = o.value.value;
      switch (o.value.dataType ?? me(v2, ["color"])) {
        case "color":
          return v2 = X2(v2, o.modifier, t), v2 === null ? void 0 : [L2(), l3("--tw-text-shadow-color", Q2(v2, "var(--tw-text-shadow-alpha)"))];
        default:
          return [L2(), l3("--tw-text-shadow-alpha", g2), ...me2("text-shadow", v2, g2, (k) => `var(--tw-text-shadow-color, ${k})`)];
      }
    }
    switch (o.value.value) {
      case "none":
        return o.modifier ? void 0 : [L2(), l3("text-shadow", "none")];
      case "inherit":
        return o.modifier ? void 0 : [L2(), l3("--tw-text-shadow-color", "inherit")];
    }
    {
      let v2 = t.get([`--text-shadow-${o.value.value}`]);
      if (v2) return [L2(), l3("--tw-text-shadow-alpha", g2), ...me2("text-shadow", v2, g2, (C2) => `var(--tw-text-shadow-color, ${C2})`)];
    }
    {
      let v2 = ee2(o, t, ["--text-shadow-color", "--color"]);
      if (v2) return [L2(), l3("--tw-text-shadow-color", Q2(v2, "var(--tw-text-shadow-alpha)"))];
    }
  }), i("text-shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }, { values: ["none"] }, { valueThemeKeys: ["--text-shadow"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`), hasDefaultValue: t.get(["--text-shadow"]) !== null }]);
  {
    let k = function(S2) {
      return `var(--tw-ring-inset,) 0 0 0 calc(${S2} + var(--tw-ring-offset-width)) var(--tw-ring-color, ${C2})`;
    }, V2 = function(S2) {
      return `inset 0 0 0 ${S2} var(--tw-inset-ring-color, currentcolor)`;
    };
    var ae = k, le = V2;
    let o = ["var(--tw-inset-shadow)", "var(--tw-inset-ring-shadow)", "var(--tw-ring-offset-shadow)", "var(--tw-ring-shadow)", "var(--tw-shadow)"].join(", "), g2 = "0 0 #0000", v2 = () => W2([$2("--tw-shadow", g2), $2("--tw-shadow-color"), $2("--tw-shadow-alpha", "100%", "<percentage>"), $2("--tw-inset-shadow", g2), $2("--tw-inset-shadow-color"), $2("--tw-inset-shadow-alpha", "100%", "<percentage>"), $2("--tw-ring-color"), $2("--tw-ring-shadow", g2), $2("--tw-inset-ring-color"), $2("--tw-inset-ring-shadow", g2), $2("--tw-ring-inset"), $2("--tw-ring-offset-width", "0px", "<length>"), $2("--tw-ring-offset-color", "#fff"), $2("--tw-ring-offset-shadow", g2)]);
    e("shadow-initial", [v2, ["--tw-shadow-color", "initial"]]), r.functional("shadow", (S2) => {
      let N2;
      if (S2.modifier && (S2.modifier.kind === "arbitrary" ? N2 = S2.modifier.value : u(S2.modifier.value) && (N2 = `${S2.modifier.value}%`)), !S2.value) {
        let z2 = t.get(["--shadow"]);
        return z2 === null ? void 0 : [v2(), l3("--tw-shadow-alpha", N2), ...me2("--tw-shadow", z2, N2, (ue2) => `var(--tw-shadow-color, ${ue2})`), l3("box-shadow", o)];
      }
      if (S2.value.kind === "arbitrary") {
        let z2 = S2.value.value;
        switch (S2.value.dataType ?? me(z2, ["color"])) {
          case "color":
            return z2 = X2(z2, S2.modifier, t), z2 === null ? void 0 : [v2(), l3("--tw-shadow-color", Q2(z2, "var(--tw-shadow-alpha)"))];
          default:
            return [v2(), l3("--tw-shadow-alpha", N2), ...me2("--tw-shadow", z2, N2, (ht) => `var(--tw-shadow-color, ${ht})`), l3("box-shadow", o)];
        }
      }
      switch (S2.value.value) {
        case "none":
          return S2.modifier ? void 0 : [v2(), l3("--tw-shadow", g2), l3("box-shadow", o)];
        case "inherit":
          return S2.modifier ? void 0 : [v2(), l3("--tw-shadow-color", "inherit")];
      }
      {
        let z2 = t.get([`--shadow-${S2.value.value}`]);
        if (z2) return [v2(), l3("--tw-shadow-alpha", N2), ...me2("--tw-shadow", z2, N2, (ue2) => `var(--tw-shadow-color, ${ue2})`), l3("box-shadow", o)];
      }
      {
        let z2 = ee2(S2, t, ["--box-shadow-color", "--color"]);
        if (z2) return [v2(), l3("--tw-shadow-color", Q2(z2, "var(--tw-shadow-alpha)"))];
      }
    }), i("shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (S2, N2) => `${N2 * 5}`) }, { values: ["none"] }, { valueThemeKeys: ["--shadow"], modifiers: Array.from({ length: 21 }, (S2, N2) => `${N2 * 5}`), hasDefaultValue: t.get(["--shadow"]) !== null }]), e("inset-shadow-initial", [v2, ["--tw-inset-shadow-color", "initial"]]), r.functional("inset-shadow", (S2) => {
      let N2;
      if (S2.modifier && (S2.modifier.kind === "arbitrary" ? N2 = S2.modifier.value : u(S2.modifier.value) && (N2 = `${S2.modifier.value}%`)), !S2.value) {
        let z2 = t.get(["--inset-shadow"]);
        return z2 === null ? void 0 : [v2(), l3("--tw-inset-shadow-alpha", N2), ...me2("--tw-inset-shadow", z2, N2, (ue2) => `var(--tw-inset-shadow-color, ${ue2})`), l3("box-shadow", o)];
      }
      if (S2.value.kind === "arbitrary") {
        let z2 = S2.value.value;
        switch (S2.value.dataType ?? me(z2, ["color"])) {
          case "color":
            return z2 = X2(z2, S2.modifier, t), z2 === null ? void 0 : [v2(), l3("--tw-inset-shadow-color", Q2(z2, "var(--tw-inset-shadow-alpha)"))];
          default:
            return [v2(), l3("--tw-inset-shadow-alpha", N2), ...me2("--tw-inset-shadow", z2, N2, (ht) => `var(--tw-inset-shadow-color, ${ht})`, "inset "), l3("box-shadow", o)];
        }
      }
      switch (S2.value.value) {
        case "none":
          return S2.modifier ? void 0 : [v2(), l3("--tw-inset-shadow", g2), l3("box-shadow", o)];
        case "inherit":
          return S2.modifier ? void 0 : [v2(), l3("--tw-inset-shadow-color", "inherit")];
      }
      {
        let z2 = t.get([`--inset-shadow-${S2.value.value}`]);
        if (z2) return [v2(), l3("--tw-inset-shadow-alpha", N2), ...me2("--tw-inset-shadow", z2, N2, (ue2) => `var(--tw-inset-shadow-color, ${ue2})`), l3("box-shadow", o)];
      }
      {
        let z2 = ee2(S2, t, ["--box-shadow-color", "--color"]);
        if (z2) return [v2(), l3("--tw-inset-shadow-color", Q2(z2, "var(--tw-inset-shadow-alpha)"))];
      }
    }), i("inset-shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (S2, N2) => `${N2 * 5}`) }, { values: ["none"] }, { valueThemeKeys: ["--inset-shadow"], modifiers: Array.from({ length: 21 }, (S2, N2) => `${N2 * 5}`), hasDefaultValue: t.get(["--inset-shadow"]) !== null }]), e("ring-inset", [v2, ["--tw-ring-inset", "inset"]]);
    let C2 = t.get(["--default-ring-color"]) ?? "currentcolor";
    r.functional("ring", (S2) => {
      if (!S2.value) {
        if (S2.modifier) return;
        let N2 = t.get(["--default-ring-width"]) ?? "1px";
        return [v2(), l3("--tw-ring-shadow", k(N2)), l3("box-shadow", o)];
      }
      if (S2.value.kind === "arbitrary") {
        let N2 = S2.value.value;
        switch (S2.value.dataType ?? me(N2, ["color", "length"])) {
          case "length":
            return S2.modifier ? void 0 : [v2(), l3("--tw-ring-shadow", k(N2)), l3("box-shadow", o)];
          default:
            return N2 = X2(N2, S2.modifier, t), N2 === null ? void 0 : [l3("--tw-ring-color", N2)];
        }
      }
      {
        let N2 = ee2(S2, t, ["--ring-color", "--color"]);
        if (N2) return [l3("--tw-ring-color", N2)];
      }
      {
        if (S2.modifier) return;
        let N2 = t.resolve(S2.value.value, ["--ring-width"]);
        if (N2 === null && u(S2.value.value) && (N2 = `${S2.value.value}px`), N2) return [v2(), l3("--tw-ring-shadow", k(N2)), l3("box-shadow", o)];
      }
    }), i("ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (S2, N2) => `${N2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]), r.functional("inset-ring", (S2) => {
      if (!S2.value) return S2.modifier ? void 0 : [v2(), l3("--tw-inset-ring-shadow", V2("1px")), l3("box-shadow", o)];
      if (S2.value.kind === "arbitrary") {
        let N2 = S2.value.value;
        switch (S2.value.dataType ?? me(N2, ["color", "length"])) {
          case "length":
            return S2.modifier ? void 0 : [v2(), l3("--tw-inset-ring-shadow", V2(N2)), l3("box-shadow", o)];
          default:
            return N2 = X2(N2, S2.modifier, t), N2 === null ? void 0 : [l3("--tw-inset-ring-color", N2)];
        }
      }
      {
        let N2 = ee2(S2, t, ["--ring-color", "--color"]);
        if (N2) return [l3("--tw-inset-ring-color", N2)];
      }
      {
        if (S2.modifier) return;
        let N2 = t.resolve(S2.value.value, ["--ring-width"]);
        if (N2 === null && u(S2.value.value) && (N2 = `${S2.value.value}px`), N2) return [v2(), l3("--tw-inset-ring-shadow", V2(N2)), l3("box-shadow", o)];
      }
    }), i("inset-ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (S2, N2) => `${N2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]);
    let D2 = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
    r.functional("ring-offset", (S2) => {
      if (S2.value) {
        if (S2.value.kind === "arbitrary") {
          let N2 = S2.value.value;
          switch (S2.value.dataType ?? me(N2, ["color", "length"])) {
            case "length":
              return S2.modifier ? void 0 : [l3("--tw-ring-offset-width", N2), l3("--tw-ring-offset-shadow", D2)];
            default:
              return N2 = X2(N2, S2.modifier, t), N2 === null ? void 0 : [l3("--tw-ring-offset-color", N2)];
          }
        }
        {
          let N2 = t.resolve(S2.value.value, ["--ring-offset-width"]);
          if (N2) return S2.modifier ? void 0 : [l3("--tw-ring-offset-width", N2), l3("--tw-ring-offset-shadow", D2)];
          if (u(S2.value.value)) return S2.modifier ? void 0 : [l3("--tw-ring-offset-width", `${S2.value.value}px`), l3("--tw-ring-offset-shadow", D2)];
        }
        {
          let N2 = ee2(S2, t, ["--ring-offset-color", "--color"]);
          if (N2) return [l3("--tw-ring-offset-color", N2)];
        }
      }
    });
  }
  return i("ring-offset", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-offset-color", "--color"], modifiers: Array.from({ length: 21 }, (o, g2) => `${g2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-offset-width"] }]), r.functional("@container", (o) => {
    let g2 = null;
    if (o.value === null ? g2 = "inline-size" : o.value.kind === "arbitrary" ? g2 = o.value.value : o.value.kind === "named" && o.value.value === "normal" ? g2 = "normal" : false, g2 !== null) return o.modifier ? [l3("container-type", g2), l3("container-name", o.modifier.value)] : [l3("container-type", g2)];
  }), i("@container", () => [{ values: ["normal"], valueThemeKeys: [], hasDefaultValue: true }]), r;
}
var Rt = ["number", "integer", "ratio", "percentage"];
function Tr(t) {
  let r = t.params;
  return Zi.test(r) ? (i) => {
    let e = { "--value": { usedSpacingInteger: false, usedSpacingNumber: false, themeKeys: /* @__PURE__ */ new Set(), literals: /* @__PURE__ */ new Set() }, "--modifier": { usedSpacingInteger: false, usedSpacingNumber: false, themeKeys: /* @__PURE__ */ new Set(), literals: /* @__PURE__ */ new Set() } };
    O2(t.nodes, (n) => {
      if (n.kind !== "declaration" || !n.value || !n.value.includes("--value(") && !n.value.includes("--modifier(")) return;
      let s = B2(n.value);
      O2(s, (a) => {
        if (a.kind !== "function") return;
        if (a.value === "--spacing" && !(e["--modifier"].usedSpacingNumber && e["--value"].usedSpacingNumber)) return O2(a.nodes, (u2) => {
          if (u2.kind !== "function" || u2.value !== "--value" && u2.value !== "--modifier") return;
          let f2 = u2.value;
          for (let m of u2.nodes) if (m.kind === "word") {
            if (m.value === "integer") e[f2].usedSpacingInteger ||= true;
            else if (m.value === "number" && (e[f2].usedSpacingNumber ||= true, e["--modifier"].usedSpacingNumber && e["--value"].usedSpacingNumber)) return E2.Stop;
          }
        }), E2.Continue;
        if (a.value !== "--value" && a.value !== "--modifier") return;
        let p = d(J2(a.nodes), ",");
        for (let [u2, f2] of p.entries()) f2 = f2.replace(/\\\*/g, "*"), f2 = f2.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), f2 = f2.replace(/\s+/g, ""), f2 = f2.replace(/(-\*){2,}/g, "-*"), f2[0] === "-" && f2[1] === "-" && !f2.includes("-*") && (f2 += "-*"), p[u2] = f2;
        a.nodes = B2(p.join(","));
        for (let u2 of a.nodes) if (u2.kind === "word" && (u2.value[0] === '"' || u2.value[0] === "'") && u2.value[0] === u2.value[u2.value.length - 1]) {
          let f2 = u2.value.slice(1, -1);
          e[a.value].literals.add(f2);
        } else if (u2.kind === "word" && u2.value[0] === "-" && u2.value[1] === "-") {
          let f2 = u2.value.replace(/-\*.*$/g, "");
          e[a.value].themeKeys.add(f2);
        } else if (u2.kind === "word" && !(u2.value[0] === "[" && u2.value[u2.value.length - 1] === "]") && !Rt.includes(u2.value)) {
          console.warn(`Unsupported bare value data type: "${u2.value}".
Only valid data types are: ${Rt.map((y2) => `"${y2}"`).join(", ")}.
`);
          let f2 = u2.value, m = structuredClone(a), d2 = "¶";
          O2(m.nodes, (y2) => {
            if (y2.kind === "word" && y2.value === f2) return E2.ReplaceSkip({ kind: "word", value: d2 });
          });
          let c = "^".repeat(J2([u2]).length), w2 = J2([m]).indexOf(d2), h2 = ["```css", J2([a]), " ".repeat(w2) + c, "```"].join(`
`);
          console.warn(h2);
        }
      }), n.value = J2(s);
    }), i.utilities.functional(r.slice(0, -2), (n) => {
      let s = te2(t), a = n.value, p = n.modifier;
      if (a === null) return;
      let u2 = false, f2 = false, m = false, d2 = false, c = /* @__PURE__ */ new Map(), w2 = false;
      if (O2([s], (h2, y2) => {
        let x2 = y2.parent;
        if (x2?.kind !== "rule" && x2?.kind !== "at-rule" || h2.kind !== "declaration" || !h2.value) return;
        let T2 = false, A2 = B2(h2.value);
        if (O2(A2, (b2) => {
          if (b2.kind === "function") {
            if (b2.value === "--value") {
              u2 = true;
              let j2 = Cr(a, b2, i);
              return j2 ? (f2 = true, j2.ratio ? w2 = true : c.set(h2, x2), E2.ReplaceSkip(j2.nodes)) : (u2 ||= false, T2 = true, E2.Stop);
            } else if (b2.value === "--modifier") {
              if (p === null) return T2 = true, E2.Stop;
              m = true;
              let j2 = Cr(p, b2, i);
              return j2 ? (d2 = true, E2.ReplaceSkip(j2.nodes)) : (m ||= false, T2 = true, E2.Stop);
            }
          }
        }), T2) return E2.ReplaceSkip([]);
        h2.value = J2(A2);
      }), u2 && !f2 || m && !d2 || w2 && d2 || p && !w2 && !d2) return null;
      if (w2) for (let [h2, y2] of c) {
        let x2 = y2.nodes.indexOf(h2);
        x2 !== -1 && y2.nodes.splice(x2, 1);
      }
      return s.nodes;
    }), i.utilities.suggest(r.slice(0, -2), () => {
      let n = [], s = [];
      for (let [a, { literals: p, usedSpacingNumber: u2, usedSpacingInteger: f2, themeKeys: m }] of [[n, e["--value"]], [s, e["--modifier"]]]) {
        for (let d2 of p) a.push(d2);
        if (u2) a.push(...ot);
        else if (f2) for (let d2 of ot) u(d2) && a.push(d2);
        for (let d2 of i.theme.keysInNamespaces(m)) a.push(d2.replace(Vr, (c, w2, h2) => `${w2}.${h2}`));
      }
      return [{ values: n, modifiers: s }];
    });
  } : Ji.test(r) ? (i) => {
    i.utilities.static(r, () => t.nodes.map(te2));
  } : null;
}
function Cr(t, r, i) {
  for (let e of r.nodes) {
    if (t.kind === "named" && e.kind === "word" && (e.value[0] === "'" || e.value[0] === '"') && e.value[e.value.length - 1] === e.value[0] && e.value.slice(1, -1) === t.value) return { nodes: B2(t.value) };
    if (t.kind === "named" && e.kind === "word" && e.value[0] === "-" && e.value[1] === "-") {
      let n = e.value;
      if (n.endsWith("-*")) {
        n = n.slice(0, -2);
        let s = i.theme.resolve(t.value, [n]);
        if (s) return { nodes: B2(s) };
      } else {
        let s = n.split("-*");
        if (s.length <= 1) continue;
        let a = [s.shift()], p = i.theme.resolveWith(t.value, a, s);
        if (p) {
          let [, u2 = {}] = p;
          {
            let f2 = u2[s.pop()];
            if (f2) return { nodes: B2(f2) };
          }
        }
      }
    } else if (t.kind === "named" && e.kind === "word") {
      if (!Rt.includes(e.value)) continue;
      let n = e.value === "ratio" && "fraction" in t ? t.fraction : t.value;
      if (!n) continue;
      let s = me(n, [e.value]);
      if (s === null) continue;
      if (s === "ratio") {
        let [a, p] = d(n, "/");
        if (!u(a) || !u(p)) continue;
      } else {
        if (s === "number" && !ge(n)) continue;
        if (s === "percentage" && !u(n.slice(0, -1))) continue;
      }
      return { nodes: B2(n), ratio: s === "ratio" };
    } else if (t.kind === "arbitrary" && e.kind === "word" && e.value[0] === "[" && e.value[e.value.length - 1] === "]") {
      let n = e.value.slice(1, -1);
      if (n === "*") return { nodes: B2(t.value) };
      if ("dataType" in t && t.dataType && t.dataType !== n) continue;
      if ("dataType" in t && t.dataType) return { nodes: B2(t.value) };
      if (me(t.value, [n]) !== null) return { nodes: B2(t.value) };
    }
  }
}
function me2(t, r, i, e, n = "") {
  let s = false, a = Je(r, (u2) => i == null ? e(u2) : u2.startsWith("current") ? e(Q2(u2, i)) : ((u2.startsWith("var(") || i.startsWith("var(")) && (s = true), e($r(u2, i))));
  function p(u2) {
    return n ? d(u2, ",").map((f2) => n + f2).join(",") : u2;
  }
  return s ? [l3(t, p(Je(r, e))), Z2("@supports (color: lab(from red l a b))", [l3(t, p(a))])] : [l3(t, p(a))];
}
function lt(t, r, i, e, n = "") {
  let s = false, a = d(r, ",").map((p) => Je(p, (u2) => i == null ? e(u2) : u2.startsWith("current") ? e(Q2(u2, i)) : ((u2.startsWith("var(") || i.startsWith("var(")) && (s = true), e($r(u2, i))))).map((p) => `drop-shadow(${p})`).join(" ");
  return s ? [l3(t, n + d(r, ",").map((p) => `drop-shadow(${Je(p, e)})`).join(" ")), Z2("@supports (color: lab(from red l a b))", [l3(t, n + a)])] : [l3(t, n + a)];
}
var Pt = { "--alpha": Yi, "--spacing": Qi, "--theme": Xi, theme: en };
function Yi(t, r, i, ...e) {
  let [n, s] = d(i, "/").map((a) => a.trim());
  if (!n || !s) throw new Error(`The --alpha(…) function requires a color and an alpha value, e.g.: \`--alpha(${n || "var(--my-color)"} / ${s || "50%"})\``);
  if (e.length > 0) throw new Error(`The --alpha(…) function only accepts one argument, e.g.: \`--alpha(${n || "var(--my-color)"} / ${s || "50%"})\``);
  return Q2(n, s);
}
function Qi(t, r, i, ...e) {
  if (!i) throw new Error("The --spacing(…) function requires an argument, but received none.");
  if (e.length > 0) throw new Error(`The --spacing(…) function only accepts a single argument, but received ${e.length + 1}.`);
  let n = t.theme.resolve(null, ["--spacing"]);
  if (!n) throw new Error("The --spacing(…) function requires that the `--spacing` theme variable exists, but it was not found.");
  return `calc(${n} * ${i})`;
}
function Xi(t, r, i, ...e) {
  if (!i.startsWith("--")) throw new Error("The --theme(…) function can only be used with CSS variables from your theme.");
  let n = false;
  i.endsWith(" inline") && (n = true, i = i.slice(0, -7)), r.kind === "at-rule" && (n = true);
  let s = t.resolveThemeValue(i, n);
  if (!s) {
    if (e.length > 0) return e.join(", ");
    throw new Error(`Could not resolve value for theme function: \`theme(${i})\`. Consider checking if the variable name is correct or provide a fallback value to silence this error.`);
  }
  if (e.length === 0) return s;
  let a = e.join(", ");
  if (a === "initial") return s;
  if (s === "initial") return a;
  if (s.startsWith("var(") || s.startsWith("theme(") || s.startsWith("--theme(")) {
    let p = B2(s);
    return rn(p, a), J2(p);
  }
  return s;
}
function en(t, r, i, ...e) {
  i = tn(i);
  let n = t.resolveThemeValue(i);
  if (!n && e.length > 0) return e.join(", ");
  if (!n) throw new Error(`Could not resolve value for theme function: \`theme(${i})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
  return n;
}
var Nr = new RegExp(Object.keys(Pt).map((t) => `${t}\\(`).join("|"));
function Ke(t, r) {
  let i = 0;
  return O2(t, (e) => {
    if (e.kind === "declaration" && e.value && Nr.test(e.value)) {
      i |= 8, e.value = Er(e.value, e, r);
      return;
    }
    e.kind === "at-rule" && (e.name === "@media" || e.name === "@custom-media" || e.name === "@container" || e.name === "@supports") && Nr.test(e.params) && (i |= 8, e.params = Er(e.params, e, r));
  }), i;
}
function Er(t, r, i) {
  let e = B2(t);
  return O2(e, (n) => {
    if (n.kind === "function" && n.value in Pt) {
      let s = d(J2(n.nodes).trim(), ",").map((p) => p.trim()), a = Pt[n.value](i, r, ...s);
      return E2.Replace(B2(a));
    }
  }), J2(e);
}
function tn(t) {
  if (t[0] !== "'" && t[0] !== '"') return t;
  let r = "", i = t[0];
  for (let e = 1; e < t.length - 1; e++) {
    let n = t[e], s = t[e + 1];
    n === "\\" && (s === i || s === "\\") ? (r += s, e++) : r += n;
  }
  return r;
}
function rn(t, r) {
  O2(t, (i) => {
    if (i.kind === "function" && !(i.value !== "var" && i.value !== "theme" && i.value !== "--theme")) if (i.nodes.length === 1) i.nodes.push({ kind: "word", value: `, ${r}` });
    else {
      let e = i.nodes[i.nodes.length - 1];
      e.kind === "word" && e.value === "initial" && (e.value = r);
    }
  });
}
function st(t, r) {
  let i = t.length, e = r.length, n = i < e ? i : e;
  for (let s = 0; s < n; s++) {
    let a = t.charCodeAt(s), p = r.charCodeAt(s);
    if (a >= 48 && a <= 57 && p >= 48 && p <= 57) {
      let u2 = s, f2 = s + 1, m = s, d2 = s + 1;
      for (a = t.charCodeAt(f2); a >= 48 && a <= 57; ) a = t.charCodeAt(++f2);
      for (p = r.charCodeAt(d2); p >= 48 && p <= 57; ) p = r.charCodeAt(++d2);
      let c = t.slice(u2, f2), w2 = r.slice(m, d2), h2 = Number(c) - Number(w2);
      if (h2) return h2;
      if (c < w2) return -1;
      if (c > w2) return 1;
      continue;
    }
    if (a !== p) return a - p;
  }
  return t.length - r.length;
}
function Rr(t) {
  if (t[0] !== "[" || t[t.length - 1] !== "]") return null;
  let r = 1, i = r, e = t.length - 1;
  for (; _e(t.charCodeAt(r)); ) r++;
  {
    for (i = r; r < e; r++) {
      let m = t.charCodeAt(r);
      if (m === 92) {
        r++;
        continue;
      }
      if (!(m >= 65 && m <= 90) && !(m >= 97 && m <= 122) && !(m >= 48 && m <= 57) && !(m === 45 || m === 95)) break;
    }
    if (i === r) return null;
  }
  let n = t.slice(i, r);
  for (; _e(t.charCodeAt(r)); ) r++;
  if (r === e) return { attribute: n, operator: null, quote: null, value: null, sensitivity: null };
  let s = null, a = t.charCodeAt(r);
  if (a === 61) s = "=", r++;
  else if ((a === 126 || a === 124 || a === 94 || a === 36 || a === 42) && t.charCodeAt(r + 1) === 61) s = t[r] + "=", r += 2;
  else return null;
  for (; _e(t.charCodeAt(r)); ) r++;
  if (r === e) return null;
  let p = "", u2 = null;
  if (a = t.charCodeAt(r), a === 39 || a === 34) {
    u2 = t[r], r++, i = r;
    for (let m = r; m < e; m++) {
      let d2 = t.charCodeAt(m);
      d2 === a ? r = m + 1 : d2 === 92 && m++;
    }
    p = t.slice(i, r - 1);
  } else {
    for (i = r; r < e && !_e(t.charCodeAt(r)); ) r++;
    p = t.slice(i, r);
  }
  for (; _e(t.charCodeAt(r)); ) r++;
  if (r === e) return { attribute: n, operator: s, quote: u2, value: p, sensitivity: null };
  let f2 = null;
  switch (t.charCodeAt(r)) {
    case 105:
    case 73: {
      f2 = "i", r++;
      break;
    }
    case 115:
    case 83: {
      f2 = "s", r++;
      break;
    }
    default:
      return null;
  }
  for (; _e(t.charCodeAt(r)); ) r++;
  return r !== e ? null : { attribute: n, operator: s, quote: u2, value: p, sensitivity: f2 };
}
function _e(t) {
  switch (t) {
    case 32:
    case 9:
    case 10:
    case 13:
      return true;
    default:
      return false;
  }
}
function Ue(t, r = null) {
  return Array.isArray(t) && t.length === 2 && typeof t[1] == "object" && typeof t[1] !== null ? r ? t[1][r] ?? null : t[0] : Array.isArray(t) && r === null ? t.join(", ") : typeof t == "string" && r === null ? t : null;
}
function Pr(t, { theme: r }, i) {
  for (let e of i) {
    let n = Ie([e]);
    n && t.theme.clearNamespace(`--${n}`, 4);
  }
  for (let [e, n] of an(r)) {
    if (typeof n != "string" && typeof n != "number") continue;
    if (typeof n == "string" && (n = n.replace(/<alpha-value>/g, "1")), e[0] === "opacity" && (typeof n == "number" || typeof n == "string")) {
      let a = typeof n == "string" ? parseFloat(n) : n;
      a >= 0 && a <= 1 && (n = a * 100 + "%");
    }
    let s = Ie(e);
    s && t.theme.add(`--${s}`, "" + n, 7);
  }
  if (Object.hasOwn(r, "fontFamily")) {
    let e = 5;
    {
      let n = Ue(r.fontFamily.sans);
      n && t.theme.hasDefault("--font-sans") && (t.theme.add("--default-font-family", n, e), t.theme.add("--default-font-feature-settings", Ue(r.fontFamily.sans, "fontFeatureSettings") ?? "normal", e), t.theme.add("--default-font-variation-settings", Ue(r.fontFamily.sans, "fontVariationSettings") ?? "normal", e));
    }
    {
      let n = Ue(r.fontFamily.mono);
      n && t.theme.hasDefault("--font-mono") && (t.theme.add("--default-mono-font-family", n, e), t.theme.add("--default-mono-font-feature-settings", Ue(r.fontFamily.mono, "fontFeatureSettings") ?? "normal", e), t.theme.add("--default-mono-font-variation-settings", Ue(r.fontFamily.mono, "fontVariationSettings") ?? "normal", e));
    }
  }
  return r;
}
function an(t) {
  let r = [];
  return Or(t, [], (i, e) => {
    if (on(i)) return r.push([e, i]), 1;
    if (sn(i)) {
      r.push([e, i[0]]);
      for (let n of Reflect.ownKeys(i[1])) r.push([[...e, `-${n}`], i[1][n]]);
      return 1;
    }
    if (Array.isArray(i) && i.every((n) => typeof n == "string")) return e[0] === "fontSize" ? (r.push([e, i[0]]), i.length >= 2 && r.push([[...e, "-line-height"], i[1]])) : r.push([e, i.join(", ")]), 1;
  }), r;
}
var ln = /^[a-zA-Z0-9-_%/\.]+$/;
function Ie(t) {
  if (t[0] === "container") return null;
  t = t.slice(), t[0] === "animation" && (t[0] = "animate"), t[0] === "aspectRatio" && (t[0] = "aspect"), t[0] === "borderRadius" && (t[0] = "radius"), t[0] === "boxShadow" && (t[0] = "shadow"), t[0] === "colors" && (t[0] = "color"), t[0] === "containers" && (t[0] = "container"), t[0] === "fontFamily" && (t[0] = "font"), t[0] === "fontSize" && (t[0] = "text"), t[0] === "letterSpacing" && (t[0] = "tracking"), t[0] === "lineHeight" && (t[0] = "leading"), t[0] === "maxWidth" && (t[0] = "container"), t[0] === "screens" && (t[0] = "breakpoint"), t[0] === "transitionTimingFunction" && (t[0] = "ease");
  for (let r of t) if (!ln.test(r)) return null;
  return t.map((r, i, e) => r === "1" && i !== e.length - 1 ? "" : r).map((r) => r.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (i, e, n) => `${e}-${n.toLowerCase()}`)).filter((r, i) => r !== "DEFAULT" || i !== t.length - 1).join("-");
}
function on(t) {
  return typeof t == "number" || typeof t == "string";
}
function sn(t) {
  if (!Array.isArray(t) || t.length !== 2 || typeof t[0] != "string" && typeof t[0] != "number" || t[1] === void 0 || t[1] === null || typeof t[1] != "object") return false;
  for (let r of Reflect.ownKeys(t[1])) if (typeof r != "string" || typeof t[1][r] != "string" && typeof t[1][r] != "number") return false;
  return true;
}
function Or(t, r = [], i) {
  for (let e of Reflect.ownKeys(t)) {
    let n = t[e];
    if (n == null) continue;
    let s = [...r, e], a = i(n, s) ?? 0;
    if (a !== 1) {
      if (a === 2) return 2;
      if (!(!Array.isArray(n) && typeof n != "object") && Or(n, s, i) === 2) return 2;
    }
  }
}
function un(t) {
  return { kind: "combinator", value: t };
}
function fn(t, r) {
  return { kind: "function", value: t, nodes: r };
}
function ke(t) {
  return { kind: "selector", value: t };
}
function cn(t) {
  return { kind: "separator", value: t };
}
function pn(t) {
  return { kind: "value", value: t };
}
function se(t) {
  let r = "";
  for (let i of t) switch (i.kind) {
    case "combinator":
    case "selector":
    case "separator":
    case "value": {
      r += i.value;
      break;
    }
    case "function":
      r += i.value + "(" + se(i.nodes) + ")";
  }
  return r;
}
var Kr = 92;
var dn = 93;
var Dr = 41;
var mn = 58;
var _r = 44;
var gn = 34;
var hn = 46;
var Ur = 62;
var Ir = 10;
var vn = 35;
var jr = 91;
var Lr = 40;
var Mr = 43;
var wn = 39;
var zr = 32;
var Fr = 9;
var Wr = 126;
var yn = 38;
var kn = 42;
function be2(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], i = [], e = null, n = "", s;
  for (let a = 0; a < t.length; a++) {
    let p = t.charCodeAt(a);
    switch (p) {
      case _r:
      case Ur:
      case Ir:
      case zr:
      case Mr:
      case Fr:
      case Wr: {
        if (n.length > 0) {
          let c = ke(n);
          e ? e.nodes.push(c) : r.push(c), n = "";
        }
        let u2 = a, f2 = a + 1;
        for (; f2 < t.length && (s = t.charCodeAt(f2), !(s !== _r && s !== Ur && s !== Ir && s !== zr && s !== Mr && s !== Fr && s !== Wr)); f2++) ;
        a = f2 - 1;
        let m = t.slice(u2, f2), d2 = m.trim() === "," ? cn(m) : un(m);
        e ? e.nodes.push(d2) : r.push(d2);
        break;
      }
      case Lr: {
        let u2 = fn(n, []);
        if (n = "", u2.value !== ":not" && u2.value !== ":where" && u2.value !== ":has" && u2.value !== ":is") {
          let f2 = a + 1, m = 0;
          for (let c = a + 1; c < t.length; c++) {
            if (s = t.charCodeAt(c), s === Lr) {
              m++;
              continue;
            }
            if (s === Dr) {
              if (m === 0) {
                a = c;
                break;
              }
              m--;
            }
          }
          let d2 = a;
          u2.nodes.push(pn(t.slice(f2, d2))), n = "", a = d2, e ? e.nodes.push(u2) : r.push(u2);
          break;
        }
        e ? e.nodes.push(u2) : r.push(u2), i.push(u2), e = u2;
        break;
      }
      case Dr: {
        let u2 = i.pop();
        if (n.length > 0) {
          let f2 = ke(n);
          u2.nodes.push(f2), n = "";
        }
        i.length > 0 ? e = i[i.length - 1] : e = null;
        break;
      }
      case hn:
      case mn:
      case vn: {
        if (n.length > 0) {
          let u2 = ke(n);
          e ? e.nodes.push(u2) : r.push(u2);
        }
        n = t[a];
        break;
      }
      case jr: {
        if (n.length > 0) {
          let m = ke(n);
          e ? e.nodes.push(m) : r.push(m);
        }
        n = "";
        let u2 = a, f2 = 0;
        for (let m = a + 1; m < t.length; m++) {
          if (s = t.charCodeAt(m), s === jr) {
            f2++;
            continue;
          }
          if (s === dn) {
            if (f2 === 0) {
              a = m;
              break;
            }
            f2--;
          }
        }
        n += t.slice(u2, a + 1);
        break;
      }
      case wn:
      case gn: {
        let u2 = a;
        for (let f2 = a + 1; f2 < t.length; f2++) if (s = t.charCodeAt(f2), s === Kr) f2 += 1;
        else if (s === p) {
          a = f2;
          break;
        }
        n += t.slice(u2, a + 1);
        break;
      }
      case yn:
      case kn: {
        if (n.length > 0) {
          let u2 = ke(n);
          e ? e.nodes.push(u2) : r.push(u2), n = "";
        }
        e ? e.nodes.push(ke(t[a])) : r.push(ke(t[a]));
        break;
      }
      case Kr: {
        n += t[a] + t[a + 1], a += 1;
        break;
      }
      default:
        n += t[a];
    }
  }
  return n.length > 0 && r.push(ke(n)), r;
}
var bn = /^(?<value>[-+]?(?:\d*\.)?\d+)(?<unit>[a-z]+|%)?$/i;
var Ne = new U2((t) => {
  let r = bn.exec(t);
  if (!r) return null;
  let i = r.groups?.value;
  if (i === void 0) return null;
  let e = Number(i);
  if (Number.isNaN(e)) return null;
  let n = r.groups?.unit;
  return n === void 0 ? [e, null] : [e, n];
});
function Br(t, r = null) {
  let i = false, e = B2(t);
  return O2(e, { exit(n) {
    if (n.kind === "word" && n.value !== "0") {
      let s = xn(n.value, r);
      return s === null || s === n.value ? void 0 : (i = true, E2.ReplaceSkip(ne(s)));
    } else if (n.kind === "function" && (n.value === "calc" || n.value === "")) {
      if (n.nodes.length !== 5) return;
      let s = Ne.get(n.nodes[0].value), a = n.nodes[2].value, p = Ne.get(n.nodes[4].value);
      if (a === "*" && (s?.[0] === 0 && s?.[1] === null || p?.[0] === 0 && p?.[1] === null)) return i = true, E2.ReplaceSkip(ne("0"));
      if (s === null || p === null) return;
      switch (a) {
        case "*": {
          if (s[1] === p[1] || s[1] === null && p[1] !== null || s[1] !== null && p[1] === null) return i = true, E2.ReplaceSkip(ne(`${s[0] * p[0]}${s[1] ?? ""}`));
          break;
        }
        case "+": {
          if (s[1] === p[1]) return i = true, E2.ReplaceSkip(ne(`${s[0] + p[0]}${s[1] ?? ""}`));
          break;
        }
        case "-": {
          if (s[1] === p[1]) return i = true, E2.ReplaceSkip(ne(`${s[0] - p[0]}${s[1] ?? ""}`));
          break;
        }
        case "/": {
          if (p[0] !== 0 && (s[1] === null && p[1] === null || s[1] !== null && p[1] === null)) return i = true, E2.ReplaceSkip(ne(`${s[0] / p[0]}${s[1] ?? ""}`));
          break;
        }
      }
    }
  } }), i ? J2(e) : t;
}
function xn(t, r = null) {
  let i = Ne.get(t);
  if (i === null) return null;
  let [e, n] = i;
  if (n === null) return `${e}`;
  if (e === 0 && y(t)) return "0";
  switch (n.toLowerCase()) {
    case "in":
      return `${e * 96}px`;
    case "cm":
      return `${e * 96 / 2.54}px`;
    case "mm":
      return `${e * 96 / 2.54 / 10}px`;
    case "q":
      return `${e * 96 / 2.54 / 10 / 4}px`;
    case "pc":
      return `${e * 96 / 6}px`;
    case "pt":
      return `${e * 96 / 72}px`;
    case "rem":
      return r !== null ? `${e * r}px` : null;
    case "grad":
      return `${e * 0.9}deg`;
    case "rad":
      return `${e * 180 / Math.PI}deg`;
    case "turn":
      return `${e * 360}deg`;
    case "ms":
      return `${e / 1e3}s`;
    case "khz":
      return `${e * 1e3}hz`;
    default:
      return `${e}${n}`;
  }
}
var qr = /\d*\.\d+(?:[eE][+-]?\d+)?%/g;
var xe = new U2((t) => {
  let { rem: r, designSystem: i } = t;
  return new U2((e) => {
    try {
      e = i.theme.prefix && !e.startsWith(i.theme.prefix) ? `${i.theme.prefix}:${e}` : e;
      let n = [G2(".x", [F2("@apply", e)])];
      return An(i, () => {
        for (let a of i.parseCandidate(e)) i.compileAstNodes(a, 1);
        Ae(n, i);
      }), O2(n, (a) => {
        if (a.kind === "declaration") {
          if (a.value === void 0 || a.property === "--tw-sort") return E2.Replace([]);
          a.value.includes("%") && (qr.lastIndex = 0, a.value = a.value.replaceAll(qr, (p) => `${Number(p.slice(0, -1))}%`));
        } else {
          if (a.kind === "context" || a.kind === "at-root") return E2.Replace(a.nodes);
          if (a.kind === "comment") return E2.Replace([]);
          if (a.kind === "at-rule" && a.name === "@property") return E2.Replace([]);
        }
      }), O2(n, (a) => {
        if (a.kind === "declaration" && a.value !== void 0) {
          if (a.value.includes("var(")) {
            let p = false, u2 = B2(a.value), f2 = /* @__PURE__ */ new Set();
            O2(u2, (m) => {
              if (m.kind !== "function" || m.value !== "var" || m.nodes.length !== 1 && m.nodes.length < 3) return;
              let d2 = m.nodes[0].value;
              i.theme.prefix && d2.startsWith(`--${i.theme.prefix}-`) && (d2 = d2.slice(`--${i.theme.prefix}-`.length));
              let c = i.resolveThemeValue(d2);
              if (!f2.has(d2) && (f2.add(d2), c !== void 0 && (m.nodes.length === 1 && (p = true, m.nodes.push(...B2(`,${c}`))), m.nodes.length >= 3))) {
                let w2 = J2(m.nodes), h2 = `${m.nodes[0].value},${c}`;
                if (w2 === h2) return p = true, E2.Replace(B2(c));
              }
            }), p && (a.value = J2(u2));
          }
          a.value = Br(a.value, r), a.value = ye(a.value);
        }
      }), re2(n);
    } catch {
      return Symbol();
    }
  });
});
var Kt = new U2((t) => {
  let { designSystem: r } = t, i = xe.get(t), e = new U2(() => []);
  for (let [n, s] of r.getClassList()) {
    let a = i.get(n);
    if (typeof a == "string") {
      if (n[0] === "-" && n.endsWith("-0")) {
        let p = i.get(n.slice(1));
        if (typeof p == "string" && a === p) continue;
      }
      e.get(a).push(n);
      for (let p of s.modifiers) {
        if (ge(p)) continue;
        let u2 = `${n}/${p}`, f2 = i.get(u2);
        typeof f2 == "string" && e.get(f2).push(u2);
      }
    }
  }
  return e;
});
var ut = new U2((t) => {
  let { designSystem: r } = t;
  return new U2((i) => {
    try {
      i = r.theme.prefix && !i.startsWith(r.theme.prefix) ? `${r.theme.prefix}:${i}` : i;
      let e = [G2(".x", [F2("@apply", `${i}:flex`)])];
      return Ae(e, r), O2(e, (s) => {
        if (s.kind === "at-rule" && s.params.includes(" ")) s.params = s.params.replaceAll(" ", "");
        else if (s.kind === "rule") {
          let a = be2(s.selector), p = false;
          O2(a, (u2) => {
            if (u2.kind === "separator" && u2.value !== " ") u2.value = u2.value.trim(), p = true;
            else if (u2.kind === "function" && u2.value === ":is") {
              if (u2.nodes.length === 1) return p = true, E2.Replace(u2.nodes);
              if (u2.nodes.length === 2 && u2.nodes[0].kind === "selector" && u2.nodes[0].value === "*" && u2.nodes[1].kind === "selector" && u2.nodes[1].value[0] === ":") return p = true, E2.Replace(u2.nodes[1]);
            } else u2.kind === "function" && u2.value[0] === ":" && u2.nodes[0]?.kind === "selector" && u2.nodes[0]?.value[0] === ":" && (p = true, u2.nodes.unshift({ kind: "selector", value: "*" }));
          }), p && (s.selector = se(a));
        }
      }), re2(e);
    } catch {
      return Symbol();
    }
  });
});
var Gr = new U2((t) => {
  let { designSystem: r } = t, i = ut.get(t), e = new U2(() => []);
  for (let [n, s] of r.variants.entries()) if (s.kind === "static") {
    let a = i.get(n);
    if (typeof a != "string") continue;
    e.get(a).push(n);
  }
  return e;
});
function An(t, r) {
  let i = t.theme.values.get, e = /* @__PURE__ */ new Set();
  t.theme.values.get = (n) => {
    let s = i.call(t.theme.values, n);
    return s === void 0 || s.options & 1 && (e.add(s), s.options &= -2), s;
  };
  try {
    return r();
  } finally {
    t.theme.values.get = i;
    for (let n of e) n.options |= 1;
  }
}
function ge2(t, r) {
  for (let i in t) delete t[i];
  return Object.assign(t, r);
}
function Ee(t) {
  let r = [];
  for (let i of d(t, ".")) {
    if (!i.includes("[")) {
      r.push(i);
      continue;
    }
    let e = 0;
    for (; ; ) {
      let n = i.indexOf("[", e), s = i.indexOf("]", n);
      if (n === -1 || s === -1) break;
      n > e && r.push(i.slice(e, n)), r.push(i.slice(n + 1, s)), e = s + 1;
    }
    e <= i.length - 1 && r.push(i.slice(e));
  }
  return r;
}
var $n = new U2((t) => new U2((r = null) => ({ designSystem: t, rem: r })));
function Vn(t, r) {
  return $n.get(t).get(r?.rem ?? null);
}
function Dt(t, r, i) {
  let e = /* @__PURE__ */ new Set(), n = Sn.get(Vn(t, i));
  for (let s of r) e.add(n.get(s));
  return Array.from(e);
}
var Sn = new U2((t) => {
  let r = t.designSystem, i = r.theme.prefix ? `${r.theme.prefix}:` : "", e = Nn.get(t), n = Rn.get(t);
  return new U2((s, a) => {
    for (let p of r.parseCandidate(s)) {
      let u2 = p.variants.slice().reverse().flatMap((d2) => e.get(d2)), f2 = p.important;
      if (f2 || u2.length > 0) {
        let c = a.get(r.printCandidate({ ...p, variants: [], important: false }));
        return r.theme.prefix !== null && u2.length > 0 && (c = c.slice(i.length)), u2.length > 0 && (c = `${u2.map((w2) => r.printVariant(w2)).join(":")}:${c}`), f2 && (c += "!"), r.theme.prefix !== null && u2.length > 0 && (c = `${i}${c}`), c;
      }
      let m = n.get(s);
      if (m !== s) return m;
    }
    return s;
  });
});
var Tn = [Dn, Gn, Hn, Wn];
var Nn = new U2((t) => new U2((r) => {
  let i = [r];
  for (let e of Tn) for (let n of i.splice(0)) {
    let s = e(Oe(n), t);
    if (Array.isArray(s)) {
      i.push(...s);
      continue;
    } else i.push(s);
  }
  return i;
}));
var En = [On, Kn, jn, Mn, Fn, Bn, qn, Jn];
var Rn = new U2((t) => {
  let r = t.designSystem;
  return new U2((i) => {
    for (let e of r.parseCandidate(i)) {
      let n = wr(e);
      for (let a of En) n = a(n, t);
      let s = r.printCandidate(n);
      if (i !== s) return s;
    }
    return i;
  });
});
var Pn = ["t", "tr", "r", "br", "b", "bl", "l", "tl"];
function On(t) {
  if (t.kind === "static" && t.root.startsWith("bg-gradient-to-")) {
    let r = t.root.slice(15);
    return Pn.includes(r) && (t.root = `bg-linear-to-${r}`), t;
  }
  return t;
}
function Kn(t, r) {
  let i = Jr.get(r.designSystem);
  if (t.kind === "arbitrary") {
    let [e, n] = i(t.value, t.modifier === null ? 1 : 0);
    e !== t.value && (t.value = e, n !== null && (t.modifier = n));
  } else if (t.kind === "functional" && t.value?.kind === "arbitrary") {
    let [e, n] = i(t.value.value, t.modifier === null ? 1 : 0);
    e !== t.value.value && (t.value.value = e, n !== null && (t.modifier = n));
  }
  return t;
}
function Dn(t, r) {
  let i = Jr.get(r.designSystem), e = pt(t);
  for (let [n] of e) if (n.kind === "arbitrary") {
    let [s] = i(n.selector, 2);
    s !== n.selector && (n.selector = s);
  } else if (n.kind === "functional" && n.value?.kind === "arbitrary") {
    let [s] = i(n.value.value, 2);
    s !== n.value.value && (n.value.value = s);
  }
  return t;
}
var Jr = new U2((t) => {
  return r(t);
  function r(i) {
    function e(p, u2 = 0) {
      let f2 = B2(p);
      if (u2 & 2) return [ft(f2, a), null];
      let m = 0, d2 = 0;
      if (O2(f2, (h2) => {
        h2.kind === "function" && h2.value === "theme" && (m += 1, O2(h2.nodes, (y2) => y2.kind === "separator" && y2.value.includes(",") ? E2.Stop : y2.kind === "word" && y2.value === "/" ? (d2 += 1, E2.Stop) : E2.Skip));
      }), m === 0) return [p, null];
      if (d2 === 0) return [ft(f2, s), null];
      if (d2 > 1) return [ft(f2, a), null];
      let c = null;
      return [ft(f2, (h2, y2) => {
        let x2 = d(h2, "/").map((T2) => T2.trim());
        if (x2.length > 2) return null;
        if (f2.length === 1 && x2.length === 2 && u2 & 1) {
          let [T2, A2] = x2;
          if (/^\d+%$/.test(A2)) c = { kind: "named", value: A2.slice(0, -1) };
          else if (/^0?\.\d+$/.test(A2)) {
            let b2 = Number(A2) * 100;
            c = { kind: Number.isInteger(b2) ? "named" : "arbitrary", value: b2.toString() };
          } else c = { kind: "arbitrary", value: A2 };
          h2 = T2;
        }
        return s(h2, y2) || a(h2, y2);
      }), c];
    }
    function n(p, u2 = true) {
      let f2 = `--${Ie(Ee(p))}`;
      return i.theme.get([f2]) ? u2 && i.theme.prefix ? `--${i.theme.prefix}-${f2.slice(2)}` : f2 : null;
    }
    function s(p, u2) {
      let f2 = n(p);
      if (f2) return u2 ? `var(${f2}, ${u2})` : `var(${f2})`;
      let m = Ee(p);
      if (m[0] === "spacing" && i.theme.get(["--spacing"])) {
        let d2 = m[1];
        return ge(d2) ? `--spacing(${d2})` : null;
      }
      return null;
    }
    function a(p, u2) {
      let f2 = d(p, "/").map((c) => c.trim());
      p = f2.shift();
      let m = n(p, false);
      if (!m) return null;
      let d2 = f2.length > 0 ? `/${f2.join("/")}` : "";
      return u2 ? `--theme(${m}${d2}, ${u2})` : `--theme(${m}${d2})`;
    }
    return e;
  }
});
function ft(t, r) {
  return O2(t, (i, e) => {
    if (i.kind === "function" && i.value === "theme") {
      if (i.nodes.length < 1) return;
      i.nodes[0].kind === "separator" && i.nodes[0].value.trim() === "" && i.nodes.shift();
      let n = i.nodes[0];
      if (n.kind !== "word") return;
      let s = n.value, a = 1;
      for (let f2 = a; f2 < i.nodes.length && !i.nodes[f2].value.includes(","); f2++) s += J2([i.nodes[f2]]), a = f2 + 1;
      s = _n(s);
      let p = i.nodes.slice(a + 1), u2 = p.length > 0 ? r(s, J2(p)) : r(s);
      if (u2 === null) return;
      if (e.parent) {
        let f2 = e.parent.nodes.indexOf(i) - 1;
        for (; f2 !== -1; ) {
          let m = e.parent.nodes[f2];
          if (m.kind === "separator" && m.value.trim() === "") {
            f2 -= 1;
            continue;
          }
          /^[-+*/]$/.test(m.value.trim()) && (u2 = `(${u2})`);
          break;
        }
      }
      return E2.Replace(B2(u2));
    }
  }), J2(t);
}
function _n(t) {
  if (t[0] !== "'" && t[0] !== '"') return t;
  let r = "", i = t[0];
  for (let e = 1; e < t.length - 1; e++) {
    let n = t[e], s = t[e + 1];
    n === "\\" && (s === i || s === "\\") ? (r += s, e++) : r += n;
  }
  return r;
}
function* pt(t) {
  function* r(i, e = null) {
    yield [i, e], i.kind === "compound" && (yield* r(i.variant, i));
  }
  yield* r(t, null);
}
function he(t, r) {
  return t.parseCandidate(t.theme.prefix && !r.startsWith(`${t.theme.prefix}:`) ? `${t.theme.prefix}:${r}` : r);
}
function Un(t, r) {
  let i = t.printCandidate(r);
  return t.theme.prefix && i.startsWith(`${t.theme.prefix}:`) ? i.slice(t.theme.prefix.length + 1) : i;
}
var In = new U2((t) => {
  let r = t.resolveThemeValue("--spacing");
  if (r === void 0) return null;
  let i = Ne.get(r);
  if (!i) return null;
  let [e, n] = i;
  return new U2((s) => {
    let a = Ne.get(s);
    if (!a) return null;
    let [p, u2] = a;
    return u2 !== n ? null : p / e;
  });
});
function jn(t, r) {
  if (t.kind !== "arbitrary" && !(t.kind === "functional" && t.value?.kind === "arbitrary")) return t;
  let i = r.designSystem, e = Kt.get(r), n = xe.get(r), s = i.printCandidate(t), a = n.get(s);
  if (typeof a != "string") return t;
  for (let u2 of p(a, t)) {
    let f2 = i.printCandidate(u2);
    if (n.get(f2) === a && Ln(i, t, u2)) return u2;
  }
  return t;
  function* p(u2, f2) {
    let m = e.get(u2);
    if (!(m.length > 1)) {
      if (m.length === 0 && f2.modifier) {
        let d2 = { ...f2, modifier: null }, c = n.get(i.printCandidate(d2));
        if (typeof c == "string") for (let w2 of p(c, d2)) yield Object.assign({}, w2, { modifier: f2.modifier });
      }
      if (m.length === 1) for (let d2 of he(i, m[0])) yield d2;
      else if (m.length === 0) {
        let d2 = f2.kind === "arbitrary" ? f2.value : f2.value?.value ?? null;
        if (d2 === null) return;
        let c = In.get(i)?.get(d2) ?? null, w2 = "";
        c !== null && c < 0 && (w2 = "-", c = Math.abs(c));
        for (let h2 of Array.from(i.utilities.keys("functional")).sort((y2, x2) => +(y2[0] === "-") - +(x2[0] === "-"))) {
          w2 && (h2 = `${w2}${h2}`);
          for (let y2 of he(i, `${h2}-${d2}`)) yield y2;
          if (f2.modifier) for (let y2 of he(i, `${h2}-${d2}${f2.modifier}`)) yield y2;
          if (c !== null) {
            for (let y2 of he(i, `${h2}-${c}`)) yield y2;
            if (f2.modifier) for (let y2 of he(i, `${h2}-${c}${He(f2.modifier)}`)) yield y2;
          }
          for (let y2 of he(i, `${h2}-[${d2}]`)) yield y2;
          if (f2.modifier) for (let y2 of he(i, `${h2}-[${d2}]${He(f2.modifier)}`)) yield y2;
        }
      }
    }
  }
}
function Ln(t, r, i) {
  let e = null;
  if (r.kind === "functional" && r.value?.kind === "arbitrary" && r.value.value.includes("var(--") ? e = r.value.value : r.kind === "arbitrary" && r.value.includes("var(--") && (e = r.value), e === null) return true;
  let n = t.candidatesToCss([t.printCandidate(i)]).join(`
`), s = true;
  return O2(B2(e), (a) => {
    if (a.kind === "function" && a.value === "var") {
      let p = a.nodes[0].value;
      if (!new RegExp(`var\\(${p}[,)]\\s*`, "g").test(n) || n.includes(`${p}:`)) return s = false, E2.Stop;
    }
  }), s;
}
function Mn(t, r) {
  if (t.kind !== "functional" || t.value?.kind !== "named") return t;
  let i = r.designSystem, e = Kt.get(r), n = xe.get(r), s = i.printCandidate(t), a = n.get(s);
  if (typeof a != "string") return t;
  for (let u2 of p(a, t)) {
    let f2 = i.printCandidate(u2);
    if (n.get(f2) === a) return u2;
  }
  return t;
  function* p(u2, f2) {
    let m = e.get(u2);
    if (!(m.length > 1)) {
      if (m.length === 0 && f2.modifier) {
        let d2 = { ...f2, modifier: null }, c = n.get(i.printCandidate(d2));
        if (typeof c == "string") for (let w2 of p(c, d2)) yield Object.assign({}, w2, { modifier: f2.modifier });
      }
      if (m.length === 1) for (let d2 of he(i, m[0])) yield d2;
    }
  }
}
var zn = /* @__PURE__ */ new Map([["order-none", "order-0"], ["break-words", "wrap-break-word"]]);
function Fn(t, r) {
  let i = r.designSystem, e = xe.get(r), n = Un(i, t), s = zn.get(n) ?? null;
  if (s === null) return t;
  let a = e.get(n);
  if (typeof a != "string") return t;
  let p = e.get(s);
  if (typeof p != "string" || a !== p) return t;
  let [u2] = he(i, s);
  return u2;
}
function Wn(t, r) {
  let i = r.designSystem, e = ut.get(r), n = Gr.get(r), s = pt(t);
  for (let [a] of s) {
    if (a.kind === "compound") continue;
    let p = i.printVariant(a), u2 = e.get(p);
    if (typeof u2 != "string") continue;
    let f2 = n.get(u2);
    if (f2.length !== 1) continue;
    let m = f2[0], d2 = i.parseVariant(m);
    d2 !== null && ge2(a, d2);
  }
  return t;
}
function Bn(t, r) {
  let i = r.designSystem, e = xe.get(r);
  if (t.kind === "functional" && t.value?.kind === "arbitrary" && t.value.dataType !== null) {
    let n = i.printCandidate({ ...t, value: { ...t.value, dataType: null } });
    e.get(i.printCandidate(t)) === e.get(n) && (t.value.dataType = null);
  }
  return t;
}
function qn(t, r) {
  if (t.kind !== "functional" || t.value?.kind !== "arbitrary") return t;
  let i = r.designSystem, e = xe.get(r), n = e.get(i.printCandidate(t));
  if (n === null) return t;
  for (let s of Zr(t)) if (e.get(i.printCandidate({ ...t, value: s })) === n) return t.value = s, t;
  return t;
}
function Gn(t) {
  let r = pt(t);
  for (let [i] of r) if (i.kind === "functional" && i.root === "data" && i.value?.kind === "arbitrary" && !i.value.value.includes("=")) i.value = { kind: "named", value: i.value.value };
  else if (i.kind === "functional" && i.root === "aria" && i.value?.kind === "arbitrary" && (i.value.value.endsWith("=true") || i.value.value.endsWith('="true"') || i.value.value.endsWith("='true'"))) {
    let [e, n] = d(i.value.value, "=");
    if (e[e.length - 1] === "~" || e[e.length - 1] === "|" || e[e.length - 1] === "^" || e[e.length - 1] === "$" || e[e.length - 1] === "*") continue;
    i.value = { kind: "named", value: i.value.value.slice(0, i.value.value.indexOf("=")) };
  } else i.kind === "functional" && i.root === "supports" && i.value?.kind === "arbitrary" && /^[a-z-][a-z0-9-]*$/i.test(i.value.value) && (i.value = { kind: "named", value: i.value.value });
  return t;
}
function* Zr(t, r = t.value?.value ?? "", i = /* @__PURE__ */ new Set()) {
  if (i.has(r)) return;
  if (i.add(r), yield { kind: "named", value: r, fraction: null }, r.endsWith("%") && ge(r.slice(0, -1)) && (yield { kind: "named", value: r.slice(0, -1), fraction: null }), r.includes("/")) {
    let [s, a] = r.split("/");
    u(s) && u(a) && (yield { kind: "named", value: s, fraction: `${s}/${a}` });
  }
  let e = /* @__PURE__ */ new Set();
  for (let s of r.matchAll(/(\d+\/\d+)|(\d+\.?\d+)/g)) e.add(s[0].trim());
  let n = Array.from(e).sort((s, a) => s.length - a.length);
  for (let s of n) yield* Zr(t, s, i);
}
function Hr(t) {
  return !t.some((r) => r.kind === "separator" && r.value.trim() === ",");
}
function ct(t) {
  let r = t.value.trim();
  return t.kind === "selector" && r[0] === "[" && r[r.length - 1] === "]";
}
function Hn(t, r) {
  let i = [t], e = r.designSystem, n = ut.get(r), s = pt(t);
  for (let [a, p] of s) if (a.kind === "compound" && (a.root === "has" || a.root === "not" || a.root === "in") && a.modifier !== null && "modifier" in a.variant && (a.variant.modifier = a.modifier, a.modifier = null), a.kind === "arbitrary") {
    if (a.relative) continue;
    let u2 = be2(a.selector.trim());
    if (!Hr(u2)) continue;
    if (p === null && u2.length === 3 && u2[0].kind === "selector" && u2[0].value === "&" && u2[1].kind === "combinator" && u2[1].value.trim() === ">" && u2[2].kind === "selector" && u2[2].value === "*") {
      ge2(a, e.parseVariant("*"));
      continue;
    }
    if (p === null && u2.length === 3 && u2[0].kind === "selector" && u2[0].value === "&" && u2[1].kind === "combinator" && u2[1].value.trim() === "" && u2[2].kind === "selector" && u2[2].value === "*") {
      ge2(a, e.parseVariant("**"));
      continue;
    }
    if (p === null && u2.length === 3 && u2[1].kind === "combinator" && u2[1].value.trim() === "" && u2[2].kind === "selector" && u2[2].value === "&") {
      u2.pop(), u2.pop(), ge2(a, e.parseVariant(`in-[${se(u2)}]`));
      continue;
    }
    if (p === null && u2[0].kind === "selector" && (u2[0].value === "@media" || u2[0].value === "@supports")) {
      let c = n.get(e.printVariant(a)), w2 = B2(se(u2)), h2 = false;
      if (O2(w2, (y2) => {
        if (y2.kind === "word" && y2.value === "not") return h2 = true, E2.Replace([]);
      }), w2 = B2(J2(w2)), O2(w2, (y2) => {
        y2.kind === "separator" && y2.value !== " " && y2.value.trim() === "" && (y2.value = " ");
      }), h2) {
        let y2 = e.parseVariant(`not-[${J2(w2)}]`);
        if (y2 === null) continue;
        let x2 = n.get(e.printVariant(y2));
        if (c === x2) {
          ge2(a, y2);
          continue;
        }
      }
    }
    let f2 = null;
    p === null && u2.length === 3 && u2[0].kind === "selector" && u2[0].value.trim() === "&" && u2[1].kind === "combinator" && u2[1].value.trim() === ">" && u2[2].kind === "selector" && ct(u2[2]) && (u2 = [u2[2]], f2 = e.parseVariant("*")), p === null && u2.length === 3 && u2[0].kind === "selector" && u2[0].value.trim() === "&" && u2[1].kind === "combinator" && u2[1].value.trim() === "" && u2[2].kind === "selector" && ct(u2[2]) && (u2 = [u2[2]], f2 = e.parseVariant("**"));
    let m = u2.filter((c) => !(c.kind === "selector" && c.value.trim() === "&"));
    if (m.length !== 1) continue;
    let d2 = m[0];
    if (d2.kind === "function" && d2.value === ":is") {
      if (!Hr(d2.nodes) || d2.nodes.length !== 1 || !ct(d2.nodes[0])) continue;
      d2 = d2.nodes[0];
    }
    if (d2.kind === "function" && d2.value[0] === ":" || d2.kind === "selector" && d2.value[0] === ":") {
      let c = d2, w2 = false;
      if (c.kind === "function" && c.value === ":not") {
        if (w2 = true, c.nodes.length !== 1 || c.nodes[0].kind !== "selector" && c.nodes[0].kind !== "function" || c.nodes[0].value[0] !== ":") continue;
        c = c.nodes[0];
      }
      let h2 = ((x2) => {
        if (x2 === ":nth-child" && c.kind === "function" && c.nodes.length === 1 && c.nodes[0].kind === "value" && c.nodes[0].value === "odd") return w2 ? (w2 = false, "even") : "odd";
        if (x2 === ":nth-child" && c.kind === "function" && c.nodes.length === 1 && c.nodes[0].kind === "value" && c.nodes[0].value === "even") return w2 ? (w2 = false, "odd") : "even";
        for (let [T2, A2] of [[":nth-child", "nth"], [":nth-last-child", "nth-last"], [":nth-of-type", "nth-of-type"], [":nth-last-of-type", "nth-of-last-type"]]) if (x2 === T2 && c.kind === "function" && c.nodes.length === 1) return c.nodes.length === 1 && c.nodes[0].kind === "value" && u(c.nodes[0].value) ? `${A2}-${c.nodes[0].value}` : `${A2}-[${se(c.nodes)}]`;
        if (w2) {
          let T2 = n.get(e.printVariant(a)), A2 = n.get(`not-[${x2}]`);
          if (T2 === A2) return `[&${x2}]`;
        }
        return null;
      })(c.value);
      if (h2 === null) continue;
      w2 && (h2 = `not-${h2}`);
      let y2 = e.parseVariant(h2);
      if (y2 === null) continue;
      ge2(a, y2);
    } else if (ct(d2)) {
      let c = Rr(d2.value);
      if (c === null) continue;
      if (c.attribute.startsWith("data-")) {
        let w2 = c.attribute.slice(5);
        ge2(a, { kind: "functional", root: "data", modifier: null, value: c.value === null ? { kind: "named", value: w2 } : { kind: "arbitrary", value: `${w2}${c.operator}${c.quote ?? ""}${c.value}${c.quote ?? ""}${c.sensitivity ? ` ${c.sensitivity}` : ""}` } });
      } else if (c.attribute.startsWith("aria-")) {
        let w2 = c.attribute.slice(5);
        ge2(a, { kind: "functional", root: "aria", modifier: null, value: c.value === null ? { kind: "arbitrary", value: w2 } : c.operator === "=" && c.value === "true" && c.sensitivity === null ? { kind: "named", value: w2 } : { kind: "arbitrary", value: `${c.attribute}${c.operator}${c.quote ?? ""}${c.value}${c.quote ?? ""}${c.sensitivity ? ` ${c.sensitivity}` : ""}` } });
      }
    }
    if (f2) return [f2, a];
  }
  return i;
}
function Jn(t, r) {
  if (t.kind !== "functional" && t.kind !== "arbitrary" || t.modifier === null) return t;
  let i = r.designSystem, e = xe.get(r), n = e.get(i.printCandidate(t)), s = t.modifier;
  if (n === e.get(i.printCandidate({ ...t, modifier: null }))) return t.modifier = null, t;
  {
    let a = { kind: "named", value: s.value.endsWith("%") ? s.value.includes(".") ? `${Number(s.value.slice(0, -1))}` : s.value.slice(0, -1) : s.value, fraction: null };
    if (n === e.get(i.printCandidate({ ...t, modifier: a }))) return t.modifier = a, t;
  }
  {
    let a = { kind: "named", value: `${parseFloat(s.value) * 100}`, fraction: null };
    if (n === e.get(i.printCandidate({ ...t, modifier: a }))) return t.modifier = a, t;
  }
  return t;
}
var Zn = /^\d+\/\d+$/;
function Yr(t) {
  let r = new U2((n) => ({ name: n, utility: n, fraction: false, modifiers: [] }));
  for (let n of t.utilities.keys("static")) {
    let s = r.get(n);
    s.fraction = false, s.modifiers = [];
  }
  for (let n of t.utilities.keys("functional")) {
    let s = t.utilities.getCompletions(n);
    for (let a of s) for (let p of a.values) {
      let u2 = p !== null && Zn.test(p), f2 = p === null ? n : `${n}-${p}`, m = r.get(f2);
      if (m.utility = n, m.fraction ||= u2, m.modifiers.push(...a.modifiers), a.supportsNegative) {
        let d2 = r.get(`-${f2}`);
        d2.utility = `-${n}`, d2.fraction ||= u2, d2.modifiers.push(...a.modifiers);
      }
      m.modifiers = Array.from(new Set(m.modifiers));
    }
  }
  if (r.size === 0) return [];
  let i = Array.from(r.values());
  return i.sort((n, s) => st(n.name, s.name)), Yn(i);
}
function Yn(t) {
  let r = [], i = null, e = /* @__PURE__ */ new Map(), n = new U2(() => []);
  for (let a of t) {
    let { utility: p, fraction: u2 } = a;
    i || (i = { utility: p, items: [] }, e.set(p, i)), p !== i.utility && (r.push(i), i = { utility: p, items: [] }, e.set(p, i)), u2 ? n.get(p).push(a) : i.items.push(a);
  }
  i && r[r.length - 1] !== i && r.push(i);
  for (let [a, p] of n) {
    let u2 = e.get(a);
    u2 && u2.items.push(...p);
  }
  let s = [];
  for (let a of r) for (let p of a.items) s.push([p.name, { modifiers: p.modifiers }]);
  return s;
}
function Qr(t) {
  let r = [];
  for (let [e, n] of t.variants.entries()) {
    let p = function({ value: u2, modifier: f2 } = {}) {
      let m = e;
      u2 && (m += s ? `-${u2}` : u2), f2 && (m += `/${f2}`);
      let d2 = t.parseVariant(m);
      if (!d2) return [];
      let c = G2(".__placeholder__", []);
      if (je(c, d2, t.variants) === null) return [];
      let w2 = [];
      return O2(c.nodes, { exit(h2, y2) {
        if (h2.kind !== "rule" && h2.kind !== "at-rule" || h2.nodes.length > 0) return;
        let x2 = y2.path();
        x2.push(h2), x2.sort((b2, j2) => {
          let R2 = b2.kind === "at-rule", K2 = j2.kind === "at-rule";
          return R2 && !K2 ? -1 : !R2 && K2 ? 1 : 0;
        });
        let T2 = x2.flatMap((b2) => b2.kind === "rule" ? b2.selector === "&" ? [] : [b2.selector] : b2.kind === "at-rule" ? [`${b2.name} ${b2.params}`] : []), A2 = "";
        for (let b2 = T2.length - 1; b2 >= 0; b2--) A2 = A2 === "" ? T2[b2] : `${T2[b2]} { ${A2} }`;
        w2.push(A2);
      } }), w2;
    };
    var i = p;
    if (n.kind === "arbitrary") continue;
    let s = e !== "@", a = t.variants.getCompletions(e);
    switch (n.kind) {
      case "static": {
        r.push({ name: e, values: a, isArbitrary: false, hasDash: s, selectors: p });
        break;
      }
      case "functional": {
        r.push({ name: e, values: a, isArbitrary: true, hasDash: s, selectors: p });
        break;
      }
      case "compound": {
        r.push({ name: e, values: a, isArbitrary: true, hasDash: s, selectors: p });
        break;
      }
    }
  }
  return r;
}
function Xr(t, r) {
  let { astNodes: i, nodeSorting: e } = Ce(Array.from(r), t), n = new Map(r.map((a) => [a, null])), s = 0n;
  for (let a of i) {
    let p = e.get(a)?.candidate;
    p && n.set(p, n.get(p) ?? s++);
  }
  return r.map((a) => [a, n.get(a) ?? null]);
}
var dt = new RegExp("^@?[a-z0-9][a-zA-Z0-9_-]*(?<![_-])$");
var _t = class {
  compareFns = /* @__PURE__ */ new Map();
  variants = /* @__PURE__ */ new Map();
  completions = /* @__PURE__ */ new Map();
  groupOrder = null;
  lastOrder = 0;
  static(r, i, { compounds: e, order: n } = {}) {
    this.set(r, { kind: "static", applyFn: i, compoundsWith: 0, compounds: e ?? 2, order: n });
  }
  fromAst(r, i, e) {
    let n = [], s = false;
    O2(i, (a) => {
      a.kind === "rule" ? n.push(a.selector) : a.kind === "at-rule" && a.name === "@variant" ? s = true : a.kind === "at-rule" && a.name !== "@slot" && n.push(`${a.name} ${a.params}`);
    }), this.static(r, (a) => {
      let p = i.map(te2);
      s && It(p, e), Ut(p, a.nodes), a.nodes = p;
    }, { compounds: Re(n) });
  }
  functional(r, i, { compounds: e, order: n } = {}) {
    this.set(r, { kind: "functional", applyFn: i, compoundsWith: 0, compounds: e ?? 2, order: n });
  }
  compound(r, i, e, { compounds: n, order: s } = {}) {
    this.set(r, { kind: "compound", applyFn: e, compoundsWith: i, compounds: n ?? 2, order: s });
  }
  group(r, i) {
    this.groupOrder = this.nextOrder(), i && this.compareFns.set(this.groupOrder, i), r(), this.groupOrder = null;
  }
  has(r) {
    return this.variants.has(r);
  }
  get(r) {
    return this.variants.get(r);
  }
  kind(r) {
    return this.variants.get(r)?.kind;
  }
  compoundsWith(r, i) {
    let e = this.variants.get(r), n = typeof i == "string" ? this.variants.get(i) : i.kind === "arbitrary" ? { compounds: Re([i.selector]) } : this.variants.get(i.root);
    return !(!e || !n || e.kind !== "compound" || n.compounds === 0 || e.compoundsWith === 0 || (e.compoundsWith & n.compounds) === 0);
  }
  suggest(r, i) {
    this.completions.set(r, i);
  }
  getCompletions(r) {
    return this.completions.get(r)?.() ?? [];
  }
  compare(r, i) {
    if (r === i) return 0;
    if (r === null) return -1;
    if (i === null) return 1;
    if (r.kind === "arbitrary" && i.kind === "arbitrary") return r.selector < i.selector ? -1 : 1;
    if (r.kind === "arbitrary") return 1;
    if (i.kind === "arbitrary") return -1;
    let e = this.variants.get(r.root).order, n = this.variants.get(i.root).order, s = e - n;
    if (s !== 0) return s;
    if (r.kind === "compound" && i.kind === "compound") {
      let f2 = this.compare(r.variant, i.variant);
      return f2 !== 0 ? f2 : r.modifier && i.modifier ? r.modifier.value < i.modifier.value ? -1 : 1 : r.modifier ? 1 : i.modifier ? -1 : 0;
    }
    let a = this.compareFns.get(e);
    if (a !== void 0) return a(r, i);
    if (r.root !== i.root) return r.root < i.root ? -1 : 1;
    let p = r.value, u2 = i.value;
    return p === null ? -1 : u2 === null || p.kind === "arbitrary" && u2.kind !== "arbitrary" ? 1 : p.kind !== "arbitrary" && u2.kind === "arbitrary" || p.value < u2.value ? -1 : 1;
  }
  keys() {
    return this.variants.keys();
  }
  entries() {
    return this.variants.entries();
  }
  set(r, { kind: i, applyFn: e, compounds: n, compoundsWith: s, order: a }) {
    let p = this.variants.get(r);
    p ? Object.assign(p, { kind: i, applyFn: e, compounds: n }) : (a === void 0 && (this.lastOrder = this.nextOrder(), a = this.lastOrder), this.variants.set(r, { kind: i, applyFn: e, order: a, compoundsWith: s, compounds: n }));
  }
  nextOrder() {
    return this.groupOrder ?? this.lastOrder + 1;
  }
};
function Re(t) {
  let r = 0;
  for (let i of t) {
    if (i[0] === "@") {
      if (!i.startsWith("@media") && !i.startsWith("@supports") && !i.startsWith("@container")) return 0;
      r |= 1;
      continue;
    }
    if (i.includes("::")) return 0;
    r |= 2;
  }
  return r;
}
function ti(t) {
  let r = new _t();
  function i(f2, m, { compounds: d2 } = {}) {
    d2 = d2 ?? Re(m), r.static(f2, (c) => {
      c.nodes = m.map((w2) => Z2(w2, c.nodes));
    }, { compounds: d2 });
  }
  i("*", [":is(& > *)"], { compounds: 0 }), i("**", [":is(& *)"], { compounds: 0 });
  function e(f2, m) {
    return m.map((d2) => {
      d2 = d2.trim();
      let c = d(d2, " ");
      return c[0] === "not" ? c.slice(1).join(" ") : f2 === "@container" ? c[0][0] === "(" ? `not ${d2}` : c[1] === "not" ? `${c[0]} ${c.slice(2).join(" ")}` : `${c[0]} not ${c.slice(1).join(" ")}` : `not ${d2}`;
    });
  }
  let n = ["@media", "@supports", "@container"];
  function s(f2) {
    for (let m of n) {
      if (m !== f2.name) continue;
      let d2 = d(f2.params, ",");
      return d2.length > 1 ? null : (d2 = e(f2.name, d2), F2(f2.name, d2.join(", ")));
    }
    return null;
  }
  function a(f2) {
    return f2.includes("::") ? null : `&:not(${d(f2, ",").map((d2) => (d2 = d2.replaceAll("&", "*"), d2)).join(", ")})`;
  }
  r.compound("not", 3, (f2, m) => {
    if (m.variant.kind === "arbitrary" && m.variant.relative || m.modifier) return null;
    let d2 = false;
    if (O2([f2], (c, w2) => {
      if (c.kind !== "rule" && c.kind !== "at-rule") return E2.Continue;
      if (c.nodes.length > 0) return E2.Continue;
      let h2 = [], y2 = [], x2 = w2.path();
      x2.push(c);
      for (let A2 of x2) A2.kind === "at-rule" ? h2.push(A2) : A2.kind === "rule" && y2.push(A2);
      if (h2.length > 1) return E2.Stop;
      if (y2.length > 1) return E2.Stop;
      let T2 = [];
      for (let A2 of y2) {
        let b2 = a(A2.selector);
        if (!b2) return d2 = false, E2.Stop;
        T2.push(G2(b2, []));
      }
      for (let A2 of h2) {
        let b2 = s(A2);
        if (!b2) return d2 = false, E2.Stop;
        T2.push(b2);
      }
      return Object.assign(f2, G2("&", T2)), d2 = true, E2.Skip;
    }), f2.kind === "rule" && f2.selector === "&" && f2.nodes.length === 1 && Object.assign(f2, f2.nodes[0]), !d2) return null;
  }), r.suggest("not", () => Array.from(r.keys()).filter((f2) => r.compoundsWith("not", f2))), r.compound("group", 2, (f2, m) => {
    if (m.variant.kind === "arbitrary" && m.variant.relative) return null;
    let d2 = m.modifier ? `:where(.${t.prefix ? `${t.prefix}\\:` : ""}group\\/${m.modifier.value})` : `:where(.${t.prefix ? `${t.prefix}\\:` : ""}group)`, c = false;
    if (O2([f2], (w2, h2) => {
      if (w2.kind !== "rule") return E2.Continue;
      for (let x2 of h2.path()) if (x2.kind === "rule") return c = false, E2.Stop;
      let y2 = w2.selector.replaceAll("&", d2);
      d(y2, ",").length > 1 && (y2 = `:is(${y2})`), w2.selector = `&:is(${y2} *)`, c = true;
    }), !c) return null;
  }), r.suggest("group", () => Array.from(r.keys()).filter((f2) => r.compoundsWith("group", f2))), r.compound("peer", 2, (f2, m) => {
    if (m.variant.kind === "arbitrary" && m.variant.relative) return null;
    let d2 = m.modifier ? `:where(.${t.prefix ? `${t.prefix}\\:` : ""}peer\\/${m.modifier.value})` : `:where(.${t.prefix ? `${t.prefix}\\:` : ""}peer)`, c = false;
    if (O2([f2], (w2, h2) => {
      if (w2.kind !== "rule") return E2.Continue;
      for (let x2 of h2.path()) if (x2.kind === "rule") return c = false, E2.Stop;
      let y2 = w2.selector.replaceAll("&", d2);
      d(y2, ",").length > 1 && (y2 = `:is(${y2})`), w2.selector = `&:is(${y2} ~ *)`, c = true;
    }), !c) return null;
  }), r.suggest("peer", () => Array.from(r.keys()).filter((f2) => r.compoundsWith("peer", f2))), i("first-letter", ["&::first-letter"]), i("first-line", ["&::first-line"]), i("marker", ["& *::marker", "&::marker", "& *::-webkit-details-marker", "&::-webkit-details-marker"]), i("selection", ["& *::selection", "&::selection"]), i("file", ["&::file-selector-button"]), i("placeholder", ["&::placeholder"]), i("backdrop", ["&::backdrop"]), i("details-content", ["&::details-content"]);
  {
    let f2 = function() {
      return W2([F2("@property", "--tw-content", [l3("syntax", '"*"'), l3("initial-value", '""'), l3("inherits", "false")])]);
    };
    var p = f2;
    r.static("before", (m) => {
      m.nodes = [G2("&::before", [f2(), l3("content", "var(--tw-content)"), ...m.nodes])];
    }, { compounds: 0 }), r.static("after", (m) => {
      m.nodes = [G2("&::after", [f2(), l3("content", "var(--tw-content)"), ...m.nodes])];
    }, { compounds: 0 });
  }
  i("first", ["&:first-child"]), i("last", ["&:last-child"]), i("only", ["&:only-child"]), i("odd", ["&:nth-child(odd)"]), i("even", ["&:nth-child(even)"]), i("first-of-type", ["&:first-of-type"]), i("last-of-type", ["&:last-of-type"]), i("only-of-type", ["&:only-of-type"]), i("visited", ["&:visited"]), i("target", ["&:target"]), i("open", ["&:is([open], :popover-open, :open)"]), i("default", ["&:default"]), i("checked", ["&:checked"]), i("indeterminate", ["&:indeterminate"]), i("placeholder-shown", ["&:placeholder-shown"]), i("autofill", ["&:autofill"]), i("optional", ["&:optional"]), i("required", ["&:required"]), i("valid", ["&:valid"]), i("invalid", ["&:invalid"]), i("user-valid", ["&:user-valid"]), i("user-invalid", ["&:user-invalid"]), i("in-range", ["&:in-range"]), i("out-of-range", ["&:out-of-range"]), i("read-only", ["&:read-only"]), i("empty", ["&:empty"]), i("focus-within", ["&:focus-within"]), r.static("hover", (f2) => {
    f2.nodes = [G2("&:hover", [F2("@media", "(hover: hover)", f2.nodes)])];
  }), i("focus", ["&:focus"]), i("focus-visible", ["&:focus-visible"]), i("active", ["&:active"]), i("enabled", ["&:enabled"]), i("disabled", ["&:disabled"]), i("inert", ["&:is([inert], [inert] *)"]), r.compound("in", 2, (f2, m) => {
    if (m.modifier) return null;
    let d2 = false;
    if (O2([f2], (c, w2) => {
      if (c.kind !== "rule") return E2.Continue;
      for (let h2 of w2.path()) if (h2.kind === "rule") return d2 = false, E2.Stop;
      c.selector = `:where(${c.selector.replaceAll("&", "*")}) &`, d2 = true;
    }), !d2) return null;
  }), r.suggest("in", () => Array.from(r.keys()).filter((f2) => r.compoundsWith("in", f2))), r.compound("has", 2, (f2, m) => {
    if (m.modifier) return null;
    let d2 = false;
    if (O2([f2], (c, w2) => {
      if (c.kind !== "rule") return E2.Continue;
      for (let h2 of w2.path()) if (h2.kind === "rule") return d2 = false, E2.Stop;
      c.selector = `&:has(${c.selector.replaceAll("&", "*")})`, d2 = true;
    }), !d2) return null;
  }), r.suggest("has", () => Array.from(r.keys()).filter((f2) => r.compoundsWith("has", f2))), r.functional("aria", (f2, m) => {
    if (!m.value || m.modifier) return null;
    m.value.kind === "arbitrary" ? f2.nodes = [G2(`&[aria-${ei(m.value.value)}]`, f2.nodes)] : f2.nodes = [G2(`&[aria-${m.value.value}="true"]`, f2.nodes)];
  }), r.suggest("aria", () => ["busy", "checked", "disabled", "expanded", "hidden", "pressed", "readonly", "required", "selected"]), r.functional("data", (f2, m) => {
    if (!m.value || m.modifier) return null;
    f2.nodes = [G2(`&[data-${ei(m.value.value)}]`, f2.nodes)];
  }), r.functional("nth", (f2, m) => {
    if (!m.value || m.modifier || m.value.kind === "named" && !u(m.value.value)) return null;
    f2.nodes = [G2(`&:nth-child(${m.value.value})`, f2.nodes)];
  }), r.functional("nth-last", (f2, m) => {
    if (!m.value || m.modifier || m.value.kind === "named" && !u(m.value.value)) return null;
    f2.nodes = [G2(`&:nth-last-child(${m.value.value})`, f2.nodes)];
  }), r.functional("nth-of-type", (f2, m) => {
    if (!m.value || m.modifier || m.value.kind === "named" && !u(m.value.value)) return null;
    f2.nodes = [G2(`&:nth-of-type(${m.value.value})`, f2.nodes)];
  }), r.functional("nth-last-of-type", (f2, m) => {
    if (!m.value || m.modifier || m.value.kind === "named" && !u(m.value.value)) return null;
    f2.nodes = [G2(`&:nth-last-of-type(${m.value.value})`, f2.nodes)];
  }), r.functional("supports", (f2, m) => {
    if (!m.value || m.modifier) return null;
    let d2 = m.value.value;
    if (d2 === null) return null;
    if (/^[\w-]*\s*\(/.test(d2)) {
      let c = d2.replace(/\b(and|or|not)\b/g, " $1 ");
      f2.nodes = [F2("@supports", c, f2.nodes)];
      return;
    }
    d2.includes(":") || (d2 = `${d2}: var(--tw)`), (d2[0] !== "(" || d2[d2.length - 1] !== ")") && (d2 = `(${d2})`), f2.nodes = [F2("@supports", d2, f2.nodes)];
  }, { compounds: 1 }), i("motion-safe", ["@media (prefers-reduced-motion: no-preference)"]), i("motion-reduce", ["@media (prefers-reduced-motion: reduce)"]), i("contrast-more", ["@media (prefers-contrast: more)"]), i("contrast-less", ["@media (prefers-contrast: less)"]);
  {
    let f2 = function(m, d2, c, w2) {
      if (m === d2) return 0;
      let h2 = w2.get(m);
      if (h2 === null) return c === "asc" ? -1 : 1;
      let y2 = w2.get(d2);
      return y2 === null ? c === "asc" ? 1 : -1 : Te(h2, y2, c);
    };
    var u2 = f2;
    {
      let m = t.namespace("--breakpoint"), d2 = new U2((c) => {
        switch (c.kind) {
          case "static":
            return t.resolveValue(c.root, ["--breakpoint"]) ?? null;
          case "functional": {
            if (!c.value || c.modifier) return null;
            let w2 = null;
            return c.value.kind === "arbitrary" ? w2 = c.value.value : c.value.kind === "named" && (w2 = t.resolveValue(c.value.value, ["--breakpoint"])), !w2 || w2.includes("var(") ? null : w2;
          }
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      r.group(() => {
        r.functional("max", (c, w2) => {
          if (w2.modifier) return null;
          let h2 = d2.get(w2);
          if (h2 === null) return null;
          c.nodes = [F2("@media", `(width < ${h2})`, c.nodes)];
        }, { compounds: 1 });
      }, (c, w2) => f2(c, w2, "desc", d2)), r.suggest("max", () => Array.from(m.keys()).filter((c) => c !== null)), r.group(() => {
        for (let [c, w2] of t.namespace("--breakpoint")) c !== null && r.static(c, (h2) => {
          h2.nodes = [F2("@media", `(width >= ${w2})`, h2.nodes)];
        }, { compounds: 1 });
        r.functional("min", (c, w2) => {
          if (w2.modifier) return null;
          let h2 = d2.get(w2);
          if (h2 === null) return null;
          c.nodes = [F2("@media", `(width >= ${h2})`, c.nodes)];
        }, { compounds: 1 });
      }, (c, w2) => f2(c, w2, "asc", d2)), r.suggest("min", () => Array.from(m.keys()).filter((c) => c !== null));
    }
    {
      let m = t.namespace("--container"), d2 = new U2((c) => {
        switch (c.kind) {
          case "functional": {
            if (c.value === null) return null;
            let w2 = null;
            return c.value.kind === "arbitrary" ? w2 = c.value.value : c.value.kind === "named" && (w2 = t.resolveValue(c.value.value, ["--container"])), !w2 || w2.includes("var(") ? null : w2;
          }
          case "static":
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      r.group(() => {
        r.functional("@max", (c, w2) => {
          let h2 = d2.get(w2);
          if (h2 === null) return null;
          c.nodes = [F2("@container", w2.modifier ? `${w2.modifier.value} (width < ${h2})` : `(width < ${h2})`, c.nodes)];
        }, { compounds: 1 });
      }, (c, w2) => f2(c, w2, "desc", d2)), r.suggest("@max", () => Array.from(m.keys()).filter((c) => c !== null)), r.group(() => {
        r.functional("@", (c, w2) => {
          let h2 = d2.get(w2);
          if (h2 === null) return null;
          c.nodes = [F2("@container", w2.modifier ? `${w2.modifier.value} (width >= ${h2})` : `(width >= ${h2})`, c.nodes)];
        }, { compounds: 1 }), r.functional("@min", (c, w2) => {
          let h2 = d2.get(w2);
          if (h2 === null) return null;
          c.nodes = [F2("@container", w2.modifier ? `${w2.modifier.value} (width >= ${h2})` : `(width >= ${h2})`, c.nodes)];
        }, { compounds: 1 });
      }, (c, w2) => f2(c, w2, "asc", d2)), r.suggest("@min", () => Array.from(m.keys()).filter((c) => c !== null)), r.suggest("@", () => Array.from(m.keys()).filter((c) => c !== null));
    }
  }
  return i("portrait", ["@media (orientation: portrait)"]), i("landscape", ["@media (orientation: landscape)"]), i("ltr", ['&:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *)']), i("rtl", ['&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *)']), i("dark", ["@media (prefers-color-scheme: dark)"]), i("starting", ["@starting-style"]), i("print", ["@media print"]), i("forced-colors", ["@media (forced-colors: active)"]), i("inverted-colors", ["@media (inverted-colors: inverted)"]), i("pointer-none", ["@media (pointer: none)"]), i("pointer-coarse", ["@media (pointer: coarse)"]), i("pointer-fine", ["@media (pointer: fine)"]), i("any-pointer-none", ["@media (any-pointer: none)"]), i("any-pointer-coarse", ["@media (any-pointer: coarse)"]), i("any-pointer-fine", ["@media (any-pointer: fine)"]), i("noscript", ["@media (scripting: none)"]), r;
}
function ei(t) {
  if (t.includes("=")) {
    let [r, ...i] = d(t, "="), e = i.join("=").trim();
    if (e[0] === "'" || e[0] === '"') return t;
    if (e.length > 1) {
      let n = e[e.length - 1];
      if (e[e.length - 2] === " " && (n === "i" || n === "I" || n === "s" || n === "S")) return `${r}="${e.slice(0, -2)}" ${n}`;
    }
    return `${r}="${e}"`;
  }
  return t;
}
function Ut(t, r) {
  O2(t, (i) => {
    if (i.kind === "at-rule" && i.name === "@slot") return E2.Replace(r);
    if (i.kind === "at-rule" && (i.name === "@keyframes" || i.name === "@property")) return Object.assign(i, W2([F2(i.name, i.params, i.nodes)])), E2.Skip;
  });
}
function It(t, r) {
  let i = 0;
  return O2(t, (e) => {
    if (e.kind !== "at-rule" || e.name !== "@variant") return;
    let n = G2("&", e.nodes), s = e.params, a = r.parseVariant(s);
    if (a === null) throw new Error(`Cannot use \`@variant\` with unknown variant: ${s}`);
    if (je(n, a, r.variants) === null) throw new Error(`Cannot use \`@variant\` with variant: ${s}`);
    return i |= 32, E2.Replace(n);
  }), i;
}
function ri(t) {
  let r = Sr(t), i = ti(t), e = new U2((u2) => kr(u2, p)), n = new U2((u2) => Array.from(yr(u2, p))), s = new U2((u2) => new U2((f2) => {
    let m = ii(f2, p, u2);
    try {
      Ke(m.map(({ node: d2 }) => d2), p);
    } catch {
      return [];
    }
    return m;
  })), a = new U2((u2) => {
    for (let f2 of nt(u2)) t.markUsedVariable(f2);
  }), p = { theme: t, utilities: r, variants: i, invalidCandidates: /* @__PURE__ */ new Set(), important: false, candidatesToCss(u2) {
    let f2 = [];
    for (let m of u2) {
      let d2 = false, { astNodes: c } = Ce([m], this, { onInvalidCandidate() {
        d2 = true;
      } });
      c = Se(c, p, 0), c.length === 0 || d2 ? f2.push(null) : f2.push(re2(c));
    }
    return f2;
  }, getClassOrder(u2) {
    return Xr(this, u2);
  }, getClassList() {
    return Yr(this);
  }, getVariants() {
    return Qr(this);
  }, parseCandidate(u2) {
    return n.get(u2);
  }, parseVariant(u2) {
    return e.get(u2);
  }, compileAstNodes(u2, f2 = 1) {
    return s.get(f2).get(u2);
  }, printCandidate(u2) {
    return xr(p, u2);
  }, printVariant(u2) {
    return at(u2);
  }, getVariantOrder() {
    let u2 = Array.from(e.values());
    u2.sort((c, w2) => this.variants.compare(c, w2));
    let f2 = /* @__PURE__ */ new Map(), m, d2 = 0;
    for (let c of u2) c !== null && (m !== void 0 && this.variants.compare(m, c) !== 0 && d2++, f2.set(c, d2), m = c);
    return f2;
  }, resolveThemeValue(u2, f2 = true) {
    let m = u2.lastIndexOf("/"), d2 = null;
    m !== -1 && (d2 = u2.slice(m + 1).trim(), u2 = u2.slice(0, m).trim());
    let c = t.resolve(null, [u2], f2 ? 1 : 0) ?? void 0;
    return d2 && c ? Q2(c, d2) : c;
  }, trackUsedVariables(u2) {
    a.get(u2);
  }, canonicalizeCandidates(u2, f2) {
    return Dt(this, u2, f2);
  } };
  return p;
}
var jt = ["container-type", "pointer-events", "visibility", "position", "inset", "inset-inline", "inset-block", "inset-inline-start", "inset-inline-end", "top", "right", "bottom", "left", "isolation", "z-index", "order", "grid-column", "grid-column-start", "grid-column-end", "grid-row", "grid-row-start", "grid-row-end", "float", "clear", "--tw-container-component", "margin", "margin-inline", "margin-block", "margin-inline-start", "margin-inline-end", "margin-top", "margin-right", "margin-bottom", "margin-left", "box-sizing", "display", "field-sizing", "aspect-ratio", "height", "max-height", "min-height", "width", "max-width", "min-width", "flex", "flex-shrink", "flex-grow", "flex-basis", "table-layout", "caption-side", "border-collapse", "border-spacing", "transform-origin", "translate", "--tw-translate-x", "--tw-translate-y", "--tw-translate-z", "scale", "--tw-scale-x", "--tw-scale-y", "--tw-scale-z", "rotate", "--tw-rotate-x", "--tw-rotate-y", "--tw-rotate-z", "--tw-skew-x", "--tw-skew-y", "transform", "animation", "cursor", "touch-action", "--tw-pan-x", "--tw-pan-y", "--tw-pinch-zoom", "resize", "scroll-snap-type", "--tw-scroll-snap-strictness", "scroll-snap-align", "scroll-snap-stop", "scroll-margin", "scroll-margin-inline", "scroll-margin-block", "scroll-margin-inline-start", "scroll-margin-inline-end", "scroll-margin-top", "scroll-margin-right", "scroll-margin-bottom", "scroll-margin-left", "scroll-padding", "scroll-padding-inline", "scroll-padding-block", "scroll-padding-inline-start", "scroll-padding-inline-end", "scroll-padding-top", "scroll-padding-right", "scroll-padding-bottom", "scroll-padding-left", "list-style-position", "list-style-type", "list-style-image", "appearance", "columns", "break-before", "break-inside", "break-after", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-template-columns", "grid-template-rows", "flex-direction", "flex-wrap", "place-content", "place-items", "align-content", "align-items", "justify-content", "justify-items", "gap", "column-gap", "row-gap", "--tw-space-x-reverse", "--tw-space-y-reverse", "divide-x-width", "divide-y-width", "--tw-divide-y-reverse", "divide-style", "divide-color", "place-self", "align-self", "justify-self", "overflow", "overflow-x", "overflow-y", "overscroll-behavior", "overscroll-behavior-x", "overscroll-behavior-y", "scroll-behavior", "border-radius", "border-start-radius", "border-end-radius", "border-top-radius", "border-right-radius", "border-bottom-radius", "border-left-radius", "border-start-start-radius", "border-start-end-radius", "border-end-end-radius", "border-end-start-radius", "border-top-left-radius", "border-top-right-radius", "border-bottom-right-radius", "border-bottom-left-radius", "border-width", "border-inline-width", "border-block-width", "border-inline-start-width", "border-inline-end-width", "border-top-width", "border-right-width", "border-bottom-width", "border-left-width", "border-style", "border-inline-style", "border-block-style", "border-inline-start-style", "border-inline-end-style", "border-top-style", "border-right-style", "border-bottom-style", "border-left-style", "border-color", "border-inline-color", "border-block-color", "border-inline-start-color", "border-inline-end-color", "border-top-color", "border-right-color", "border-bottom-color", "border-left-color", "background-color", "background-image", "--tw-gradient-position", "--tw-gradient-stops", "--tw-gradient-via-stops", "--tw-gradient-from", "--tw-gradient-from-position", "--tw-gradient-via", "--tw-gradient-via-position", "--tw-gradient-to", "--tw-gradient-to-position", "mask-image", "--tw-mask-top", "--tw-mask-top-from-color", "--tw-mask-top-from-position", "--tw-mask-top-to-color", "--tw-mask-top-to-position", "--tw-mask-right", "--tw-mask-right-from-color", "--tw-mask-right-from-position", "--tw-mask-right-to-color", "--tw-mask-right-to-position", "--tw-mask-bottom", "--tw-mask-bottom-from-color", "--tw-mask-bottom-from-position", "--tw-mask-bottom-to-color", "--tw-mask-bottom-to-position", "--tw-mask-left", "--tw-mask-left-from-color", "--tw-mask-left-from-position", "--tw-mask-left-to-color", "--tw-mask-left-to-position", "--tw-mask-linear", "--tw-mask-linear-position", "--tw-mask-linear-from-color", "--tw-mask-linear-from-position", "--tw-mask-linear-to-color", "--tw-mask-linear-to-position", "--tw-mask-radial", "--tw-mask-radial-shape", "--tw-mask-radial-size", "--tw-mask-radial-position", "--tw-mask-radial-from-color", "--tw-mask-radial-from-position", "--tw-mask-radial-to-color", "--tw-mask-radial-to-position", "--tw-mask-conic", "--tw-mask-conic-position", "--tw-mask-conic-from-color", "--tw-mask-conic-from-position", "--tw-mask-conic-to-color", "--tw-mask-conic-to-position", "box-decoration-break", "background-size", "background-attachment", "background-clip", "background-position", "background-repeat", "background-origin", "mask-composite", "mask-mode", "mask-type", "mask-size", "mask-clip", "mask-position", "mask-repeat", "mask-origin", "fill", "stroke", "stroke-width", "object-fit", "object-position", "padding", "padding-inline", "padding-block", "padding-inline-start", "padding-inline-end", "padding-top", "padding-right", "padding-bottom", "padding-left", "text-align", "text-indent", "vertical-align", "font-family", "font-size", "line-height", "font-weight", "letter-spacing", "text-wrap", "overflow-wrap", "word-break", "text-overflow", "hyphens", "white-space", "color", "text-transform", "font-style", "font-stretch", "font-variant-numeric", "text-decoration-line", "text-decoration-color", "text-decoration-style", "text-decoration-thickness", "text-underline-offset", "-webkit-font-smoothing", "placeholder-color", "caret-color", "accent-color", "color-scheme", "opacity", "background-blend-mode", "mix-blend-mode", "box-shadow", "--tw-shadow", "--tw-shadow-color", "--tw-ring-shadow", "--tw-ring-color", "--tw-inset-shadow", "--tw-inset-shadow-color", "--tw-inset-ring-shadow", "--tw-inset-ring-color", "--tw-ring-offset-width", "--tw-ring-offset-color", "outline", "outline-width", "outline-offset", "outline-color", "--tw-blur", "--tw-brightness", "--tw-contrast", "--tw-drop-shadow", "--tw-grayscale", "--tw-hue-rotate", "--tw-invert", "--tw-saturate", "--tw-sepia", "filter", "--tw-backdrop-blur", "--tw-backdrop-brightness", "--tw-backdrop-contrast", "--tw-backdrop-grayscale", "--tw-backdrop-hue-rotate", "--tw-backdrop-invert", "--tw-backdrop-opacity", "--tw-backdrop-saturate", "--tw-backdrop-sepia", "backdrop-filter", "transition-property", "transition-behavior", "transition-delay", "transition-duration", "transition-timing-function", "will-change", "contain", "content", "forced-color-adjust"];
function Ce(t, r, { onInvalidCandidate: i, respectImportant: e } = {}) {
  let n = /* @__PURE__ */ new Map(), s = [], a = /* @__PURE__ */ new Map();
  for (let f2 of t) {
    if (r.invalidCandidates.has(f2)) {
      i?.(f2);
      continue;
    }
    let m = r.parseCandidate(f2);
    if (m.length === 0) {
      i?.(f2);
      continue;
    }
    a.set(f2, m);
  }
  let p = 0;
  (e ?? true) && (p |= 1);
  let u2 = r.getVariantOrder();
  for (let [f2, m] of a) {
    let d2 = false;
    for (let c of m) {
      let w2 = r.compileAstNodes(c, p);
      if (w2.length !== 0) {
        d2 = true;
        for (let { node: h2, propertySort: y2 } of w2) {
          let x2 = 0n;
          for (let T2 of c.variants) x2 |= 1n << BigInt(u2.get(T2));
          n.set(h2, { properties: y2, variants: x2, candidate: f2 }), s.push(h2);
        }
      }
    }
    d2 || i?.(f2);
  }
  return s.sort((f2, m) => {
    let d2 = n.get(f2), c = n.get(m);
    if (d2.variants - c.variants !== 0n) return Number(d2.variants - c.variants);
    let w2 = 0;
    for (; w2 < d2.properties.order.length && w2 < c.properties.order.length && d2.properties.order[w2] === c.properties.order[w2]; ) w2 += 1;
    return (d2.properties.order[w2] ?? 1 / 0) - (c.properties.order[w2] ?? 1 / 0) || c.properties.count - d2.properties.count || st(d2.candidate, c.candidate);
  }), { astNodes: s, nodeSorting: n };
}
function ii(t, r, i) {
  let e = Qn(t, r);
  if (e.length === 0) return [];
  let n = r.important && !!(i & 1), s = [], a = `.${ve(t.raw)}`;
  for (let p of e) {
    let u2 = Xn(p);
    (t.important || n) && ai(p);
    let f2 = { kind: "rule", selector: a, nodes: p };
    for (let m of t.variants) if (je(f2, m, r.variants) === null) return [];
    s.push({ node: f2, propertySort: u2 });
  }
  return s;
}
function je(t, r, i, e = 0) {
  if (r.kind === "arbitrary") {
    if (r.relative && e === 0) return null;
    t.nodes = [Z2(r.selector, t.nodes)];
    return;
  }
  let { applyFn: n } = i.get(r.root);
  if (r.kind === "compound") {
    let a = F2("@slot");
    if (je(a, r.variant, i, e + 1) === null || r.root === "not" && a.nodes.length > 1) return null;
    for (let u2 of a.nodes) if (u2.kind !== "rule" && u2.kind !== "at-rule" || n(u2, r) === null) return null;
    O2(a.nodes, (u2) => {
      if ((u2.kind === "rule" || u2.kind === "at-rule") && u2.nodes.length <= 0) return u2.nodes = t.nodes, E2.Skip;
    }), t.nodes = a.nodes;
    return;
  }
  if (n(t, r) === null) return null;
}
function ni(t) {
  let r = t.options?.types ?? [];
  return r.length > 1 && r.includes("any");
}
function Qn(t, r) {
  if (t.kind === "arbitrary") {
    let a = t.value;
    return t.modifier && (a = X2(a, t.modifier, r.theme)), a === null ? [] : [[l3(t.property, a)]];
  }
  let i = r.utilities.get(t.root) ?? [], e = [], n = i.filter((a) => !ni(a));
  for (let a of n) {
    if (a.kind !== t.kind) continue;
    let p = a.compileFn(t);
    if (p !== void 0) {
      if (p === null) return e;
      e.push(p);
    }
  }
  if (e.length > 0) return e;
  let s = i.filter((a) => ni(a));
  for (let a of s) {
    if (a.kind !== t.kind) continue;
    let p = a.compileFn(t);
    if (p !== void 0) {
      if (p === null) return e;
      e.push(p);
    }
  }
  return e;
}
function ai(t) {
  for (let r of t) r.kind !== "at-root" && (r.kind === "declaration" ? r.important = true : (r.kind === "rule" || r.kind === "at-rule") && ai(r.nodes));
}
function Xn(t) {
  let r = /* @__PURE__ */ new Set(), i = 0, e = t.slice(), n = false;
  for (; e.length > 0; ) {
    let s = e.shift();
    if (s.kind === "declaration") {
      if (s.value === void 0 || (i++, n)) continue;
      if (s.property === "--tw-sort") {
        let p = jt.indexOf(s.value ?? "");
        if (p !== -1) {
          r.add(p), n = true;
          continue;
        }
      }
      let a = jt.indexOf(s.property);
      a !== -1 && r.add(a);
    } else if (s.kind === "rule" || s.kind === "at-rule") for (let a of s.nodes) e.push(a);
  }
  return { order: Array.from(r).sort((s, a) => s - a), count: i };
}
function Ae(t, r) {
  let i = 0, e = Z2("&", t), n = /* @__PURE__ */ new Set(), s = new U2(() => /* @__PURE__ */ new Set()), a = new U2(() => /* @__PURE__ */ new Set());
  O2([e], (d2, c) => {
    if (d2.kind === "at-rule") {
      if (d2.name === "@keyframes") return O2(d2.nodes, (w2) => {
        if (w2.kind === "at-rule" && w2.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
      }), E2.Skip;
      if (d2.name === "@utility") {
        let w2 = d2.params.replace(/-\*$/, "");
        a.get(w2).add(d2), O2(d2.nodes, (h2) => {
          if (!(h2.kind !== "at-rule" || h2.name !== "@apply")) {
            n.add(d2);
            for (let y2 of li(h2, r)) s.get(d2).add(y2);
          }
        });
        return;
      }
      if (d2.name === "@apply") {
        if (c.parent === null) return;
        i |= 1, n.add(c.parent);
        for (let w2 of li(d2, r)) for (let h2 of c.path()) n.has(h2) && s.get(h2).add(w2);
      }
    }
  });
  let p = /* @__PURE__ */ new Set(), u2 = [], f2 = /* @__PURE__ */ new Set();
  function m(d2, c = []) {
    if (!p.has(d2)) {
      if (f2.has(d2)) {
        let w2 = c[(c.indexOf(d2) + 1) % c.length];
        throw d2.kind === "at-rule" && d2.name === "@utility" && w2.kind === "at-rule" && w2.name === "@utility" && O2(d2.nodes, (h2) => {
          if (h2.kind !== "at-rule" || h2.name !== "@apply") return;
          let y2 = h2.params.split(/\s+/g);
          for (let x2 of y2) for (let T2 of r.parseCandidate(x2)) switch (T2.kind) {
            case "arbitrary":
              break;
            case "static":
            case "functional":
              if (w2.params.replace(/-\*$/, "") === T2.root) throw new Error(`You cannot \`@apply\` the \`${x2}\` utility here because it creates a circular dependency.`);
              break;
            default:
          }
        }), new Error(`Circular dependency detected:

${re2([d2])}
Relies on:

${re2([w2])}`);
      }
      f2.add(d2);
      for (let w2 of s.get(d2)) for (let h2 of a.get(w2)) c.push(d2), m(h2, c), c.pop();
      p.add(d2), f2.delete(d2), u2.push(d2);
    }
  }
  for (let d2 of n) m(d2);
  for (let d2 of u2) "nodes" in d2 && O2(d2.nodes, (c) => {
    if (c.kind !== "at-rule" || c.name !== "@apply") return;
    let w2 = c.params.split(/(\s+)/g), h2 = {}, y2 = 0;
    for (let [x2, T2] of w2.entries()) x2 % 2 === 0 && (h2[T2] = y2), y2 += T2.length;
    {
      let x2 = Object.keys(h2), T2 = Ce(x2, r, { respectImportant: false, onInvalidCandidate: (R2) => {
        if (r.theme.prefix && !R2.startsWith(r.theme.prefix)) throw new Error(`Cannot apply unprefixed utility class \`${R2}\`. Did you mean \`${r.theme.prefix}:${R2}\`?`);
        if (r.invalidCandidates.has(R2)) throw new Error(`Cannot apply utility class \`${R2}\` because it has been explicitly disabled: https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-excluding-classes`);
        let K2 = d(R2, ":");
        if (K2.length > 1) {
          let L2 = K2.pop();
          if (r.candidatesToCss([L2])[0]) {
            let _2 = r.candidatesToCss(K2.map((q2) => `${q2}:[--tw-variant-check:1]`)), M2 = K2.filter((q2, H2) => _2[H2] === null);
            if (M2.length > 0) {
              if (M2.length === 1) throw new Error(`Cannot apply utility class \`${R2}\` because the ${M2.map((q2) => `\`${q2}\``)} variant does not exist.`);
              {
                let q2 = new Intl.ListFormat("en", { style: "long", type: "conjunction" });
                throw new Error(`Cannot apply utility class \`${R2}\` because the ${q2.format(M2.map((H2) => `\`${H2}\``))} variants do not exist.`);
              }
            }
          }
        }
        throw r.theme.size === 0 ? new Error(`Cannot apply unknown utility class \`${R2}\`. Are you using CSS modules or similar and missing \`@reference\`? https://tailwindcss.com/docs/functions-and-directives#reference-directive`) : new Error(`Cannot apply unknown utility class \`${R2}\``);
      } }), A2 = c.src, b2 = T2.astNodes.map((R2) => {
        let K2 = T2.nodeSorting.get(R2)?.candidate, L2 = K2 ? h2[K2] : void 0;
        if (R2 = te2(R2), !A2 || !K2 || L2 === void 0) return O2([R2], (M2) => {
          M2.src = A2;
        }), R2;
        let _2 = [A2[0], A2[1], A2[2]];
        return _2[1] += 7 + L2, _2[2] = _2[1] + K2.length, O2([R2], (M2) => {
          M2.src = _2;
        }), R2;
      }), j2 = [];
      for (let R2 of b2) if (R2.kind === "rule") for (let K2 of R2.nodes) j2.push(K2);
      else j2.push(R2);
      return E2.Replace(j2);
    }
  });
  return i;
}
function* li(t, r) {
  for (let i of t.params.split(/\s+/g)) for (let e of r.parseCandidate(i)) switch (e.kind) {
    case "arbitrary":
      break;
    case "static":
    case "functional":
      yield e.root;
      break;
    default:
  }
}
async function Lt(t, r, i, e = 0, n = false) {
  let s = 0, a = [];
  return O2(t, (p) => {
    if (p.kind === "at-rule" && (p.name === "@import" || p.name === "@reference")) {
      let u2 = ea(B2(p.params));
      if (u2 === null) return;
      p.name === "@reference" && (u2.media = "reference"), s |= 2;
      let { uri: f2, layer: m, media: d2, supports: c } = u2;
      if (f2.startsWith("data:") || f2.startsWith("http://") || f2.startsWith("https://")) return;
      let w2 = ce({}, []);
      return a.push((async () => {
        if (e > 100) throw new Error(`Exceeded maximum recursion depth while resolving \`${f2}\` in \`${r}\`)`);
        let h2 = await i(f2, r), y2 = $e(h2.content, { from: n ? h2.path : void 0 });
        await Lt(y2, h2.base, i, e + 1, n), w2.nodes = ta(p, [ce({ base: h2.base }, y2)], m, d2, c);
      })()), E2.ReplaceSkip(w2);
    }
  }), a.length > 0 && await Promise.all(a), s;
}
function ea(t) {
  let r, i = null, e = null, n = null;
  for (let s = 0; s < t.length; s++) {
    let a = t[s];
    if (a.kind !== "separator") {
      if (a.kind === "word" && !r) {
        if (!a.value || a.value[0] !== '"' && a.value[0] !== "'") return null;
        r = a.value.slice(1, -1);
        continue;
      }
      if (a.kind === "function" && a.value.toLowerCase() === "url" || !r) return null;
      if ((a.kind === "word" || a.kind === "function") && a.value.toLowerCase() === "layer") {
        if (i) return null;
        if (n) throw new Error("`layer(…)` in an `@import` should come before any other functions or conditions");
        "nodes" in a ? i = J2(a.nodes) : i = "";
        continue;
      }
      if (a.kind === "function" && a.value.toLowerCase() === "supports") {
        if (n) return null;
        n = J2(a.nodes);
        continue;
      }
      e = J2(t.slice(s));
      break;
    }
  }
  return r ? { uri: r, layer: i, media: e, supports: n } : null;
}
function ta(t, r, i, e, n) {
  let s = r;
  if (i !== null) {
    let a = F2("@layer", i, s);
    a.src = t.src, s = [a];
  }
  if (e !== null) {
    let a = F2("@media", e, s);
    a.src = t.src, s = [a];
  }
  if (n !== null) {
    let a = F2("@supports", n[0] === "(" ? n : `(${n})`, s);
    a.src = t.src, s = [a];
  }
  return s;
}
function Le(t) {
  if (Object.prototype.toString.call(t) !== "[object Object]") return false;
  let r = Object.getPrototypeOf(t);
  return r === null || Object.getPrototypeOf(r) === null;
}
function Ze(t, r, i, e = []) {
  for (let n of r) if (n != null) for (let s of Reflect.ownKeys(n)) {
    e.push(s);
    let a = i(t[s], n[s], e);
    a !== void 0 ? t[s] = a : !Le(t[s]) || !Le(n[s]) ? t[s] = n[s] : t[s] = Ze({}, [t[s], n[s]], i, e), e.pop();
  }
  return t;
}
function mt(t, r, i) {
  return function(n, s) {
    let a = n.lastIndexOf("/"), p = null;
    a !== -1 && (p = n.slice(a + 1).trim(), n = n.slice(0, a).trim());
    let u2 = (() => {
      let f2 = Ee(n), [m, d2] = ra(t.theme, f2), c = i(oi(r() ?? {}, f2) ?? null);
      if (typeof c == "string" && (c = c.replace("<alpha-value>", "1")), typeof m != "object") return typeof d2 != "object" && d2 & 4 ? c ?? m : m;
      if (c !== null && typeof c == "object" && !Array.isArray(c)) {
        let w2 = Ze({}, [c], (h2, y2) => y2);
        if (m === null && Object.hasOwn(c, "__CSS_VALUES__")) {
          let h2 = {};
          for (let y2 in c.__CSS_VALUES__) h2[y2] = c[y2], delete w2[y2];
          m = h2;
        }
        for (let h2 in m) h2 !== "__CSS_VALUES__" && (c?.__CSS_VALUES__?.[h2] & 4 && oi(w2, h2.split("-")) !== void 0 || (w2[Ve(h2)] = m[h2]));
        return w2;
      }
      if (Array.isArray(m) && Array.isArray(d2) && Array.isArray(c)) {
        let w2 = m[0], h2 = m[1];
        d2[0] & 4 && (w2 = c[0] ?? w2);
        for (let y2 of Object.keys(h2)) d2[1][y2] & 4 && (h2[y2] = c[1][y2] ?? h2[y2]);
        return [w2, h2];
      }
      return m ?? c;
    })();
    return p && typeof u2 == "string" && (u2 = Q2(u2, p)), u2 ?? s;
  };
}
function ra(t, r) {
  if (r.length === 1 && r[0].startsWith("--")) return [t.get([r[0]]), t.getOptions(r[0])];
  let i = Ie(r), e = /* @__PURE__ */ new Map(), n = new U2(() => /* @__PURE__ */ new Map()), s = t.namespace(`--${i}`);
  if (s.size === 0) return [null, 0];
  let a = /* @__PURE__ */ new Map();
  for (let [m, d2] of s) {
    if (!m || !m.includes("--")) {
      e.set(m, d2), a.set(m, t.getOptions(m ? `--${i}-${m}` : `--${i}`));
      continue;
    }
    let c = m.indexOf("--"), w2 = m.slice(0, c), h2 = m.slice(c + 2);
    h2 = h2.replace(/-([a-z])/g, (y2, x2) => x2.toUpperCase()), n.get(w2 === "" ? null : w2).set(h2, [d2, t.getOptions(`--${i}${m}`)]);
  }
  let p = t.getOptions(`--${i}`);
  for (let [m, d2] of n) {
    let c = e.get(m);
    if (typeof c != "string") continue;
    let w2 = {}, h2 = {};
    for (let [y2, [x2, T2]] of d2) w2[y2] = x2, h2[y2] = T2;
    e.set(m, [c, w2]), a.set(m, [p, h2]);
  }
  let u2 = {}, f2 = {};
  for (let [m, d2] of e) si(u2, [m ?? "DEFAULT"], d2);
  for (let [m, d2] of a) si(f2, [m ?? "DEFAULT"], d2);
  return r[r.length - 1] === "DEFAULT" ? [u2?.DEFAULT ?? null, f2.DEFAULT ?? 0] : "DEFAULT" in u2 && Object.keys(u2).length === 1 ? [u2.DEFAULT, f2.DEFAULT ?? 0] : (u2.__CSS_VALUES__ = f2, [u2, f2]);
}
function oi(t, r) {
  for (let i = 0; i < r.length; ++i) {
    let e = r[i];
    if (t?.[e] === void 0) {
      if (r[i + 1] === void 0) return;
      r[i + 1] = `${e}-${r[i + 1]}`;
      continue;
    }
    if (typeof t == "string") return;
    t = t[e];
  }
  return t;
}
function si(t, r, i) {
  for (let e of r.slice(0, -1)) t[e] === void 0 && (t[e] = {}), t = t[e];
  t[r[r.length - 1]] = i;
}
var ui = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function Mt({ designSystem: t, ast: r, resolvedConfig: i, featuresRef: e, referenceMode: n, src: s }) {
  let a = { addBase(p) {
    if (n) return;
    let u2 = pe2(p);
    e.current |= Ke(u2, t);
    let f2 = F2("@layer", "base", u2);
    O2([f2], (m) => {
      m.src = s;
    }), r.push(f2);
  }, addVariant(p, u2) {
    if (!dt.test(p)) throw new Error(`\`addVariant('${p}')\` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number.`);
    if (typeof u2 == "string") {
      if (u2.includes(":merge(")) return;
    } else if (Array.isArray(u2)) {
      if (u2.some((m) => m.includes(":merge("))) return;
    } else if (typeof u2 == "object") {
      let m = function(d2, c) {
        return Object.entries(d2).some(([w2, h2]) => w2.includes(c) || typeof h2 == "object" && m(h2, c));
      };
      var f2 = m;
      if (m(u2, ":merge(")) return;
    }
    typeof u2 == "string" || Array.isArray(u2) ? t.variants.static(p, (m) => {
      m.nodes = fi(u2, m.nodes);
    }, { compounds: Re(typeof u2 == "string" ? [u2] : u2) }) : typeof u2 == "object" && t.variants.fromAst(p, pe2(u2), t);
  }, matchVariant(p, u2, f2) {
    function m(c, w2, h2) {
      let y2 = u2(c, { modifier: w2?.value ?? null });
      return fi(y2, h2);
    }
    try {
      let c = u2("a", { modifier: null });
      if (typeof c == "string" && c.includes(":merge(")) return;
      if (Array.isArray(c) && c.some((w2) => w2.includes(":merge("))) return;
    } catch {
    }
    let d2 = Object.keys(f2?.values ?? {});
    t.variants.group(() => {
      t.variants.functional(p, (c, w2) => {
        if (!w2.value) {
          if (f2?.values && "DEFAULT" in f2.values) {
            c.nodes = m(f2.values.DEFAULT, w2.modifier, c.nodes);
            return;
          }
          return null;
        }
        if (w2.value.kind === "arbitrary") c.nodes = m(w2.value.value, w2.modifier, c.nodes);
        else if (w2.value.kind === "named" && f2?.values) {
          let h2 = f2.values[w2.value.value];
          if (typeof h2 != "string") return null;
          c.nodes = m(h2, w2.modifier, c.nodes);
        } else return null;
      });
    }, (c, w2) => {
      if (c.kind !== "functional" || w2.kind !== "functional") return 0;
      let h2 = c.value ? c.value.value : "DEFAULT", y2 = w2.value ? w2.value.value : "DEFAULT", x2 = f2?.values?.[h2] ?? h2, T2 = f2?.values?.[y2] ?? y2;
      if (f2 && typeof f2.sort == "function") return f2.sort({ value: x2, modifier: c.modifier?.value ?? null }, { value: T2, modifier: w2.modifier?.value ?? null });
      let A2 = d2.indexOf(h2), b2 = d2.indexOf(y2);
      return A2 = A2 === -1 ? d2.length : A2, b2 = b2 === -1 ? d2.length : b2, A2 !== b2 ? A2 - b2 : x2 < T2 ? -1 : 1;
    }), t.variants.suggest(p, () => Object.keys(f2?.values ?? {}).filter((c) => c !== "DEFAULT"));
  }, addUtilities(p) {
    p = Array.isArray(p) ? p : [p];
    let u2 = p.flatMap((m) => Object.entries(m));
    u2 = u2.flatMap(([m, d2]) => d(m, ",").map((c) => [c.trim(), d2]));
    let f2 = new U2(() => []);
    for (let [m, d2] of u2) {
      if (m.startsWith("@keyframes ")) {
        if (!n) {
          let h2 = Z2(m, pe2(d2));
          O2([h2], (y2) => {
            y2.src = s;
          }), r.push(h2);
        }
        continue;
      }
      let c = be2(m), w2 = false;
      if (O2(c, (h2) => {
        if (h2.kind === "selector" && h2.value[0] === "." && ui.test(h2.value.slice(1))) {
          let y2 = h2.value;
          h2.value = "&";
          let x2 = se(c), T2 = y2.slice(1), A2 = x2 === "&" ? pe2(d2) : [Z2(x2, pe2(d2))];
          f2.get(T2).push(...A2), w2 = true, h2.value = y2;
          return;
        }
        if (h2.kind === "function" && h2.value === ":not") return E2.Skip;
      }), !w2) throw new Error(`\`addUtilities({ '${m}' : … })\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \`.scrollbar-none\`.`);
    }
    for (let [m, d2] of f2) t.theme.prefix && O2(d2, (c) => {
      if (c.kind === "rule") {
        let w2 = be2(c.selector);
        O2(w2, (h2) => {
          h2.kind === "selector" && h2.value[0] === "." && (h2.value = `.${t.theme.prefix}\\:${h2.value.slice(1)}`);
        }), c.selector = se(w2);
      }
    }), t.utilities.static(m, (c) => {
      let w2 = d2.map(te2);
      return ci(w2, m, c.raw), e.current |= Ae(w2, t), w2;
    });
  }, matchUtilities(p, u2) {
    let f2 = u2?.type ? Array.isArray(u2?.type) ? u2.type : [u2.type] : ["any"];
    for (let [d2, c] of Object.entries(p)) {
      let w2 = function({ negative: h2 }) {
        return (y2) => {
          if (y2.value?.kind === "arbitrary" && f2.length > 0 && !f2.includes("any") && (y2.value.dataType && !f2.includes(y2.value.dataType) || !y2.value.dataType && !me(y2.value.value, f2))) return;
          let x2 = f2.includes("color"), T2 = null, A2 = false;
          {
            let R2 = u2?.values ?? {};
            x2 && (R2 = Object.assign({ inherit: "inherit", transparent: "transparent", current: "currentcolor" }, R2)), y2.value ? y2.value.kind === "arbitrary" ? T2 = y2.value.value : y2.value.fraction && R2[y2.value.fraction] ? (T2 = R2[y2.value.fraction], A2 = true) : R2[y2.value.value] ? T2 = R2[y2.value.value] : R2.__BARE_VALUE__ && (T2 = R2.__BARE_VALUE__(y2.value) ?? null, A2 = (y2.value.fraction !== null && T2?.includes("/")) ?? false) : T2 = R2.DEFAULT ?? null;
          }
          if (T2 === null) return;
          let b2;
          {
            let R2 = u2?.modifiers ?? null;
            y2.modifier ? R2 === "any" || y2.modifier.kind === "arbitrary" ? b2 = y2.modifier.value : R2?.[y2.modifier.value] ? b2 = R2[y2.modifier.value] : x2 && !Number.isNaN(Number(y2.modifier.value)) ? b2 = `${y2.modifier.value}%` : b2 = null : b2 = null;
          }
          if (y2.modifier && b2 === null && !A2) return y2.value?.kind === "arbitrary" ? null : void 0;
          x2 && b2 !== null && (T2 = Q2(T2, b2)), h2 && (T2 = `calc(${T2} * -1)`);
          let j2 = pe2(c(T2, { modifier: b2 }));
          return ci(j2, d2, y2.raw), e.current |= Ae(j2, t), j2;
        };
      };
      var m = w2;
      if (!ui.test(d2)) throw new Error(`\`matchUtilities({ '${d2}' : … })\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. \`scrollbar\`.`);
      u2?.supportsNegativeValues && t.utilities.functional(`-${d2}`, w2({ negative: true }), { types: f2 }), t.utilities.functional(d2, w2({ negative: false }), { types: f2 }), t.utilities.suggest(d2, () => {
        let h2 = u2?.values ?? {}, y2 = new Set(Object.keys(h2));
        y2.delete("__BARE_VALUE__"), y2.delete("__CSS_VALUES__"), y2.has("DEFAULT") && (y2.delete("DEFAULT"), y2.add(null));
        let x2 = u2?.modifiers ?? {}, T2 = x2 === "any" ? [] : Object.keys(x2);
        return [{ supportsNegative: u2?.supportsNegativeValues ?? false, values: Array.from(y2), modifiers: T2 }];
      });
    }
  }, addComponents(p, u2) {
    this.addUtilities(p, u2);
  }, matchComponents(p, u2) {
    this.matchUtilities(p, u2);
  }, theme: mt(t, () => i.theme ?? {}, (p) => p), prefix(p) {
    return p;
  }, config(p, u2) {
    let f2 = i;
    if (!p) return f2;
    let m = Ee(p);
    for (let d2 = 0; d2 < m.length; ++d2) {
      let c = m[d2];
      if (f2[c] === void 0) return u2;
      f2 = f2[c];
    }
    return f2 ?? u2;
  } };
  return a.addComponents = a.addComponents.bind(a), a.matchComponents = a.matchComponents.bind(a), a;
}
function pe2(t) {
  let r = [];
  t = Array.isArray(t) ? t : [t];
  let i = t.flatMap((e) => Object.entries(e));
  for (let [e, n] of i) if (n != null && n !== false) if (typeof n != "object") {
    if (!e.startsWith("--")) {
      if (n === "@slot") {
        r.push(Z2(e, [F2("@slot")]));
        continue;
      }
      e = e.replace(/([A-Z])/g, "-$1").toLowerCase();
    }
    r.push(l3(e, String(n)));
  } else if (Array.isArray(n)) for (let s of n) typeof s == "string" ? r.push(l3(e, s)) : r.push(Z2(e, pe2(s)));
  else r.push(Z2(e, pe2(n)));
  return r;
}
function fi(t, r) {
  return (typeof t == "string" ? [t] : t).flatMap((e) => {
    if (e.trim().endsWith("}")) {
      let n = e.replace("}", "{@slot}}"), s = $e(n);
      return Ut(s, r), s;
    } else return Z2(e, r);
  });
}
function ci(t, r, i) {
  O2(t, (e) => {
    if (e.kind === "rule") {
      let n = be2(e.selector);
      O2(n, (s) => {
        s.kind === "selector" && s.value === `.${r}` && (s.value = `.${ve(i)}`);
      }), e.selector = se(n);
    }
  });
}
function pi(t, r) {
  for (let i of ia(r)) t.theme.addKeyframes(i);
}
function ia(t) {
  let r = [];
  if ("keyframes" in t.theme) for (let [i, e] of Object.entries(t.theme.keyframes)) r.push(F2("@keyframes", i, pe2(e)));
  return r;
}
function di(t) {
  return { theme: { ...be, colors: ({ theme: r }) => r("color", {}), extend: { fontSize: ({ theme: r }) => ({ ...r("text", {}) }), boxShadow: ({ theme: r }) => ({ ...r("shadow", {}) }), animation: ({ theme: r }) => ({ ...r("animate", {}) }), aspectRatio: ({ theme: r }) => ({ ...r("aspect", {}) }), borderRadius: ({ theme: r }) => ({ ...r("radius", {}) }), screens: ({ theme: r }) => ({ ...r("breakpoint", {}) }), letterSpacing: ({ theme: r }) => ({ ...r("tracking", {}) }), lineHeight: ({ theme: r }) => ({ ...r("leading", {}) }), transitionDuration: { DEFAULT: t.get(["--default-transition-duration"]) ?? null }, transitionTimingFunction: { DEFAULT: t.get(["--default-transition-timing-function"]) ?? null }, maxWidth: ({ theme: r }) => ({ ...r("container", {}) }) } } };
}
var na = { blocklist: [], future: {}, prefix: "", important: false, darkMode: null, theme: {}, plugins: [], content: { files: [] } };
function Ft(t, r) {
  let i = { design: t, configs: [], plugins: [], content: { files: [] }, theme: {}, extend: {}, result: structuredClone(na) };
  for (let n of r) zt(i, n);
  for (let n of i.configs) "darkMode" in n && n.darkMode !== void 0 && (i.result.darkMode = n.darkMode ?? null), "prefix" in n && n.prefix !== void 0 && (i.result.prefix = n.prefix ?? ""), "blocklist" in n && n.blocklist !== void 0 && (i.result.blocklist = n.blocklist ?? []), "important" in n && n.important !== void 0 && (i.result.important = n.important ?? false);
  let e = la(i);
  return { resolvedConfig: { ...i.result, content: i.content, theme: i.theme, plugins: i.plugins }, replacedThemeKeys: e };
}
function aa(t, r) {
  if (Array.isArray(t) && Le(t[0])) return t.concat(r);
  if (Array.isArray(r) && Le(r[0]) && Le(t)) return [t, ...r];
  if (Array.isArray(r)) return r;
}
function zt(t, { config: r, base: i, path: e, reference: n, src: s }) {
  let a = [];
  for (let f2 of r.plugins ?? []) "__isOptionsFunction" in f2 ? a.push({ ...f2(), reference: n, src: s }) : "handler" in f2 ? a.push({ ...f2, reference: n, src: s }) : a.push({ handler: f2, reference: n, src: s });
  if (Array.isArray(r.presets) && r.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
  for (let f2 of r.presets ?? []) zt(t, { path: e, base: i, config: f2, reference: n, src: s });
  for (let f2 of a) t.plugins.push(f2), f2.config && zt(t, { path: e, base: i, config: f2.config, reference: !!f2.reference, src: f2.src ?? s });
  let p = r.content ?? [], u2 = Array.isArray(p) ? p : p.files;
  for (let f2 of u2) t.content.files.push(typeof f2 == "object" ? f2 : { base: i, pattern: f2 });
  t.configs.push(r);
}
function la(t) {
  let r = /* @__PURE__ */ new Set(), i = mt(t.design, () => t.theme, n), e = Object.assign(i, { theme: i, colors: l });
  function n(s) {
    return typeof s == "function" ? s(e) ?? null : s ?? null;
  }
  for (let s of t.configs) {
    let a = s.theme ?? {}, p = a.extend ?? {};
    for (let u2 in a) u2 !== "extend" && r.add(u2);
    Object.assign(t.theme, a);
    for (let u2 in p) t.extend[u2] ??= [], t.extend[u2].push(p[u2]);
  }
  delete t.theme.extend;
  for (let s in t.extend) {
    let a = [t.theme[s], ...t.extend[s]];
    t.theme[s] = () => {
      let p = a.map(n);
      return Ze({}, p, aa);
    };
  }
  for (let s in t.theme) t.theme[s] = n(t.theme[s]);
  if (t.theme.screens && typeof t.theme.screens == "object") for (let s of Object.keys(t.theme.screens)) {
    let a = t.theme.screens[s];
    a && typeof a == "object" && ("raw" in a || "max" in a || "min" in a && (t.theme.screens[s] = a.min));
  }
  return r;
}
function mi(t, r) {
  let i = t.theme.container || {};
  if (typeof i != "object" || i === null) return;
  let e = oa(i, r);
  e.length !== 0 && r.utilities.static("container", () => e.map(te2));
}
function oa({ center: t, padding: r, screens: i }, e) {
  let n = [], s = null;
  if (t && n.push(l3("margin-inline", "auto")), (typeof r == "string" || typeof r == "object" && r !== null && "DEFAULT" in r) && n.push(l3("padding-inline", typeof r == "string" ? r : r.DEFAULT)), typeof i == "object" && i !== null) {
    s = /* @__PURE__ */ new Map();
    let a = Array.from(e.theme.namespace("--breakpoint").entries());
    if (a.sort((p, u2) => Te(p[1], u2[1], "asc")), a.length > 0) {
      let [p] = a[0];
      n.push(F2("@media", `(width >= --theme(--breakpoint-${p}))`, [l3("max-width", "none")]));
    }
    for (let [p, u2] of Object.entries(i)) {
      if (typeof u2 == "object") if ("min" in u2) u2 = u2.min;
      else continue;
      s.set(p, F2("@media", `(width >= ${u2})`, [l3("max-width", u2)]));
    }
  }
  if (typeof r == "object" && r !== null) {
    let a = Object.entries(r).filter(([p]) => p !== "DEFAULT").map(([p, u2]) => [p, e.theme.resolveValue(p, ["--breakpoint"]), u2]).filter(Boolean);
    a.sort((p, u2) => Te(p[1], u2[1], "asc"));
    for (let [p, , u2] of a) if (s && s.has(p)) s.get(p).nodes.push(l3("padding-inline", u2));
    else {
      if (s) continue;
      n.push(F2("@media", `(width >= theme(--breakpoint-${p}))`, [l3("padding-inline", u2)]));
    }
  }
  if (s) for (let [, a] of s) n.push(a);
  return n;
}
function gi({ addVariant: t, config: r }) {
  let i = r("darkMode", null), [e, n = ".dark"] = Array.isArray(i) ? i : [i];
  if (e === "variant") {
    let s;
    if (Array.isArray(n) || typeof n == "function" ? s = n : typeof n == "string" && (s = [n]), Array.isArray(s)) for (let a of s) a === ".dark" ? (e = false, console.warn('When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: ["variant", ".your-selector &"]`')) : a.includes("&") || (e = false, console.warn('When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: ["variant", ".your-selector &"]`'));
    n = s;
  }
  e === null || (e === "selector" ? t("dark", `&:where(${n}, ${n} *)`) : e === "media" ? t("dark", "@media (prefers-color-scheme: dark)") : e === "variant" ? t("dark", n) : e === "class" && t("dark", `&:is(${n} *)`));
}
function hi(t) {
  for (let [r, i] of [["t", "top"], ["tr", "top right"], ["r", "right"], ["br", "bottom right"], ["b", "bottom"], ["bl", "bottom left"], ["l", "left"], ["tl", "top left"]]) t.utilities.static(`bg-gradient-to-${r}`, () => [l3("--tw-gradient-position", `to ${i} in oklab`), l3("background-image", "linear-gradient(var(--tw-gradient-stops))")]);
  t.utilities.static("bg-left-top", () => [l3("background-position", "left top")]), t.utilities.static("bg-right-top", () => [l3("background-position", "right top")]), t.utilities.static("bg-left-bottom", () => [l3("background-position", "left bottom")]), t.utilities.static("bg-right-bottom", () => [l3("background-position", "right bottom")]), t.utilities.static("object-left-top", () => [l3("object-position", "left top")]), t.utilities.static("object-right-top", () => [l3("object-position", "right top")]), t.utilities.static("object-left-bottom", () => [l3("object-position", "left bottom")]), t.utilities.static("object-right-bottom", () => [l3("object-position", "right bottom")]), t.utilities.functional("max-w-screen", (r) => {
    if (!r.value || r.value.kind === "arbitrary") return;
    let i = t.theme.resolve(r.value.value, ["--breakpoint"]);
    if (i) return [l3("max-width", i)];
  }), t.utilities.static("overflow-ellipsis", () => [l3("text-overflow", "ellipsis")]), t.utilities.static("decoration-slice", () => [l3("-webkit-box-decoration-break", "slice"), l3("box-decoration-break", "slice")]), t.utilities.static("decoration-clone", () => [l3("-webkit-box-decoration-break", "clone"), l3("box-decoration-break", "clone")]), t.utilities.functional("flex-shrink", (r) => {
    if (!r.modifier) {
      if (!r.value) return [l3("flex-shrink", "1")];
      if (r.value.kind === "arbitrary") return [l3("flex-shrink", r.value.value)];
      if (u(r.value.value)) return [l3("flex-shrink", r.value.value)];
    }
  }), t.utilities.functional("flex-grow", (r) => {
    if (!r.modifier) {
      if (!r.value) return [l3("flex-grow", "1")];
      if (r.value.kind === "arbitrary") return [l3("flex-grow", r.value.value)];
      if (u(r.value.value)) return [l3("flex-grow", r.value.value)];
    }
  }), t.utilities.static("order-none", () => [l3("order", "0")]), t.utilities.static("break-words", () => [l3("overflow-wrap", "break-word")]);
}
function vi(t, r) {
  let i = t.theme.screens || {}, e = r.variants.get("min")?.order ?? 0, n = [];
  for (let [a, p] of Object.entries(i)) {
    let c = function(w2) {
      r.variants.static(a, (h2) => {
        h2.nodes = [F2("@media", d2, h2.nodes)];
      }, { order: w2 });
    };
    var s = c;
    let u2 = r.variants.get(a), f2 = r.theme.resolveValue(a, ["--breakpoint"]);
    if (u2 && f2 && !r.theme.hasDefault(`--breakpoint-${a}`)) continue;
    let m = true;
    typeof p == "string" && (m = false);
    let d2 = sa(p);
    m ? n.push(c) : c(e);
  }
  if (n.length !== 0) {
    for (let [, a] of r.variants.variants) a.order > e && (a.order += n.length);
    r.variants.compareFns = new Map(Array.from(r.variants.compareFns).map(([a, p]) => (a > e && (a += n.length), [a, p])));
    for (let [a, p] of n.entries()) p(e + a + 1);
  }
}
function sa(t) {
  return (Array.isArray(t) ? t : [t]).map((i) => typeof i == "string" ? { min: i } : i && typeof i == "object" ? i : null).map((i) => {
    if (i === null) return null;
    if ("raw" in i) return i.raw;
    let e = "";
    return i.max !== void 0 && (e += `${i.max} >= `), e += "width", i.min !== void 0 && (e += ` >= ${i.min}`), `(${e})`;
  }).filter(Boolean).join(", ");
}
function wi(t, r) {
  let i = t.theme.aria || {}, e = t.theme.supports || {}, n = t.theme.data || {};
  if (Object.keys(i).length > 0) {
    let s = r.variants.get("aria"), a = s?.applyFn, p = s?.compounds;
    r.variants.functional("aria", (u2, f2) => {
      let m = f2.value;
      return m && m.kind === "named" && m.value in i ? a?.(u2, { ...f2, value: { kind: "arbitrary", value: i[m.value] } }) : a?.(u2, f2);
    }, { compounds: p });
  }
  if (Object.keys(e).length > 0) {
    let s = r.variants.get("supports"), a = s?.applyFn, p = s?.compounds;
    r.variants.functional("supports", (u2, f2) => {
      let m = f2.value;
      return m && m.kind === "named" && m.value in e ? a?.(u2, { ...f2, value: { kind: "arbitrary", value: e[m.value] } }) : a?.(u2, f2);
    }, { compounds: p });
  }
  if (Object.keys(n).length > 0) {
    let s = r.variants.get("data"), a = s?.applyFn, p = s?.compounds;
    r.variants.functional("data", (u2, f2) => {
      let m = f2.value;
      return m && m.kind === "named" && m.value in n ? a?.(u2, { ...f2, value: { kind: "arbitrary", value: n[m.value] } }) : a?.(u2, f2);
    }, { compounds: p });
  }
}
var ua = /^[a-z]+$/;
async function ki({ designSystem: t, base: r, ast: i, loadModule: e, sources: n }) {
  let s = 0, a = [], p = [];
  O2(i, (d2, c) => {
    if (d2.kind !== "at-rule") return;
    let w2 = qe(c);
    if (d2.name === "@plugin") {
      if (w2.parent !== null) throw new Error("`@plugin` cannot be nested.");
      let h2 = d2.params.slice(1, -1);
      if (h2.length === 0) throw new Error("`@plugin` must have a path.");
      let y2 = {};
      for (let x2 of d2.nodes ?? []) {
        if (x2.kind !== "declaration") throw new Error(`Unexpected \`@plugin\` option:

${re2([x2])}

\`@plugin\` options must be a flat list of declarations.`);
        if (x2.value === void 0) continue;
        let T2 = x2.value, A2 = d(T2, ",").map((b2) => {
          if (b2 = b2.trim(), b2 === "null") return null;
          if (b2 === "true") return true;
          if (b2 === "false") return false;
          if (Number.isNaN(Number(b2))) {
            if (b2[0] === '"' && b2[b2.length - 1] === '"' || b2[0] === "'" && b2[b2.length - 1] === "'") return b2.slice(1, -1);
            if (b2[0] === "{" && b2[b2.length - 1] === "}") throw new Error(`Unexpected \`@plugin\` option: Value of declaration \`${re2([x2]).trim()}\` is not supported.

Using an object as a plugin option is currently only supported in JavaScript configuration files.`);
          } else return Number(b2);
          return b2;
        });
        y2[x2.property] = A2.length === 1 ? A2[0] : A2;
      }
      return a.push([{ id: h2, base: w2.context.base, reference: !!w2.context.reference, src: d2.src }, Object.keys(y2).length > 0 ? y2 : null]), s |= 4, E2.Replace([]);
    }
    if (d2.name === "@config") {
      if (d2.nodes.length > 0) throw new Error("`@config` cannot have a body.");
      if (w2.parent !== null) throw new Error("`@config` cannot be nested.");
      return p.push({ id: d2.params.slice(1, -1), base: w2.context.base, reference: !!w2.context.reference, src: d2.src }), s |= 4, E2.Replace([]);
    }
  }), hi(t);
  let u2 = t.resolveThemeValue;
  if (t.resolveThemeValue = function(c, w2) {
    return c.startsWith("--") ? u2(c, w2) : (s |= yi({ designSystem: t, base: r, ast: i, sources: n, configs: [], pluginDetails: [] }), t.resolveThemeValue(c, w2));
  }, !a.length && !p.length) return 0;
  let [f2, m] = await Promise.all([Promise.all(p.map(async ({ id: d2, base: c, reference: w2, src: h2 }) => {
    let y2 = await e(d2, c, "config");
    return { path: d2, base: y2.base, config: y2.module, reference: w2, src: h2 };
  })), Promise.all(a.map(async ([{ id: d2, base: c, reference: w2, src: h2 }, y2]) => {
    let x2 = await e(d2, c, "plugin");
    return { path: d2, base: x2.base, plugin: x2.module, options: y2, reference: w2, src: h2 };
  }))]);
  return s |= yi({ designSystem: t, base: r, ast: i, sources: n, configs: f2, pluginDetails: m }), s;
}
function yi({ designSystem: t, base: r, ast: i, sources: e, configs: n, pluginDetails: s }) {
  let a = 0, u2 = [...s.map((y2) => {
    if (!y2.options) return { config: { plugins: [y2.plugin] }, base: y2.base, reference: y2.reference, src: y2.src };
    if ("__isOptionsFunction" in y2.plugin) return { config: { plugins: [y2.plugin(y2.options)] }, base: y2.base, reference: y2.reference, src: y2.src };
    throw new Error(`The plugin "${y2.path}" does not accept options`);
  }), ...n], { resolvedConfig: f2 } = Ft(t, [{ config: di(t.theme), base: r, reference: true, src: void 0 }, ...u2, { config: { plugins: [gi] }, base: r, reference: true, src: void 0 }]), { resolvedConfig: m, replacedThemeKeys: d2 } = Ft(t, u2), c = { designSystem: t, ast: i, resolvedConfig: f2, featuresRef: { set current(y2) {
    a |= y2;
  } } }, w2 = Mt({ ...c, referenceMode: false, src: void 0 }), h2 = t.resolveThemeValue;
  t.resolveThemeValue = function(x2, T2) {
    if (x2[0] === "-" && x2[1] === "-") return h2(x2, T2);
    let A2 = w2.theme(x2, void 0);
    if (Array.isArray(A2) && A2.length === 2) return A2[0];
    if (Array.isArray(A2)) return A2.join(", ");
    if (typeof A2 == "object" && A2 !== null && "DEFAULT" in A2) return A2.DEFAULT;
    if (typeof A2 == "string") return A2;
  };
  for (let { handler: y2, reference: x2, src: T2 } of f2.plugins) {
    let A2 = Mt({ ...c, referenceMode: x2 ?? false, src: T2 });
    y2(A2);
  }
  if (Pr(t, m, d2), pi(t, m), wi(m, t), vi(m, t), mi(m, t), !t.theme.prefix && f2.prefix) {
    if (f2.prefix.endsWith("-") && (f2.prefix = f2.prefix.slice(0, -1), console.warn(`The prefix "${f2.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing \`-\` to silence this warning.`)), !ua.test(f2.prefix)) throw new Error(`The prefix "${f2.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
    t.theme.prefix = f2.prefix;
  }
  if (!t.important && f2.important === true && (t.important = true), typeof f2.important == "string") {
    let y2 = f2.important;
    O2(i, (x2, T2) => {
      if (x2.kind !== "at-rule" || x2.name !== "@tailwind" || x2.params !== "utilities") return;
      let A2 = qe(T2);
      return A2.parent?.kind === "rule" && A2.parent.selector === y2 ? E2.Stop : E2.ReplaceStop(G2(y2, [x2]));
    });
  }
  for (let y2 of f2.blocklist) t.invalidCandidates.add(y2);
  for (let y2 of f2.content.files) {
    if ("raw" in y2) throw new Error(`Error in the config file/plugin/preset. The \`content\` key contains a \`raw\` entry:

${JSON.stringify(y2, null, 2)}

This feature is not currently supported.`);
    let x2 = false;
    y2.pattern[0] == "!" && (x2 = true, y2.pattern = y2.pattern.slice(1)), e.push({ ...y2, negated: x2 });
  }
  return a;
}
function bi(t) {
  let r = [0];
  for (let n = 0; n < t.length; n++) t.charCodeAt(n) === 10 && r.push(n + 1);
  function i(n) {
    let s = 0, a = r.length;
    for (; a > 0; ) {
      let u2 = (a | 0) >> 1, f2 = s + u2;
      r[f2] <= n ? (s = f2 + 1, a = a - u2 - 1) : a = u2;
    }
    s -= 1;
    let p = n - r[s];
    return { line: s + 1, column: p };
  }
  function e({ line: n, column: s }) {
    n -= 1, n = Math.min(Math.max(n, 0), r.length - 1);
    let a = r[n], p = r[n + 1] ?? a;
    return Math.min(Math.max(a + s, 0), p);
  }
  return { find: i, findOffset: e };
}
function xi({ ast: t }) {
  let r = new U2((n) => bi(n.code)), i = new U2((n) => ({ url: n.file, content: n.code, ignore: false })), e = { file: null, sources: [], mappings: [] };
  O2(t, (n) => {
    if (!n.src || !n.dst) return;
    let s = i.get(n.src[0]);
    if (!s.content) return;
    let a = r.get(n.src[0]), p = r.get(n.dst[0]), u2 = s.content.slice(n.src[1], n.src[2]), f2 = 0;
    for (let c of u2.split(`
`)) {
      if (c.trim() !== "") {
        let w2 = a.find(n.src[1] + f2), h2 = p.find(n.dst[1]);
        e.mappings.push({ name: null, originalPosition: { source: s, ...w2 }, generatedPosition: h2 });
      }
      f2 += c.length, f2 += 1;
    }
    let m = a.find(n.src[2]), d2 = p.find(n.dst[2]);
    e.mappings.push({ name: null, originalPosition: { source: s, ...m }, generatedPosition: d2 });
  });
  for (let n of r.keys()) e.sources.push(i.get(n));
  return e.mappings.sort((n, s) => n.generatedPosition.line - s.generatedPosition.line || n.generatedPosition.column - s.generatedPosition.column || (n.originalPosition?.line ?? 0) - (s.originalPosition?.line ?? 0) || (n.originalPosition?.column ?? 0) - (s.originalPosition?.column ?? 0)), e;
}
var Ai = /^(-?\d+)\.\.(-?\d+)(?:\.\.(-?\d+))?$/;
function gt(t) {
  let r = t.indexOf("{");
  if (r === -1) return [t];
  let i = [], e = t.slice(0, r), n = t.slice(r), s = 0, a = n.lastIndexOf("}");
  for (let d2 = 0; d2 < n.length; d2++) {
    let c = n[d2];
    if (c === "{") s++;
    else if (c === "}" && (s--, s === 0)) {
      a = d2;
      break;
    }
  }
  if (a === -1) throw new Error(`The pattern \`${t}\` is not balanced.`);
  let p = n.slice(1, a), u2 = n.slice(a + 1), f2;
  fa(p) ? f2 = ca(p) : f2 = d(p, ","), f2 = f2.flatMap((d2) => gt(d2));
  let m = gt(u2);
  for (let d2 of m) for (let c of f2) i.push(e + c + d2);
  return i;
}
function fa(t) {
  return Ai.test(t);
}
function ca(t) {
  let r = t.match(Ai);
  if (!r) return [t];
  let [, i, e, n] = r, s = n ? parseInt(n, 10) : void 0, a = [];
  if (/^-?\d+$/.test(i) && /^-?\d+$/.test(e)) {
    let p = parseInt(i, 10), u2 = parseInt(e, 10);
    if (s === void 0 && (s = p <= u2 ? 1 : -1), s === 0) throw new Error("Step cannot be zero in sequence expansion.");
    let f2 = p < u2;
    f2 && s < 0 && (s = -s), !f2 && s > 0 && (s = -s);
    for (let m = p; f2 ? m <= u2 : m >= u2; m += s) a.push(m.toString());
  }
  return a;
}
function Ci(t, r) {
  let i = /* @__PURE__ */ new Set(), e = /* @__PURE__ */ new Set(), n = [];
  function s(a, p = []) {
    if (t.has(a) && !i.has(a)) {
      e.has(a) && r.onCircularDependency?.(p, a), e.add(a);
      for (let u2 of t.get(a) ?? []) p.push(a), s(u2, p), p.pop();
      i.add(a), e.delete(a), n.push(a);
    }
  }
  for (let a of t.keys()) s(a);
  return n;
}
var pa = /^[a-z]+$/;
var Ct = ((n) => (n[n.None = 0] = "None", n[n.AtProperty = 1] = "AtProperty", n[n.ColorMix = 2] = "ColorMix", n[n.All = 3] = "All", n))(Ct || {});
function da() {
  throw new Error("No `loadModule` function provided to `compile`");
}
function ma() {
  throw new Error("No `loadStylesheet` function provided to `compile`");
}
function ga(t) {
  let r = 0, i = null;
  for (let e of d(t, " ")) e === "reference" ? r |= 2 : e === "inline" ? r |= 1 : e === "default" ? r |= 4 : e === "static" ? r |= 8 : e.startsWith("prefix(") && e.endsWith(")") && (i = e.slice(7, -1));
  return [r, i];
}
var De = ((u2) => (u2[u2.None = 0] = "None", u2[u2.AtApply = 1] = "AtApply", u2[u2.AtImport = 2] = "AtImport", u2[u2.JsPluginCompat = 4] = "JsPluginCompat", u2[u2.ThemeFunction = 8] = "ThemeFunction", u2[u2.Utilities = 16] = "Utilities", u2[u2.Variants = 32] = "Variants", u2[u2.AtTheme = 64] = "AtTheme", u2))(De || {});
async function $i(t, { base: r = "", from: i, loadModule: e = da, loadStylesheet: n = ma } = {}) {
  let s = 0;
  t = [ce({ base: r }, t)], s |= await Lt(t, r, n, 0, i !== void 0);
  let a = null, p = new it(), u2 = /* @__PURE__ */ new Map(), f2 = /* @__PURE__ */ new Map(), m = [], d2 = null, c = null, w2 = [], h2 = [], y2 = [], x2 = [], T2 = null;
  O2(t, (b2, j2) => {
    if (b2.kind !== "at-rule") return;
    let R2 = qe(j2);
    if (b2.name === "@tailwind" && (b2.params === "utilities" || b2.params.startsWith("utilities"))) {
      if (c !== null) return E2.Replace([]);
      if (R2.context.reference) return E2.Replace([]);
      let K2 = d(b2.params, " ");
      for (let L2 of K2) if (L2.startsWith("source(")) {
        let _2 = L2.slice(7, -1);
        if (_2 === "none") {
          T2 = _2;
          continue;
        }
        if (_2[0] === '"' && _2[_2.length - 1] !== '"' || _2[0] === "'" && _2[_2.length - 1] !== "'" || _2[0] !== "'" && _2[0] !== '"') throw new Error("`source(…)` paths must be quoted.");
        T2 = { base: R2.context.sourceBase ?? R2.context.base, pattern: _2.slice(1, -1) };
      }
      c = b2, s |= 16;
    }
    if (b2.name === "@utility") {
      if (R2.parent !== null) throw new Error("`@utility` cannot be nested.");
      if (b2.nodes.length === 0) throw new Error(`\`@utility ${b2.params}\` is empty. Utilities should include at least one property.`);
      let K2 = Tr(b2);
      if (K2 === null) {
        if (!b2.params.endsWith("-*")) {
          if (b2.params.endsWith("*")) throw new Error(`\`@utility ${b2.params}\` defines an invalid utility name. A functional utility must end in \`-*\`.`);
          if (b2.params.includes("*")) throw new Error(`\`@utility ${b2.params}\` defines an invalid utility name. The dynamic portion marked by \`-*\` must appear once at the end.`);
        }
        throw new Error(`\`@utility ${b2.params}\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter.`);
      }
      m.push(K2);
    }
    if (b2.name === "@source") {
      if (b2.nodes.length > 0) throw new Error("`@source` cannot have a body.");
      if (R2.parent !== null) throw new Error("`@source` cannot be nested.");
      let K2 = false, L2 = false, _2 = b2.params;
      if (_2[0] === "n" && _2.startsWith("not ") && (K2 = true, _2 = _2.slice(4)), _2[0] === "i" && _2.startsWith("inline(") && (L2 = true, _2 = _2.slice(7, -1)), _2[0] === '"' && _2[_2.length - 1] !== '"' || _2[0] === "'" && _2[_2.length - 1] !== "'" || _2[0] !== "'" && _2[0] !== '"') throw new Error("`@source` paths must be quoted.");
      let M2 = _2.slice(1, -1);
      if (L2) {
        let q2 = K2 ? x2 : y2, H2 = d(M2, " ");
        for (let ae of H2) for (let le of gt(ae)) q2.push(le);
      } else h2.push({ base: R2.context.base, pattern: M2, negated: K2 });
      return E2.ReplaceSkip([]);
    }
    if (b2.name === "@variant" && (R2.parent === null ? b2.nodes.length === 0 ? b2.name = "@custom-variant" : (O2(b2.nodes, (K2) => {
      if (K2.kind === "at-rule" && K2.name === "@slot") return b2.name = "@custom-variant", E2.Stop;
    }), b2.name === "@variant" && w2.push(b2)) : w2.push(b2)), b2.name === "@custom-variant") {
      if (R2.parent !== null) throw new Error("`@custom-variant` cannot be nested.");
      let [K2, L2] = d(b2.params, " ");
      if (!dt.test(K2)) throw new Error(`\`@custom-variant ${K2}\` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number.`);
      if (b2.nodes.length > 0 && L2) throw new Error(`\`@custom-variant ${K2}\` cannot have both a selector and a body.`);
      if (b2.nodes.length === 0) {
        if (!L2) throw new Error(`\`@custom-variant ${K2}\` has no selector or body.`);
        let _2 = d(L2.slice(1, -1), ",");
        if (_2.length === 0 || _2.some((H2) => H2.trim() === "")) throw new Error(`\`@custom-variant ${K2} (${_2.join(",")})\` selector is invalid.`);
        let M2 = [], q2 = [];
        for (let H2 of _2) H2 = H2.trim(), H2[0] === "@" ? M2.push(H2) : q2.push(H2);
        u2.set(K2, (H2) => {
          H2.variants.static(K2, (ae) => {
            let le = [];
            q2.length > 0 && le.push(G2(q2.join(", "), ae.nodes));
            for (let o of M2) le.push(Z2(o, ae.nodes));
            ae.nodes = le;
          }, { compounds: Re([...q2, ...M2]) });
        }), f2.set(K2, /* @__PURE__ */ new Set());
      } else {
        let _2 = /* @__PURE__ */ new Set();
        O2(b2.nodes, (M2) => {
          M2.kind === "at-rule" && M2.name === "@variant" && _2.add(M2.params);
        }), u2.set(K2, (M2) => {
          M2.variants.fromAst(K2, b2.nodes, M2);
        }), f2.set(K2, _2);
      }
      return E2.ReplaceSkip([]);
    }
    if (b2.name === "@media") {
      let K2 = d(b2.params, " "), L2 = [];
      for (let _2 of K2) if (_2.startsWith("source(")) {
        let M2 = _2.slice(7, -1);
        O2(b2.nodes, (q2) => {
          if (q2.kind === "at-rule" && q2.name === "@tailwind" && q2.params === "utilities") return q2.params += ` source(${M2})`, E2.ReplaceStop([ce({ sourceBase: R2.context.base }, [q2])]);
        });
      } else if (_2.startsWith("theme(")) {
        let M2 = _2.slice(6, -1), q2 = M2.includes("reference");
        O2(b2.nodes, (H2) => {
          if (H2.kind !== "context") {
            if (H2.kind !== "at-rule") {
              if (q2) throw new Error('Files imported with `@import "…" theme(reference)` must only contain `@theme` blocks.\nUse `@reference "…";` instead.');
              return E2.Continue;
            }
            if (H2.name === "@theme") return H2.params += " " + M2, E2.Skip;
          }
        });
      } else if (_2.startsWith("prefix(")) {
        let M2 = _2.slice(7, -1);
        O2(b2.nodes, (q2) => {
          if (q2.kind === "at-rule" && q2.name === "@theme") return q2.params += ` prefix(${M2})`, E2.Skip;
        });
      } else _2 === "important" ? a = true : _2 === "reference" ? b2.nodes = [ce({ reference: true }, b2.nodes)] : L2.push(_2);
      if (L2.length > 0) b2.params = L2.join(" ");
      else if (K2.length > 0) return E2.Replace(b2.nodes);
      return E2.Continue;
    }
    if (b2.name === "@theme") {
      let [K2, L2] = ga(b2.params);
      if (s |= 64, R2.context.reference && (K2 |= 2), L2) {
        if (!pa.test(L2)) throw new Error(`The prefix "${L2}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
        p.prefix = L2;
      }
      return O2(b2.nodes, (_2) => {
        if (_2.kind === "at-rule" && _2.name === "@keyframes") return p.addKeyframes(_2), E2.Skip;
        if (_2.kind === "comment") return;
        if (_2.kind === "declaration" && _2.property.startsWith("--")) {
          p.add(Ve(_2.property), _2.value ?? "", K2, _2.src);
          return;
        }
        let M2 = re2([F2(b2.name, b2.params, [_2])]).split(`
`).map((q2, H2, ae) => `${H2 === 0 || H2 >= ae.length - 2 ? " " : ">"} ${q2}`).join(`
`);
        throw new Error(`\`@theme\` blocks must only contain custom properties or \`@keyframes\`.

${M2}`);
      }), d2 ? E2.ReplaceSkip([]) : (d2 = G2(":root, :host", []), d2.src = b2.src, E2.ReplaceSkip(d2));
    }
  });
  let A2 = ri(p);
  if (a && (A2.important = a), x2.length > 0) for (let b2 of x2) A2.invalidCandidates.add(b2);
  s |= await ki({ designSystem: A2, base: r, ast: t, loadModule: e, sources: h2 });
  for (let b2 of u2.keys()) A2.variants.static(b2, () => {
  });
  for (let b2 of Ci(f2, { onCircularDependency(j2, R2) {
    let K2 = re2(j2.map((L2, _2) => F2("@custom-variant", L2, [F2("@variant", j2[_2 + 1] ?? R2, [])]))).replaceAll(";", " { … }").replace(`@custom-variant ${R2} {`, `@custom-variant ${R2} { /* ← */`);
    throw new Error(`Circular dependency detected in custom variants:

${K2}`);
  } })) u2.get(b2)?.(A2);
  for (let b2 of m) b2(A2);
  if (d2) {
    let b2 = [];
    for (let [R2, K2] of A2.theme.entries()) {
      if (K2.options & 2) continue;
      let L2 = l3(ve(R2), K2.value);
      L2.src = K2.src, b2.push(L2);
    }
    let j2 = A2.theme.getKeyframes();
    for (let R2 of j2) t.push(ce({ theme: true }, [W2([R2])]));
    d2.nodes = [ce({ theme: true }, b2)];
  }
  if (s |= It(t, A2), s |= Ke(t, A2), s |= Ae(t, A2), c) {
    let b2 = c;
    b2.kind = "context", b2.context = {};
  }
  return O2(t, (b2) => {
    if (b2.kind === "at-rule") return b2.name === "@utility" ? E2.Replace([]) : E2.Skip;
  }), { designSystem: A2, ast: t, sources: h2, root: T2, utilitiesNode: c, features: s, inlineCandidates: y2 };
}
async function ha(t, r = {}) {
  let { designSystem: i, ast: e, sources: n, root: s, utilitiesNode: a, features: p, inlineCandidates: u2 } = await $i(t, r);
  e.unshift(rt(`! tailwindcss v${Ht} | MIT License | https://tailwindcss.com `));
  function f2(h2) {
    i.invalidCandidates.add(h2);
  }
  let m = /* @__PURE__ */ new Set(), d2 = null, c = 0, w2 = false;
  for (let h2 of u2) i.invalidCandidates.has(h2) || (m.add(h2), w2 = true);
  return { sources: n, root: s, features: p, build(h2) {
    if (p === 0) return t;
    if (!a) return d2 ??= Se(e, i, r.polyfills), d2;
    let y2 = w2, x2 = false;
    w2 = false;
    let T2 = m.size;
    for (let b2 of h2) if (!i.invalidCandidates.has(b2)) if (b2[0] === "-" && b2[1] === "-") {
      let j2 = i.theme.markUsedVariable(b2);
      y2 ||= j2, x2 ||= j2;
    } else m.add(b2), y2 ||= m.size !== T2;
    if (!y2) return d2 ??= Se(e, i, r.polyfills), d2;
    let A2 = Ce(m, i, { onInvalidCandidate: f2 }).astNodes;
    return r.from && O2(A2, (b2) => {
      b2.src ??= a.src;
    }), !x2 && c === A2.length ? (d2 ??= Se(e, i, r.polyfills), d2) : (c = A2.length, a.nodes = A2, d2 = Se(e, i, r.polyfills), d2);
  } };
}
async function bu(t, r = {}) {
  let i = $e(t, { from: r.from }), e = await ha(i, r), n = i, s = t;
  return { ...e, build(a) {
    let p = e.build(a);
    return p === n || (s = re2(p, !!r.from), n = p), s;
  }, buildSourceMap() {
    return xi({ ast: n });
  } };
}
async function xu(t, r = {}) {
  return (await $i($e(t), r)).designSystem;
}
function va() {
  throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}
export {
  De as Features,
  Ct as Polyfills,
  xu as __unstable__loadDesignSystem,
  bu as compile,
  ha as compileAst,
  va as default
};
//# sourceMappingURL=tailwindcss.js.map
